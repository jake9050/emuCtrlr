<?xml version="1.0" encoding="UTF-8"?>

<panel name="Ctrlr Panel" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="" panelAuthorEmail="" panelAuthorUrl="" panelAuthorDesc=""
       panelVersionMajor="1" panelVersionMinor="12" panelVersionName="Buttcheek"
       panelVendor="" panelDevice="" panelMidiSnapshotAfterLoad="0"
       panelMidiSnapshotAfterProgramChange="0" panelMidiSnapshotDelay="10"
       panelMidiInputChannelDevice="1" panelMidiInputDevice="AMT IN 3"
       panelMidiControllerChannelDevice="1" panelMidiControllerDevice="-- None"
       panelMidiOutputChannelDevice="1" panelMidiOutputDevice="AMT OUT 3"
       panelMidiInputFromHost="0" panelMidiInputChannelHost="1" panelMidiOutputToHost="0"
       panelMidiOutputChannelHost="1" panelMidiThruH2H="0" panelMidiThruH2HChannelize="0"
       panelMidiThruH2D="0" panelMidiThruH2DChannelize="0" panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0" panelMidiThruD2H="0" panelMidiThruD2HChannelize="0"
       panelMidiRealtimeIgnore="1" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" luaPanelMidiReceived="midiReceived"
       luaPanelLoaded="panelLoaded" luaPanelBeforeLoad="" luaPanelSaved=""
       luaPanelProgramChanged="" luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       panelFilePath="C:\Users\Jake\Google Drive\Emu ctrlr\Build0429.panel"
       panelUID="8.H1p5YVWImwA" panelModulatorListColumns="&lt;TABLELAYOUT sortedCol=&quot;547&quot; sortForwards=&quot;1&quot;&gt;&lt;COLUMN id=&quot;547&quot; visible=&quot;1&quot; width=&quot;178&quot;/&gt;&lt;COLUMN id=&quot;1&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;546&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;548&quot; visible=&quot;1&quot; width=&quot;78&quot;/&gt;&lt;COLUMN id=&quot;98&quot; visible=&quot;1&quot; width=&quot;74&quot;/&gt;&lt;COLUMN id=&quot;102&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;103&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;109&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;493&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;490&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;494&quot; visible=&quot;1&quot; width=&quot;78&quot;/&gt;&lt;COLUMN id=&quot;16&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;17&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;18&quot; visible=&quot;1&quot; width=&quot;69&quot;/&gt;&lt;/TABLELAYOUT&gt;"
       panelModulatorListCsvDelimiter="," panelModulatorListXmlRoot="ctrlrModulatorList"
       panelModulatorListXmlModulator="ctrlrModulator" panelModulatorListSortOption="0"
       panelGlobalVariables="0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0"
       panelResources="" panelPropertyDisplayIDs="1" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff4364ff" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;13;0;0;0;0;1"
       ctrlrMenuItemSeparatorColour="33000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff4364ff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;13;0;0;0;0;1"
       deviceCapIdentity="0" deviceCapFirmware="0" deviceCapEditBuffer="0"
       deviceCapBank="0" deviceCapProgram="0" deviceCapAbout="0" panelMidiControllerChannel="1"
       panelIndex="0" uiPanelModulatorListViewTree="0" uiLuaConsoleSnips="SetChorusWidth(10,127)$paramReqMsg(43,00)$panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;f0 18 21 01 55 01 02 2c 00 7f f7&quot;)))$panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;f0 18 21 01 55 03 2b 00 f7&quot;)))$panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;f0 18 21 01 55 02 01 2b 00 00 f7&quot;)))$paramChangeMsg(43,0,10)$paramReqMsg(83,00)$console(string.format(panel:getModulatorByName(&quot;keyTranspose&quot;):getValueMapped()))$what(panel:getModulatorByName(&quot;keyTranspose&quot;))"
       panelCtrlrRevision="1300">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LayerEditor" uiChildWindowState="1310 284 476 466">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="679 228 1763 728">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA Method&quot; scrollPos=&quot;104&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;Midi Received&quot;&gt;&#13;&#10;    &lt;OPEN id=&quot;single parameter responses parsing&quot;&gt;&#13;&#10;      &lt;OPEN id=&quot;tuning&quot;/&gt;&#13;&#10;      &lt;OPEN id=&quot;filter&quot;/&gt;&#13;&#10;    &lt;/OPEN&gt;&#13;&#10;  &lt;/OPEN&gt;&#13;&#10;  &lt;OPEN id=&quot;Midi to send&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;GUI&quot;&gt;&#13;&#10;    &lt;OPEN id=&quot;Layers&quot;/&gt;&#13;&#10;  &lt;/OPEN&gt;&#13;&#10;  &lt;OPEN id=&quot;modulatorsChangedActions&quot;&gt;&#13;&#10;    &lt;OPEN id=&quot;Tuning&quot;/&gt;&#13;&#10;  &lt;/OPEN&gt;&#13;&#10;  &lt;OPEN id=&quot;panel loading&quot;/&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA Method/Midi Received/single parameter responses parsing/tuning/voiceTranspose&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;1434f89795e8637a0eed62f0a68f8086:ba7a891f708b23628f21d899243ced95:504ace49b8c179ca093137ecdf4de86f:9abd5f1d4672a1515f2ca7aafa0a8ff8:9deff3b51b82805f4afeb90ac40ae254"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="ModulatorList" uiChildWindowState="540 210 1145 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="775 146 1120 788">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="CapabilitiesEditor" uiChildWindowState="560 270 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDILibrary" uiChildWindowState="531 350 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="Mutator" uiChildWindowState="560 270 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary luaMidiLibrarySend="-- None" luaMidiLibraryRequest="-- None"
               luaMidiLibraryProcess="-- None" luaMidiLibraryConfirm="-- None"
               luaMidiLibraryUndefined="-- None" midiLibraryCustomRequests=""
               luaDevUnitReq="-- None" luaDevUnitHandler="-- None" luaMidiLibraryGet="-- None"
               luaMidiLibraryGetProc="-- None" luaMidiLibrarySendProc="-- None"
               luaMidiLibraryIdentitySend="-- None" luaMidiLibraryIdentityProc="-- None"
               midiLibraryTreeState="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;midiLibrary&quot; scrollPos=&quot;0&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;Emu 6400 classic test&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;">
    <midiLibraryBank name="Emu 6400 classic test" description="Hecticcc settings"
                     lsb="0" msb="0" number="0" midiLibraryCanGetItem="1" midiLibraryCanSendItem="1">
      <midiLibraryProgram name="New program" description="" number="0" midiLibraryCanGetItem="1"
                          midiLibraryCanSendItem="1">
        <panelState panelVersionMajor="1" panelVersionMinor="6" time="1371407232236">
          <value name="cutoff" value="2"/>
          <value name="filterType" value="10"/>
          <value name="resAndGain" value="0"/>
          <value name="coarseTune" value="72"/>
          <value name="cord00source" value="5"/>
          <value name="cord00dest" value="2"/>
          <value name="cord00amt" value="-50"/>
          <value name="voiceFineTune" value="64"/>
          <value name="keyTranspose" value="24"/>
          <value name="cord01source" value="39"/>
          <value name="cord01dest" value="3"/>
          <value name="cord01amt" value="6"/>
          <value name="cord02source" value="4"/>
          <value name="cord02dest" value="3"/>
          <value name="cord02amt" value="0"/>
          <value name="cord03source" value="10"/>
          <value name="cord03dest" value="44"/>
          <value name="cord03amt" value="13"/>
          <value name="lfoRate" value="64"/>
        </panelState>
      </midiLibraryProgram>
      <midiLibraryProgram name="New program" description="" number="0" midiLibraryCanGetItem="1"
                          midiLibraryCanSendItem="1">
        <panelState panelVersionMajor="1" panelVersionMinor="7" time="1373034896740">
          <value name="cutoff" value="255"/>
          <value name="filterType" value="0"/>
          <value name="resAndGain" value="0"/>
          <value name="listbox" value="0"/>
          <value name="dumpRequest" value="0"/>
          <value name="presetNumber" value="3"/>
          <value name="filtertype" value="10"/>
          <value name="modulator-2" value="5"/>
          <value name="coarseTune" value="72"/>
          <value name="cord00source" value="0"/>
          <value name="cord00dest" value="0"/>
          <value name="cord00amt" value="0"/>
          <value name="sampleZoneList" value="0"/>
          <value name="voiceFineTune" value="64"/>
          <value name="keyTranspose" value="24"/>
          <value name="cord01source" value="0"/>
          <value name="cord01dest" value="0"/>
          <value name="cord01amt" value="0"/>
          <value name="cord02source" value="0"/>
          <value name="cord02dest" value="0"/>
          <value name="cord02amt" value="0"/>
          <value name="modulator-3" value="1"/>
          <value name="cord03source" value="0"/>
          <value name="cord03dest" value="0"/>
          <value name="cord03amt" value="0"/>
          <value name="lfoRate" value="0"/>
          <value name="cord04source" value="0"/>
          <value name="cord04dest" value="0"/>
          <value name="cord04amt" value="0"/>
          <value name="voiceNonTranspose" value="0"/>
          <value name="sampleZoneRootNote" value="72"/>
          <value name="sampleLowKey" value="0"/>
          <value name="sampleHighKey" value="127"/>
          <value name="sampleZoneKeyWinFade" value="0"/>
          <value name="copyVoice" value="1"/>
          <value name="ampEnvelopeGraph" value="0"/>
          <value name="filterEnvAtk1Rate" value="0"/>
          <value name="filterEnvAtk1Level" value="0"/>
          <value name="filterEnvAtk2Rate" value="0"/>
          <value name="filterEnvAtk2Level" value="0"/>
          <value name="filterEnvDcy1Rate" value="0"/>
          <value name="filterEnvDcy1Level" value="0"/>
          <value name="filterEnvDcy2Rate" value="0"/>
          <value name="filterEnvDcy2Level" value="0"/>
          <value name="filterEnvRls1Rate" value="0"/>
          <value name="filterEnvRls1Level" value="0"/>
          <value name="filterEnvRls2Rate" value="0"/>
          <value name="filterEnvRls2Level" value="0"/>
        </panelState>
      </midiLibraryProgram>
    </midiLibraryBank>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="helper methods" uuid="e0235b34ff88b02811b122c9411c4c34">
        <luaMethod luaMethodName="lsb" luaMethodCode="function lsb(x)&#13;&#10;&#13;&#10;&#9;if x ~= nil then&#13;&#10;&#10;&#9;local bi = CtrlrLuaBigInteger(x)&#13;&#10;&#9;local lsb = bi:getBitRangeAsInt (0,7)&#13;&#10;&#13;&#10;&#9;return (lsb)&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="97cdb7a1afb01ef85b07c30a70de6799"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="msb" luaMethodCode="function msb(x)&#10;&#13;&#10;if x ~= nil then&#13;&#10;&#10;local bi = CtrlrLuaBigInteger(x)&#13;&#10;local msb = bi:getBitRangeAsInt (7,7)&#13;&#10;&#13;&#10;return (msb)&#13;&#10;end&#10;end&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="8ca4e4e8e0abec1af261650f5d85e4fa"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="dumpInfo" luaMethodCode="function dumpInfo()&#13;&#10;&#10;console(string.format(&quot;Dump header received, byte 8 to 11 holds Number of bytes that will follow, LSB first:&quot;))&#13;&#10;data = msg:getRange(8,4)&#13;&#10;console(data:toHexString(1))&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="9131cb499deb0cc5c1b4d6c700477abe"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="printk0" luaMethodCode="function printk0()&#13;&#10;&#13;&#10;for i = 1,#k1, 1 do console(string.format(k1[i])) end&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="dd8f8a1919e5fcff47df9c92100b4be3"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="splitToInt" luaMethodCode="function splitToInt(x,y) -- ls ms to range between 0-255&#10;&#13;&#10;--console(string.format(&quot;splitfunction received ls %.d and ms %.d&quot;, x, y))&#13;&#10;&#13;&#10;if y &lt; 1 then result = x &#13;&#10;&#13;&#10;&#13;&#10;elseif y == 1 then &#13;&#10;&#13;&#10;result = x+128&#13;&#10;end&#13;&#10;&#13;&#10;--console(string.format(result))&#13;&#10;return (result)&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="76b9515898c003e7852fce8adaed8420"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="intToSplit" luaMethodCode="function intToSplit(val)&#13;&#10;&#13;&#10;local input = (128*128)-val&#13;&#10;local bi = CtrlrLuaBigInteger(input)&#13;&#10;local ls = bi:getBitRangeAsInt(0,7)&#13;&#10;local ms = bi:getBitRangeAsInt(7,7)&#13;&#10;end&#10;return (ls),(ms)&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f165e40e10befbf47c97bcce9a53e44e"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="raw" luaMethodCode="function raw(x,y)&#13;&#10;&#13;&#10;&#9;if y ~= nil then&#13;&#10;&#9;rawval = math.floor(x*y)/127&#13;&#10;&#13;&#10;&#9;elseif y == nil then &#13;&#10;&#9;y = 1&#13;&#10;&#9;rawval = x*y&#13;&#10;&#9;end&#13;&#10;&#13;&#10;--console(string.format(rawval))&#13;&#10;end&#10;&#13;&#10;return (rawval)&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="255505b927f64184ebb84af1b9451625"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="ctune" luaMethodCode="function ctune(x,y)&#13;&#10;&#13;&#10;if y == 127 then -- its negative value&#10;&#13;&#10;local t = CtrlrLuaBigInteger(16384-x)&#13;&#10;local coarsetune = t:getBitRangeAsInt(0,7)&#13;&#10;&#13;&#10;elseif y ~= 127 then -- positive value&#13;&#10;coarsetune = x&#13;&#10;end&#13;&#10;--console(string.format(&quot;coarsetune is &quot;..coarsetune*-1))&#13;&#10;&#13;&#10;&#10;end&#13;&#10;return (coarsetune)"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="4ce22391871c3f0482af3131fc351f38"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="lfoValues" luaMethodCode="function lfoValues()&#10;&#9;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;panel:getComponent(&quot;lfoRate&quot;):setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..lfoArray)&#13;&#10;end&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="54036dba84cc0e0e5518b49abdd3d059"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="FilterGainValues" luaMethodCode="function FilterGainValues()&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;panel:getComponent(&quot;morphParam03&quot;):setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..dbArray)&#13;&#10;panel:getComponent(&quot;morphParam06&quot;):setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..dbArray)&#13;&#10;&#13;&#10;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="c3f4e39c607589f0e6ca02edee59a6b5"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="MorphFreqArray" luaMethodCode="function MorphFreqArray(x)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;if x ~= nil then&#13;&#10;&#9;if x == 1 then&#13;&#10;&#13;&#10;&#10;&#9;morphFreqArray = &quot;&quot;&#13;&#10;&#9;local morphArrayValues = {83,87,91,95,99,103,107,111,116,122,128,134,140,146,152,158,164,170,178,186,194,202,218,218,226,236,246,256,266,276,287,299,311,323,335,349,363,377,391,407,423,439,455,473,491,509,529,549,570,592,614,637,661,686,712,738,766,794,824,855,887,920,954,990,1027,1065,1105,1146,1188,1232,1278,1325,1374,1425,1477,1531,1587,1645,1705,1768,1833,1900,1969,2041,2116,2193,2273,2356,2442,2531,2624,2719,2818,2921,3028,3139,3254,3373,3496,3623,3754,3891,4032,4179,4331,4488,4651,4820,4995,5177,5365,5559,5761,5970,6186,6410,6642,6882,7132,7390,7658,7936,8223,8521,8830,9150,9481,9824}&#13;&#10;&#13;&#10;&#9;&#9;for i = 1, 128 do&#13;&#10;&#13;&#10;&#9;&#9;local a = string.format(&quot;%.d Hz=&quot;..(i-1)..&quot;\n&quot;,morphArrayValues[i])  --make string to populate list&#13;&#10;&#9;&#9;morphFreqArray = morphFreqArray..a&#9;&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphFreqArray)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphFreqArray)&#13;&#10;&#13;&#10;&#9;morphHiFreqArray = &quot;&quot;&#13;&#10;&#9;&#9;for i = 1, 128 do&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;local b = string.format(&quot;%.d Hz=&quot;..(i-64)..&quot;\n&quot;,morphArrayValues[i])  --make string to populate list&#13;&#10;&#9;&#9;morphHiFreqArray = morphHiFreqArray..b&#9;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphHiFreqArray)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#9;&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphHiFreqArray)&#13;&#10;&#13;&#10;&#13;&#10;&#9;elseif x == 2 then&#13;&#10;&#13;&#10;&#9;morphDbArray = &quot;&quot;&#13;&#10;&#13;&#10;&#9;&#9;for i = 1, 128 do&#13;&#10;&#9;&#13;&#10;&#9;&#9;local a = string.format(&quot;%.d=&quot;..(i-1)..&quot;\n&quot;,i-65)  --make string to populate list&#13;&#10;&#9;&#9;morphDbArray = morphDbArray..a&#9;&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;local morphArrayValues = {83,87,91,95,99,103,107,111,116,122,128,134,140,146,152,158,164,170,178,186,194,202,218,218,226,236,246,256,266,276,287,299,311,323,335,349,363,377,391,407,423,439,455,473,491,509,529,549,570,592,614,637,661,686,712,738,766,794,824,855,887,920,954,990,1027,1065,1105,1146,1188,1232,1278,1325,1374,1425,1477,1531,1587,1645,1705,1768,1833,1900,1969,2041,2116,2193,2273,2356,2442,2531,2624,2719,2818,2921,3028,3139,3254,3373,3496,3623,3754,3891,4032,4179,4331,4488,4651,4820,4995,5177,5365,5559,5761,5970,6186,6410,6642,6882,7132,7390,7658,7936,8223,8521,8830,9150,9481,9824}&#13;&#10;&#13;&#10;    morphFreqArray = &quot;&quot;&#13;&#10;&#13;&#10;&#9;&#9;for i = 1, 128 do&#13;&#10;&#13;&#10;&#9;&#9;local a = string.format(&quot;%.d Hz=&quot;..(i-1)..&quot;\n&quot;,morphArrayValues[i])  --make string to populate list&#13;&#10;&#9;&#9;morphFreqArray = morphFreqArray..a&#9;&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphFreqArray)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphFreqArray)&#13;&#10;&#13;&#10;&#13;&#10;--console(string.format(morphFreqArray))&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphDbArray)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..morphDbArray)&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;end&#13;&#10;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="3234bc802d9acb24a09d95e847eec9b7"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Midi Received" uuid="e0105d10b991b8061fa318c74efe33db">
        <luaMethodGroup name="preset dump parsing" uuid="68f84cac613d0a7dd96f9665d9d5f045">
          <luaMethod luaMethodName="unlinkedPreset" luaMethodCode="function unlinkedPreset()&#13;&#10;&#10;--inform we're here&#13;&#10;console(string.format(&quot;no links in preset, function unlinkedPreset activated&quot;))&#13;&#10;&#13;&#10;&#13;&#10;-- 65 &amp; 66 number of voices in preset, what follows is info of each voice&#13;&#10;-- 69 &amp; 70 samplezone markers  &#13;&#10;-- 127 127 means multisample, what follows are sample zone parameters for each samplezone, other values is nymber of sample in memory of sampler&#13;&#10;-- if its not multisample (eg number is 1) then voice data follows, starting with group number&#13;&#10;&#13;&#10;-- first split up the voices in seperate blocks of data&#13;&#10;&#13;&#10;-- IF singlesample voice then amount of bytes to grab is 294 (including sample count word)&#13;&#10;&#13;&#10;--console(string.format(&quot;voicecount of unlinked preset is %.d&quot;,splitToInt(k1[65],k1[66])))&#13;&#10;&#13;&#10;sampletype = string.format(&quot;%.d %.d&quot;, k1[69],k1[70])&#13;&#10;--console(string.format(sampletype))&#13;&#10;&#13;&#10;&#9;&#9;if sampletype == &quot;127 127&quot; then&#13;&#10;&#9;&#9;console(string.format(&quot;Multisample voice in unlinked preset&quot;))&#13;&#10;&#9;&#9;unlinkedMultiSamplePresetParse()&#13;&#10;&#13;&#10;--printk0()&#13;&#10;&#13;&#10;&#9;&#9;elseif sampletype ~= &quot;127 127&quot; then&#13;&#10;&#9;&#9;console(string.format(&quot;Single sample voice in unlinked preset&quot;))&#13;&#10;&#9;&#9;console(string.format(&quot;Total data bytes in k1 is %.d&quot;,#k1))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="df9862d9552ea4b86b8bcec756156fcd"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="linkedPreset" luaMethodCode="function linkedPreset()&#13;&#10;-- 65 &amp; 66 number of voices in preset, what follows is info of each voice&#13;&#10;-- 69 &amp; 70 single or multisample marker for voice in sequence&#13;&#10;&#13;&#10;links = splitToInt(k1[63], k1[64])&#10;console(string.format(&quot;number of links %.d&quot;,links)) &#13;&#10;&#13;&#10;if links ~= &quot;&quot; then &#13;&#10;&#13;&#10;&#13;&#10;stype = links*26&#13;&#10;&#13;&#10;&#9;voicetype = string.format(&quot;%.d %.d&quot;, k1[69+stype],k1[70+stype])&#13;&#10;&#13;&#10;&#9;&#9;if voicetype == &quot;127 127&quot; then&#13;&#10;&#9;&#9;console(string.format(&quot;Multisample voice in linked preset&quot;))&#13;&#10;&#13;&#10;&#9;&#9;elseif voicetype ~= &quot;127 127&quot; then&#13;&#10;&#9;&#9;console(string.format(&quot;Single sample voice in linked preset&quot;))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="ddf8473ce30825276f7b21727e76e506"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="populateVoiceList" luaMethodCode="function populateVoiceList()&#13;&#10;&#13;&#10;&#10;&#9;if links == 0 then --no links in preset so num of voices is two bytes further&#13;&#10;&#9;--console(string.format(&quot;populating voicelist of unlinked preset now&quot;))&#13;&#10;&#13;&#10;&#9;amount = &quot;&quot;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; &#9; --empty string before loop kicks off&#13;&#10;&#9;&#9;for i = 1,k1[65] do &#9;&#9;&#9;&#9;&#9; --loop for amount of voices found&#13;&#10;&#9;&#9;a = string.format(&quot;Voice %.d=%.d\n&quot;,i,i) --make string to populate list&#13;&#10;&#9;&#9;amount = amount..a&#9;&#9;&#9;&#9;&#9;&#9; --concat results to empty string&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;elseif links &gt; 0 then --links in preset so num of voices is in 63 + 13*2 words+1 bytes&#13;&#10;&#13;&#10;&#9;--console(string.format(&quot;links in preset, populating voicelist now&quot;))&#13;&#10;&#13;&#10;&#9;voiceindex = (links*26) &#9;&#9;&#9;&#9;  --shift place to look for amount of voices by num of bytes for links&#13;&#10;&#9;voices = k1[65+voiceindex]&#13;&#10;&#9;console(string.format(&quot;voicecount is %.d &quot;,voices))&#13;&#10;&#9;amount = &quot;&quot;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; &#9;  --empty string before loop kicks off&#13;&#10;&#9;&#9;for i = 1,voices do &#9;&#9;&#9;&#9;&#9;  --loop for amount of voices found&#13;&#10;&#9;&#9;a = string.format(&quot;Voice %.d=%.d\n&quot;,i,i)  --make string to populate list&#13;&#10;&#9;&#9;amount = amount..a&#9;&#9;&#9;&#9;&#9;&#9;  --concat results to empty string&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;list = panel:getModulatorByName(&quot;listbox&quot;):getComponent()&#13;&#10;list:setProperty(&quot;uiListBoxContent&quot;, amount, true) --put string in right place - PROFIT!&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="cbdb4e1d15d2037505f6782635132a4e"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="updateModulatorsFromMidi" luaMethodCode="function updateModulatorsFromMidi() -- triggered by eof message after preset dump&#10;&#13;&#10;&#13;&#10;-- 63 &amp; 64 number of links if any - if links exist 26 bytes per link follow&#13;&#10;&#13;&#10;&#9;&#13;&#10;--console(string.format(&quot;updating modulators from received preset dump&quot;))&#13;&#10;&#13;&#10;--deconstruct the dump into relevant pieces, ordered by sequence in dump&#13;&#10;&#13;&#10;--preset name - 16 bytes of acsii values&#13;&#10;&#13;&#10;name = {}&#13;&#10;for i = 1, 16 do&#13;&#10;s = k1[2+i]&#13;&#10;table.insert(name,i,s)&#13;&#10;end&#13;&#10;&#13;&#10;-- make string out of name table&#13;&#10;nameChars = &quot;&quot;&#13;&#10;for i = 1, #name do nameChars = nameChars..(string.format(&quot;%.c&quot;,name[i])) end&#13;&#10;--show name onscreen&#13;&#10;if #k1 == 6 then presetLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;Empty preset&quot;)&#13;&#10;elseif #k1 ~= 6 then presetLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..nameChars) end&#13;&#10;&#13;&#10;&#13;&#10;--global params - 12 bytes (6 parameters ls/ms)&#13;&#10;&#13;&#10;global = {}&#13;&#10;for i = 1, 12 do&#13;&#10;s = k1[18+i]&#13;&#10;table.insert(global,i,s)&#13;&#10;end&#13;&#10;&#13;&#10;--console(string.format(&quot;Transpose %.d, Volume %.d, ctrl a %.d, ctrl b %.d, ctrl c %.d, ctrl d %.d&quot;,splitToInt(global[1], global[2]),splitToInt(global[3], global[4]),splitToInt(global[5], global[6]),splitToInt(global[7], global[8]),splitToInt(global[9], global[10]),splitToInt(global[11], global[12])))&#13;&#10;&#13;&#10;-- 34 bytes of fx parameters - not able to test cuz no fx installed.... 56 total bytes into msg&#13;&#10;&#13;&#10;&#13;&#10;--links? &#13;&#10;&#13;&#10;links = splitToInt(k1[63], k1[64])&#13;&#10;&#13;&#10;if links == 0 then unlinkedPreset()&#13;&#10;&#13;&#10;elseif links &gt; 0 then linkedPreset() end&#13;&#10;&#13;&#10;&#13;&#10;populateVoiceList()&#13;&#10;panel:getModulatorByName(&quot;listbox&quot;):setModulatorValue(0, false, true, false) -- set to 0 to mimick sampler behaviour (selecting a new preset automatically targets first voice in that preset)&#13;&#10;panel:getModulatorByName(&quot;sampleZoneList&quot;):setModulatorValue(0, false, true, false) -- set to 0 to mimick sampler behaviour (selecting a new voice automatically targets first samplzone in that voice/multisample)&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="dc7b5f3cf2b5d04ac7cb2783482ef34f"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="unlinkedMultiSamplePresetParse" luaMethodCode="function unlinkedMultiSamplePresetParse()&#13;&#10;&#13;&#10;--printk0()&#13;&#10;&#10;console(string.format(&quot;parsing multisample voice data of unlinked preset&quot;))&#13;&#10;&#13;&#10;&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="434a7c751225556b62446acda503e6dd"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="single parameter responses parsing" uuid="9f22295ff1ff90e8c62e1d013581cd73">
          <luaMethodGroup name="cords" uuid="f4cf2f6b8545de2f23c6d0165cbde3cb">
            <luaMethodGroup name="cord value parsing" uuid="343decf00043ed7840bf567ee4c97332">
              <luaMethod luaMethodName="cordSourceMsbOne" luaMethodCode="function cordSourceMsbOne(cordmsb)&#13;&#10;&#10;&#9;if cordmsb == 16 then cordmsb = 51&#13;&#10;&#9;elseif cordmsb == 17 then cordmsb = 52&#13;&#10;&#9;elseif cordmsb == 18 then cordmsb = 53&#13;&#10;&#9;elseif cordmsb == 19 then cordmsb = 54&#13;&#10;&#9;elseif cordmsb == 20 then cordmsb = 55&#13;&#10;&#9;elseif cordmsb == 21 then cordmsb = 56&#13;&#10;&#9;elseif cordmsb == 32 then cordmsb = 57&#13;&#10;&#9;elseif cordmsb == 33 then cordmsb = 58&#13;&#10;&#9;elseif cordmsb == 34 then cordmsb = 59&#13;&#10;&#9;elseif cordmsb == 35 then cordmsb = 60&#13;&#10;&#9;elseif cordmsb == 36 then cordmsb = 61&#13;&#10;&#9;elseif cordmsb == 37 then cordmsb = 62&#13;&#10;&#9;elseif cordmsb == 38 then cordmsb = 63&#13;&#10;&#9;elseif cordmsb == 39 then cordmsb = 64&#13;&#10;&#9;end&#13;&#10;return(cordmsb)&#10;end&#13;&#10;"
                         luaMethodLinkedProperty="" luaMethodSource="0" uuid="70643e7b00dd70b79af297736f3cdd88"
                         luaMethodValid="1"/>
              <luaMethod luaMethodName="cordSourceMsbNil" luaMethodCode="function cordSourceMsbNil(cordlsb)&#13;&#10;&#10;if cordlsb == 1 then cordlsb = 1 &#13;&#10;&#9;elseif cordlsb == 5 then cordlsb = 2&#13;&#10;&#9;elseif cordlsb == 9 then cordlsb = 3&#13;&#10;&#9;elseif cordlsb == 10 then cordlsb = 4&#13;&#10;&#9;elseif cordlsb == 11 then cordlsb = 5&#13;&#10;&#9;elseif cordlsb == 12 then cordlsb = 6&#13;&#10;&#9;elseif cordlsb == 13 then cordlsb = 7&#13;&#10;&#9;elseif cordlsb == 14 then cordlsb = 8&#13;&#10;&#9;elseif cordlsb == 15 then cordlsb = 9&#13;&#10;&#9;elseif cordlsb == 17 then cordlsb = 10&#13;&#10;&#9;elseif cordlsb == 18 then cordlsb = 11&#13;&#10;&#9;elseif cordlsb == 19 then cordlsb = 12&#13;&#10;&#9;elseif cordlsb == 20 then cordlsb = 13&#13;&#10;&#9;elseif cordlsb == 21 then cordlsb = 14&#13;&#10;&#9;elseif cordlsb == 22 then cordlsb = 15&#13;&#10;&#9;elseif cordlsb == 23 then cordlsb = 16&#13;&#10;&#9;elseif cordlsb == 24 then cordlsb = 17&#13;&#10;&#9;elseif cordlsb == 25 then cordlsb = 18&#13;&#10;&#9;elseif cordlsb == 26 then cordlsb = 19&#13;&#10;&#9;elseif cordlsb == 28 then cordlsb = 21&#13;&#10;&#9;elseif cordlsb == 33 then cordlsb = 22&#13;&#10;&#9;elseif cordlsb == 34 then cordlsb = 23&#13;&#10;&#9;elseif cordlsb == 35 then cordlsb = 24&#13;&#10;&#9;elseif cordlsb == 36 then cordlsb = 25&#13;&#10;&#9;elseif cordlsb == 37 then cordlsb = 26&#13;&#10;&#9;elseif cordlsb == 38 then cordlsb = 27&#13;&#10;&#9;elseif cordlsb == 39 then cordlsb = 28 --ok&#13;&#10;&#9;elseif cordlsb == 40 then cordlsb = 29&#13;&#10;&#9;elseif cordlsb == 60 then cordlsb = 30&#13;&#10;&#9;elseif cordlsb == 73 then cordlsb = 31&#13;&#10;&#9;elseif cordlsb == 74 then cordlsb = 32&#13;&#10;&#9;elseif cordlsb == 80 then cordlsb = 33&#13;&#10;&#9;elseif cordlsb == 81 then cordlsb = 34&#13;&#10;&#9;elseif cordlsb == 82 then cordlsb = 35&#13;&#10;&#9;elseif cordlsb == 88 then cordlsb = 36&#13;&#10;&#9;elseif cordlsb == 89 then cordlsb = 37&#13;&#10;&#9;elseif cordlsb == 90 then cordlsb = 38&#13;&#10;&#9;elseif cordlsb == 91 then cordlsb = 39&#13;&#10;&#9;elseif cordlsb == 96 then cordlsb = 39 -- silly but needed because sometimes lfo~ sends 91, sometimes 96 !???&#13;&#10;&#9;elseif cordlsb == 97 then cordlsb = 40&#13;&#10;&#9;elseif cordlsb == 98 then cordlsb = 41&#13;&#10;&#9;elseif cordlsb == 99 then cordlsb = 42&#13;&#10;&#9;elseif cordlsb == 100 then cordlsb = 43&#13;&#10;&#9;elseif cordlsb == 101 then cordlsb = 44&#13;&#10;&#9;elseif cordlsb == 104 then cordlsb = 45&#13;&#10;&#9;elseif cordlsb == 105 then cordlsb = 46&#13;&#10;&#9;elseif cordlsb == 106 then cordlsb = 47&#13;&#10;&#9;elseif cordlsb == 107 then cordlsb = 48&#13;&#10;&#9;elseif cordlsb == 108 then cordlsb = 49&#13;&#10;&#9;elseif cordlsb == 109 then cordlsb = 50&#13;&#10;&#9;end&#13;&#10;--console(string.format(&quot;cordlsb sent out value %.d&quot;,cordlsb))&#10;return(cordlsb)&#13;&#10;end&#13;&#10;"
                         luaMethodLinkedProperty="" luaMethodSource="0" uuid="be3ba52a9586371543d0c8acb6f44585"
                         luaMethodValid="1"/>
            </luaMethodGroup>
            <luaMethod luaMethodName="setCord03amt" luaMethodCode="function setCord03amt(x,y)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;if y == 0 then&#13;&#10;cord03amtMod:setModulatorValue(x,false,false,false)&#13;&#10;elseif y == 127 then&#13;&#10;cord03amtMod:setModulatorValue(x-128,false,false,false)&#10;end&#13;&#10;&#10;&#9;-- Your method code here&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="081ba7e032a4b03d3bc0b6913c458db1"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord03dest" luaMethodCode="function setCord03dest(x,y)&#13;&#10;&#13;&#10;if y == 0 then&#13;&#10;&#13;&#10;&#9;if x == 8 then x = 1&#13;&#10;&#9;elseif x == 47 then x = 2&#13;&#10;&#9;elseif x == 48 then x = 3&#13;&#10;&#9;elseif x == 49 then x = 4&#13;&#10;&#9;elseif x == 50 then x = 5&#13;&#10;&#9;elseif x == 51 then x = 6&#13;&#10;&#9;elseif x == 52 then x = 7&#13;&#10;&#9;elseif x == 53 then x = 8&#13;&#10;&#9;elseif x == 54 then x = 9&#13;&#10;&#9;elseif x == 56 then x = 10&#13;&#10;&#9;elseif x == 57 then x = 11&#13;&#10;&#9;elseif x == 64 then x = 12&#13;&#10;&#9;elseif x == 65 then x = 13&#13;&#10;&#9;elseif x == 66 then x = 14&#13;&#10;&#9;elseif x == 72 then x = 15&#13;&#10;&#9;elseif x == 73 then x = 16&#13;&#10;&#9;elseif x == 74 then x = 17&#13;&#10;&#9;elseif x == 75 then x = 18&#13;&#10;&#9;elseif x == 80 then x = 19&#13;&#10;&#9;elseif x == 81 then x = 20&#13;&#10;&#9;elseif x == 82 then x = 21&#13;&#10;&#9;elseif x == 83 then x = 22&#13;&#10;&#9;elseif x == 86 then x = 23&#13;&#10;&#9;elseif x == 88 then x = 24&#13;&#10;&#9;elseif x == 89 then x = 25&#13;&#10;&#9;elseif x == 90 then x = 26&#13;&#10;&#9;elseif x == 91 then x = 27&#13;&#10;&#9;elseif x == 94 then x = 28&#13;&#10;&#9;elseif x == 96 then x = 29&#13;&#10;&#9;elseif x == 97 then x = 30&#13;&#10;&#9;elseif x == 104 then x = 31&#13;&#10;&#9;elseif x == 105 then x = 32&#13;&#10;&#9;elseif x == 106 then x = 33&#13;&#10;&#9;elseif x == 108 then x = 34&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if y == 1 then&#13;&#10;&#13;&#10;&#9;if x == 33 then x = 35&#13;&#10;&#9;elseif x == 34 then x = 36&#13;&#10;&#9;elseif x == 35 then x = 37&#13;&#10;&#9;elseif x == 36 then x = 38&#13;&#10;&#9;elseif x == 37 then x = 39&#13;&#10;&#9;elseif x == 38 then x = 40&#13;&#10;&#9;elseif x == 39 then x = 41&#13;&#10;&#9;elseif x == 40 then x = 42&#13;&#10;&#9;elseif x == 41 then x = 43&#13;&#10;&#9;elseif x == 42 then x = 44&#13;&#10;&#9;elseif x == 43 then x = 45&#13;&#10;&#9;elseif x == 44 then x = 46&#13;&#10;&#9;elseif x == 45 then x = 47&#13;&#10;&#9;elseif x == 46 then x = 48&#13;&#10;&#9;elseif x == 47 then x = 49&#13;&#10;&#9;elseif x == 48 then x = 50&#13;&#10;&#9;elseif x == 49 then x = 51&#13;&#10;&#9;elseif x == 50 then x = 52&#13;&#10;&#9;elseif x == 51 then x = 53&#13;&#10;&#9;elseif x == 52 then x = 54&#13;&#10;&#9;elseif x == 53 then x = 55&#13;&#10;&#9;elseif x == 54 then x = 56&#13;&#10;&#9;elseif x == 55 then x = 57&#13;&#10;&#9;elseif x == 56 then x = 58&#13;&#10;&#9;elseif x == 57 then x = 59&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;cord03destMod:setModulatorValue(x,false,false,false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="04bf39b787e1745700b242c3db8df5a3"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord03source" luaMethodCode="function setCord03source(x,y)&#10;&#10;&#9;if y == 0 then&#13;&#10;&#9;cord = cordSourceMsbNil(x)&#13;&#10;&#9;else&#13;&#10;&#9;cord = cordSourceMsbOne(x)&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if cord == nil then cord03sourceMod:setModulatorValue(0,false,false,false)&#13;&#10;&#9;else cord03sourceMod:setModulatorValue(cord,false,false,false)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="db22c0ce227e8a0808d30fa0564ffd06"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setcord02amt" luaMethodCode="function setcord02amt(x,y)&#13;&#10;&#13;&#10;&#13;&#10;if y == 0 then&#13;&#10;cord02amtMod:setModulatorValue(x,false,false,false)&#13;&#10;elseif y == 127 then&#13;&#10;cord02amtMod:setModulatorValue(x-128,false,false,false)&#10;end&#10;end&#10;&#13;&#10;"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="d8fc42b994c64791e5a82682f1115971"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord02Dest" luaMethodCode="function setCord02Dest(x,y)&#13;&#10;if y == 0 then&#13;&#10;&#13;&#10;&#9;if x == 8 then x = 1&#13;&#10;&#9;elseif x == 47 then x = 2&#13;&#10;&#9;elseif x == 48 then x = 3&#13;&#10;&#9;elseif x == 49 then x = 4&#13;&#10;&#9;elseif x == 50 then x = 5&#13;&#10;&#9;elseif x == 51 then x = 6&#13;&#10;&#9;elseif x == 52 then x = 7&#13;&#10;&#9;elseif x == 53 then x = 8&#13;&#10;&#9;elseif x == 54 then x = 9&#13;&#10;&#9;elseif x == 56 then x = 10&#13;&#10;&#9;elseif x == 57 then x = 11&#13;&#10;&#9;elseif x == 64 then x = 12&#13;&#10;&#9;elseif x == 65 then x = 13&#13;&#10;&#9;elseif x == 66 then x = 14&#13;&#10;&#9;elseif x == 72 then x = 15&#13;&#10;&#9;elseif x == 73 then x = 16&#13;&#10;&#9;elseif x == 74 then x = 17&#13;&#10;&#9;elseif x == 75 then x = 18&#13;&#10;&#9;elseif x == 80 then x = 19&#13;&#10;&#9;elseif x == 81 then x = 20&#13;&#10;&#9;elseif x == 82 then x = 21&#13;&#10;&#9;elseif x == 83 then x = 22&#13;&#10;&#9;elseif x == 86 then x = 23&#13;&#10;&#9;elseif x == 88 then x = 24&#13;&#10;&#9;elseif x == 89 then x = 25&#13;&#10;&#9;elseif x == 90 then x = 26&#13;&#10;&#9;elseif x == 91 then x = 27&#13;&#10;&#9;elseif x == 94 then x = 28&#13;&#10;&#9;elseif x == 96 then x = 29&#13;&#10;&#9;elseif x == 97 then x = 30&#13;&#10;&#9;elseif x == 104 then x = 31&#13;&#10;&#9;elseif x == 105 then x = 32&#13;&#10;&#9;elseif x == 106 then x = 33&#13;&#10;&#9;elseif x == 108 then x = 34&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if y == 1 then&#13;&#10;&#13;&#10;&#9;if x == 33 then x = 35&#13;&#10;&#9;elseif x == 34 then x = 36&#13;&#10;&#9;elseif x == 35 then x = 37&#13;&#10;&#9;elseif x == 36 then x = 38&#13;&#10;&#9;elseif x == 37 then x = 39&#13;&#10;&#9;elseif x == 38 then x = 40&#13;&#10;&#9;elseif x == 39 then x = 41&#13;&#10;&#9;elseif x == 40 then x = 42&#13;&#10;&#9;elseif x == 41 then x = 43&#13;&#10;&#9;elseif x == 42 then x = 44&#13;&#10;&#9;elseif x == 43 then x = 45&#13;&#10;&#9;elseif x == 44 then x = 46&#13;&#10;&#9;elseif x == 45 then x = 47&#13;&#10;&#9;elseif x == 46 then x = 48&#13;&#10;&#9;elseif x == 47 then x = 49&#13;&#10;&#9;elseif x == 48 then x = 50&#13;&#10;&#9;elseif x == 49 then x = 51&#13;&#10;&#9;elseif x == 50 then x = 52&#13;&#10;&#9;elseif x == 51 then x = 53&#13;&#10;&#9;elseif x == 52 then x = 54&#13;&#10;&#9;elseif x == 53 then x = 55&#13;&#10;&#9;elseif x == 54 then x = 56&#13;&#10;&#9;elseif x == 55 then x = 57&#13;&#10;&#9;elseif x == 56 then x = 58&#13;&#10;&#9;elseif x == 57 then x = 59&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;cord02destMod:setModulatorValue(x,false,false,false)&#10;&#9;-- Your method code here&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="114c80c4cc4d3fac189f08163442686d"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord02source" luaMethodCode="function setCord02source(x,y)&#10;&#13;&#10;if y == 0 then&#13;&#10;&#9;cord = cordSourceMsbNil(x)&#13;&#10;&#9;else&#13;&#10;&#9;cord = cordSourceMsbOne(x)&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if cord == nil then cord02sourceMod:setModulatorValue(0,false,false,false)&#13;&#10;&#9;else cord02sourceMod:setModulatorValue(cord,false,false,false)&#13;&#10;&#9;end&#13;&#10;--console(string.format(&quot;cord02source set to %.d&quot;,cord)) &#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5abdfa00ce4ea3b1ddd1781841beb5d4"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord01amt" luaMethodCode="function setCord01amt(x,y)&#10;&#9;&#13;&#10;if y == 0 then&#13;&#10;cord01amt:setModulatorValue(x,false,false,false)&#13;&#10;elseif y == 127 then&#13;&#10;cord01amt:setModulatorValue(x-128,false,false,false)&#10;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="578be17e1a2d2906068d5664443dacf1"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord01dest" luaMethodCode="function setCord01dest(x,y)&#10;if y == 0 then&#13;&#10;&#13;&#10;&#9;if x == 8 then x = 1&#13;&#10;&#9;elseif x == 47 then x = 2&#13;&#10;&#9;elseif x == 48 then x = 3&#13;&#10;&#9;elseif x == 49 then x = 4&#13;&#10;&#9;elseif x == 50 then x = 5&#13;&#10;&#9;elseif x == 51 then x = 6&#13;&#10;&#9;elseif x == 52 then x = 7&#13;&#10;&#9;elseif x == 53 then x = 8&#13;&#10;&#9;elseif x == 54 then x = 9&#13;&#10;&#9;elseif x == 56 then x = 10&#13;&#10;&#9;elseif x == 57 then x = 11&#13;&#10;&#9;elseif x == 64 then x = 12&#13;&#10;&#9;elseif x == 65 then x = 13&#13;&#10;&#9;elseif x == 66 then x = 14&#13;&#10;&#9;elseif x == 72 then x = 15&#13;&#10;&#9;elseif x == 73 then x = 16&#13;&#10;&#9;elseif x == 74 then x = 17&#13;&#10;&#9;elseif x == 75 then x = 18&#13;&#10;&#9;elseif x == 80 then x = 19&#13;&#10;&#9;elseif x == 81 then x = 20&#13;&#10;&#9;elseif x == 82 then x = 21&#13;&#10;&#9;elseif x == 83 then x = 22&#13;&#10;&#9;elseif x == 86 then x = 23&#13;&#10;&#9;elseif x == 88 then x = 24&#13;&#10;&#9;elseif x == 89 then x = 25&#13;&#10;&#9;elseif x == 90 then x = 26&#13;&#10;&#9;elseif x == 91 then x = 27&#13;&#10;&#9;elseif x == 94 then x = 28&#13;&#10;&#9;elseif x == 96 then x = 29&#13;&#10;&#9;elseif x == 97 then x = 30&#13;&#10;&#9;elseif x == 104 then x = 31&#13;&#10;&#9;elseif x == 105 then x = 32&#13;&#10;&#9;elseif x == 106 then x = 33&#13;&#10;&#9;elseif x == 108 then x = 34&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if y == 1 then&#13;&#10;&#13;&#10;&#9;if x == 33 then x = 35&#13;&#10;&#9;elseif x == 34 then x = 36&#13;&#10;&#9;elseif x == 35 then x = 37&#13;&#10;&#9;elseif x == 36 then x = 38&#13;&#10;&#9;elseif x == 37 then x = 39&#13;&#10;&#9;elseif x == 38 then x = 40&#13;&#10;&#9;elseif x == 39 then x = 41&#13;&#10;&#9;elseif x == 40 then x = 42&#13;&#10;&#9;elseif x == 41 then x = 43&#13;&#10;&#9;elseif x == 42 then x = 44&#13;&#10;&#9;elseif x == 43 then x = 45&#13;&#10;&#9;elseif x == 44 then x = 46&#13;&#10;&#9;elseif x == 45 then x = 47&#13;&#10;&#9;elseif x == 46 then x = 48&#13;&#10;&#9;elseif x == 47 then x = 49&#13;&#10;&#9;elseif x == 48 then x = 50&#13;&#10;&#9;elseif x == 49 then x = 51&#13;&#10;&#9;elseif x == 50 then x = 52&#13;&#10;&#9;elseif x == 51 then x = 53&#13;&#10;&#9;elseif x == 52 then x = 54&#13;&#10;&#9;elseif x == 53 then x = 55&#13;&#10;&#9;elseif x == 54 then x = 56&#13;&#10;&#9;elseif x == 55 then x = 57&#13;&#10;&#9;elseif x == 56 then x = 58&#13;&#10;&#9;elseif x == 57 then x = 59&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;--console(string.format(x))&#13;&#10;cord01dest:setModulatorValue(x,false,false,false)&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="efeba439f1f537270294ba3b5784b964"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord01source" luaMethodCode="function setCord01source(x,y)&#13;&#10;&#13;&#10;&#13;&#10;&#9;if y == 0 then&#13;&#10;&#9;cord = cordSourceMsbNil(x)&#13;&#10;&#9;else&#13;&#10;&#9;cord = cordSourceMsbOne(x)&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if cord == nil then cord01sourceMod:setModulatorValue(0,false,false,false)&#13;&#10;&#9;else cord01sourceMod:setModulatorValue(cord,false,false,false)&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="3484940db18716973cc4b78b35f3b78f"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord00amt" luaMethodCode="function setCord00amt(x,y)&#10;&#13;&#10;if y == 0 then&#13;&#10;cord00amt:setModulatorValue(x,false,false,false)&#13;&#10;elseif y == 127 then&#13;&#10;cord00amt:setModulatorValue(x-128,false,false,false)&#10;end&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="b8e797bd569d01e209892d2aae4aa7b0"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord00dest" luaMethodCode="function setCord00dest(x,y)&#10;&#10;&#13;&#10;--used to translate the cord source values into sequential numbers for the comboboxes&#13;&#10;--x is lsb, y is msb. MSB selects activated block&#13;&#10;&#10;--console(string.format(&quot;setCord00dest received lsb %.d and msb %.d&quot;,x,y))&#13;&#10;&#13;&#10;if y == 0 then&#13;&#10;&#13;&#10;&#9;if x == 8 then x = 1&#13;&#10;&#9;elseif x == 47 then x = 2&#13;&#10;&#9;elseif x == 48 then x = 3&#13;&#10;&#9;elseif x == 49 then x = 4&#13;&#10;&#9;elseif x == 50 then x = 5&#13;&#10;&#9;elseif x == 51 then x = 6&#13;&#10;&#9;elseif x == 52 then x = 7&#13;&#10;&#9;elseif x == 53 then x = 8&#13;&#10;&#9;elseif x == 54 then x = 9&#13;&#10;&#9;elseif x == 56 then x = 10&#13;&#10;&#9;elseif x == 57 then x = 11&#13;&#10;&#9;elseif x == 64 then x = 12&#13;&#10;&#9;elseif x == 65 then x = 13&#13;&#10;&#9;elseif x == 66 then x = 14&#13;&#10;&#9;elseif x == 72 then x = 15&#13;&#10;&#9;elseif x == 73 then x = 16&#13;&#10;&#9;elseif x == 74 then x = 17&#13;&#10;&#9;elseif x == 75 then x = 18&#13;&#10;&#9;elseif x == 80 then x = 19&#13;&#10;&#9;elseif x == 81 then x = 20&#13;&#10;&#9;elseif x == 82 then x = 21&#13;&#10;&#9;elseif x == 83 then x = 22&#13;&#10;&#9;elseif x == 86 then x = 23&#13;&#10;&#9;elseif x == 88 then x = 24&#13;&#10;&#9;elseif x == 89 then x = 25&#13;&#10;&#9;elseif x == 90 then x = 26&#13;&#10;&#9;elseif x == 91 then x = 27&#13;&#10;&#9;elseif x == 94 then x = 28&#13;&#10;&#9;elseif x == 96 then x = 29&#13;&#10;&#9;elseif x == 97 then x = 30&#13;&#10;&#9;elseif x == 104 then x = 31&#13;&#10;&#9;elseif x == 105 then x = 32&#13;&#10;&#9;elseif x == 106 then x = 33&#13;&#10;&#9;elseif x == 108 then x = 34&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if y == 1 then&#13;&#10;&#13;&#10;&#9;if x == 33 then x = 35&#13;&#10;&#9;elseif x == 34 then x = 36&#13;&#10;&#9;elseif x == 35 then x = 37&#13;&#10;&#9;elseif x == 36 then x = 38&#13;&#10;&#9;elseif x == 37 then x = 39&#13;&#10;&#9;elseif x == 38 then x = 40&#13;&#10;&#9;elseif x == 39 then x = 41&#13;&#10;&#9;elseif x == 40 then x = 42&#13;&#10;&#9;elseif x == 41 then x = 43&#13;&#10;&#9;elseif x == 42 then x = 44&#13;&#10;&#9;elseif x == 43 then x = 45&#13;&#10;&#9;elseif x == 44 then x = 46&#13;&#10;&#9;elseif x == 45 then x = 47&#13;&#10;&#9;elseif x == 46 then x = 48&#13;&#10;&#9;elseif x == 47 then x = 49&#13;&#10;&#9;elseif x == 48 then x = 50&#13;&#10;&#9;elseif x == 49 then x = 51&#13;&#10;&#9;elseif x == 50 then x = 52&#13;&#10;&#9;elseif x == 51 then x = 53&#13;&#10;&#9;elseif x == 52 then x = 54&#13;&#10;&#9;elseif x == 53 then x = 55&#13;&#10;&#9;elseif x == 54 then x = 56&#13;&#10;&#9;elseif x == 55 then x = 57&#13;&#10;&#9;elseif x == 56 then x = 58&#13;&#10;&#9;elseif x == 57 then x = 59&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;--console(string.format(x))&#13;&#10;cord00dest:setModulatorValue(x,false,false,false)&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="85ee9782f415a6532f0bc1d8ebed877c"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord00source" luaMethodCode="function setCord00source(x,y)&#13;&#10;&#13;&#10;&#9;if y == 0 then&#13;&#10;&#9;cord = cordSourceMsbNil(x)&#13;&#10;&#9;else&#13;&#10;&#9;cord = cordSourceMsbOne(x)&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if cord == nil then cord00source:setModulatorValue(0,false,false,false)&#13;&#10;&#9;else cord00source:setModulatorValue(cord,false,false,false)&#13;&#10;--console(string.format(&quot;cord00source set to %.d&quot;,cord)) end&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="db2d24a37c86040bde557be7463e9452"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord04source" luaMethodCode="function setCord04source(x,y)&#10;&#9;if y == 0 then&#13;&#10;&#9;cord = cordSourceMsbNil(x)&#13;&#10;&#9;else&#13;&#10;&#9;cord = cordSourceMsbOne(x)&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if cord == nil then cord04sourceMod:setModulatorValue(0,false,false,false)&#13;&#10;&#9;else cord04sourceMod:setModulatorValue(cord,false,false,false)&#13;&#10;--console(string.format(&quot;cord04source set to %.d&quot;,cord)) &#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="7fec8253b6e0a036fd6700ff357448b8"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord04dest" luaMethodCode="function setCord04dest(x,y)&#10;if y == 0 then&#13;&#10;&#13;&#10;&#9;if x == 8 then x = 1&#13;&#10;&#9;elseif x == 47 then x = 2&#13;&#10;&#9;elseif x == 48 then x = 3&#13;&#10;&#9;elseif x == 49 then x = 4&#13;&#10;&#9;elseif x == 50 then x = 5&#13;&#10;&#9;elseif x == 51 then x = 6&#13;&#10;&#9;elseif x == 52 then x = 7&#13;&#10;&#9;elseif x == 53 then x = 8&#13;&#10;&#9;elseif x == 54 then x = 9&#13;&#10;&#9;elseif x == 56 then x = 10&#13;&#10;&#9;elseif x == 57 then x = 11&#13;&#10;&#9;elseif x == 64 then x = 12&#13;&#10;&#9;elseif x == 65 then x = 13&#13;&#10;&#9;elseif x == 66 then x = 14&#13;&#10;&#9;elseif x == 72 then x = 15&#13;&#10;&#9;elseif x == 73 then x = 16&#13;&#10;&#9;elseif x == 74 then x = 17&#13;&#10;&#9;elseif x == 75 then x = 18&#13;&#10;&#9;elseif x == 80 then x = 19&#13;&#10;&#9;elseif x == 81 then x = 20&#13;&#10;&#9;elseif x == 82 then x = 21&#13;&#10;&#9;elseif x == 83 then x = 22&#13;&#10;&#9;elseif x == 86 then x = 23&#13;&#10;&#9;elseif x == 88 then x = 24&#13;&#10;&#9;elseif x == 89 then x = 25&#13;&#10;&#9;elseif x == 90 then x = 26&#13;&#10;&#9;elseif x == 91 then x = 27&#13;&#10;&#9;elseif x == 94 then x = 28&#13;&#10;&#9;elseif x == 96 then x = 29&#13;&#10;&#9;elseif x == 97 then x = 30&#13;&#10;&#9;elseif x == 104 then x = 31&#13;&#10;&#9;elseif x == 105 then x = 32&#13;&#10;&#9;elseif x == 106 then x = 33&#13;&#10;&#9;elseif x == 108 then x = 34&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if y == 1 then&#13;&#10;&#13;&#10;&#9;if x == 33 then x = 35&#13;&#10;&#9;elseif x == 34 then x = 36&#13;&#10;&#9;elseif x == 35 then x = 37&#13;&#10;&#9;elseif x == 36 then x = 38&#13;&#10;&#9;elseif x == 37 then x = 39&#13;&#10;&#9;elseif x == 38 then x = 40&#13;&#10;&#9;elseif x == 39 then x = 41&#13;&#10;&#9;elseif x == 40 then x = 42&#13;&#10;&#9;elseif x == 41 then x = 43&#13;&#10;&#9;elseif x == 42 then x = 44&#13;&#10;&#9;elseif x == 43 then x = 45&#13;&#10;&#9;elseif x == 44 then x = 46&#13;&#10;&#9;elseif x == 45 then x = 47&#13;&#10;&#9;elseif x == 46 then x = 48&#13;&#10;&#9;elseif x == 47 then x = 49&#13;&#10;&#9;elseif x == 48 then x = 50&#13;&#10;&#9;elseif x == 49 then x = 51&#13;&#10;&#9;elseif x == 50 then x = 52&#13;&#10;&#9;elseif x == 51 then x = 53&#13;&#10;&#9;elseif x == 52 then x = 54&#13;&#10;&#9;elseif x == 53 then x = 55&#13;&#10;&#9;elseif x == 54 then x = 56&#13;&#10;&#9;elseif x == 55 then x = 57&#13;&#10;&#9;elseif x == 56 then x = 58&#13;&#10;&#9;elseif x == 57 then x = 59&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;--console(string.format(x))&#13;&#10;cord04destMod:setModulatorValue(x,false,false,false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4eda8cbbc0c72a990f508d8ba6899be4"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setCord04amt" luaMethodCode="function setCord04amt(x,y)&#10;&#13;&#10;if y == 0 then&#13;&#10;cord04amtMod:setModulatorValue(x,false,false,false)&#13;&#10;elseif y == 127 then&#13;&#10;cord04amtMod:setModulatorValue(x-128,false,false,false)&#10;end&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="13f7147306770533c38502e419b42be3"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="tuning" uuid="9257bf6a8df71ad2723211ec84c304e0">
            <luaMethod luaMethodName="setSampleHighKey" luaMethodCode="function setSampleHighKey(x, y)&#13;&#10;&#10;local lownote = panel:getModulatorByName(&quot;sampleHighKey&quot;)&#13;&#10;lownote:setModulatorValue(x,true,false,false)&#13;&#10;&#13;&#10;--console(string.format(&quot;HighKey value is %.2d&quot;,x))&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="06ba63d6029f890d5ed3e667f61464e4"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setSampleKeyWin" luaMethodCode="function setSampleKeyWin(keywinlsb)&#13;&#10;&#13;&#10;KeyWinMod = panel:getModulatorByName(&quot;sampleZoneKeyWinFade&quot;)&#13;&#10;&#9;&#13;&#10;--console(string.format(&quot;keywin lsb value is %.2d&quot;,keywinlsb))&#13;&#10;&#10;--KeyWinMod:setValue(0 ,true)&#13;&#10;KeyWinMod:getComponent():setProperty(&quot;uiSliderMax&quot;,keywinlsb, false)&#13;&#10;&#13;&#10;--console(string.format(&quot;max value of keywin is %.2d&quot;,skz))&#13;&#10;KeyWinMod:setModulatorValue(keywinlsb ,true,false,false)&#9;&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="f878516955a8a26a9dfd81b01bdb8df5"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="nonTranspose" luaMethodCode="function nonTranspose(x)&#10;&#13;&#10;voiceNonTransMod:setModulatorValue(x,false,false,false)&#9;&#13;&#10;--console(string.format(x))&#13;&#10;&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="d051d82e70b51a7e7084c6608ee58dbf"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setSampleLowKey" luaMethodCode="function setSampleLowKey(LS,MS)&#13;&#10;&#10;local lownote = panel:getModulatorByName(&quot;sampleLowKey&quot;)&#13;&#10;lownote:setModulatorValue(LS,true,false,false)&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="ce63cdfda00e5ec463aa1e06af73ae9f"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setSamplezoneRoot" luaMethodCode="function setSamplezoneRoot(x,y)&#10;&#13;&#10;&#13;&#10;local rootnote = panel:getModulatorByName(&quot;sampleZoneRootNote&quot;)&#13;&#10;rootnote:setModulatorValue(LS,true, false,false)&#13;&#10;console(string.format(&quot;Root note is %.d&quot;,LS))&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="39cff2a9832b4d3f837c39af8b71e7bb"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="voiceTranspose" luaMethodCode="function voiceTranspose(LS,MS)&#13;&#10;&#10;if MS == 0 and LS == 0 then  keytuneval = 24 end -- 0&#13;&#10;&#13;&#10;if MS == 0 and LS &gt;= 1 then&#9; keytuneval = LS+24 end --positive values&#13;&#10;&#13;&#10;if MS == 127  then keytuneval = LS-104 end&#9;&#9;-- negative value&#9;&#9;&#13;&#10;&#13;&#10;console(string.format(&quot;keytranspose value received as %.d&quot;,keytuneval)) &#13;&#10;&#9;&#13;&#10;voiceKeytrans:setModulatorValue(keytuneval,false,false,false)&#9;&#13;&#10;-- Your method code here&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="1434f89795e8637a0eed62f0a68f8086"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="voiceFineTune" luaMethodCode="function voiceFineTune(LS,MS)&#10;&#13;&#10;if MS == 0 and LS == 0 then ctuneval = 64 end -- 0&#13;&#10;&#13;&#10;if MS == 0 and LS &gt;= 1 then&#9;ctuneval = LS+64 end --positive values&#13;&#10;&#13;&#10;if MS == 127  then ctuneval = LS - 64 end&#9;&#9;-- negative value&#13;&#10;&#13;&#10;voiceFineTuneMod:setModulatorValue(ctuneval,false,false,false)&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5c481a3db08aa2eb2c2351f9c9dea294"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="voiceCoarseTune" luaMethodCode="function voiceCoarseTune(LS,MS)&#10;&#13;&#10;--console(string.format(&quot;coarseTune midireceived is ls %.d ms %.d&quot;,LS,MS))&#13;&#10;&#13;&#10;if MS == 0 and LS == 0 then ctuneval = 72 end -- 0&#13;&#10;&#13;&#10;if MS == 0 and LS &gt;= 1 then&#9;ctuneval = LS+72 end --positive values&#13;&#10;&#13;&#10;if MS == 127  then ctuneval = LS - 56 end&#9;&#9;-- negative value&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#13;&#10;coarseTune:setModulatorValue(ctuneval,false,false,false)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="a3210cfc0c2853369989a999f14bfd7d"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="filter" uuid="964d5407cb805f483e35c370165bf11d">
            <luaMethod luaMethodName="setFilterEnvAmpLvl" luaMethodCode="function setFilterEnvAmpLvl(x,y,z)&#13;&#10;&#13;&#10;&#10;--console(string.format(&quot;FilterEnv response ID is %.2d&quot;,z))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if z == 94 then -- Attack 1 level&#13;&#10;&#13;&#10;&#9;local atklvl = panel:getModulatorByName(&quot;filterEnvAtk1Level&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if y == 127 then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local mem = (128 - x)*(-1)&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(mem,true,false,false)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif y == 0 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(x,true,false,false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if z == 96 then -- Attack 2 level&#13;&#10;&#13;&#10;&#9;local atklvl = panel:getModulatorByName(&quot;filterEnvAtk2Level&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if y == 127 then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local mem = (128 - x)*(-1)&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(mem,true,false,false)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif y == 0 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(x,true,false,false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if z == 98 then -- Decay 1 level&#13;&#10;&#13;&#10;&#9;local atklvl = panel:getModulatorByName(&quot;filterEnvDcy1Level&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if y == 127 then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local mem = (128 - x)*(-1)&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(mem,true,false,false)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif y == 0 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(x,true,false,false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if z == 100 then -- Decay 2 level&#13;&#10;&#13;&#10;&#9;local atklvl = panel:getModulatorByName(&quot;filterEnvDcy2Level&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if y == 127 then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local mem = (128 - x)*(-1)&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(mem,true,false,false)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif y == 0 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(x,true,false,false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if z == 102 then -- Release 1 level&#13;&#10;&#13;&#10;&#9;local atklvl = panel:getModulatorByName(&quot;filterEnvRls1Level&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if y == 127 then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local mem = (128 - x)*(-1)&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(mem,true,false,false)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif y == 0 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(x,true,false,false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if z == 104 then -- Release 2 level&#13;&#10;&#13;&#10;&#9;local atklvl = panel:getModulatorByName(&quot;filterEnvRls2Level&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if y == 127 then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local mem = (128 - x)*(-1)&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(mem,true,false,false)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif y == 0 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;atklvl:setModulatorValue(x,true,false,false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="1af674c6ec0a1a7e4aac4d81af6a1408"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="SetMorphShelf01" luaMethodCode="function SetMorphShelf01(x)&#13;&#10;&#13;&#10;&#13;&#10;panel:getModulatorByName(&quot;morphShelf01&quot;):setModulatorValue(x-64,false,false,false)&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="7e9cbff8036977bb29e924b0f6584a9f"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="chorus" uuid="08eb16dd466f5ea70dd712ad4a6951c5">
            <luaMethod luaMethodName="SetChorusWidth" luaMethodCode="function SetChorusWidth(x,y)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;console(string.format(&quot;chorus lsb %.2d msb %.2d&quot;,x,y))&#13;&#10;--chrswtdh = (x*128)/100&#13;&#10;--console(string.format(&quot;width is %.2d&quot;,chrswtdh))&#13;&#10;&#13;&#10;--&#9;if y == 127 then&#13;&#10;&#9;chorusWidth:setModulatorValue(x, false,false,false)&#10;--&#9;else&#13;&#10;--&#9;chorusWidth:setModulatorValue(chrswtdh, false,false,false)&#13;&#10;--end&#13;&#10;&#13;&#10;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="241cd2314ed3c48fce6a530d61e59819"
                       luaMethodValid="1"/>
          </luaMethodGroup>
        </luaMethodGroup>
        <luaMethod luaMethodName="midiReceived" luaMethodCode="--&#13;-- Called when a panel receives a midi message (does not need to match any modulator mask)&#13;-- @midi   http://ctrlr.org/api/class_ctrlr_midi_message.html&#13;--&#13;midiReceived = function(midi)&#13;&#10;&#13;&#10;--what(panel)&#13;&#10;&#13;&#10;devID = 1 --make panel:getModulatorByName(&quot;midiDeviceId&quot;):getValue() in initscript&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if midi:getSize() ~= nil then &#13;&#10;&#9;l = midi:getSize() --get size of msg&#13;&#10;&#9;midiInActive = true&#13;&#10;&#9;else&#13;&#10;&#9;&#9;midiInActive = false&#13;&#10; &#9;end&#13;&#10;&#13;&#10;msg = midi:getData():getRange(0,l)&#13;&#10;&#13;&#10;--console(string.format(msg:toHexString(1)))&#13;&#10;&#13;&#10;eof = midi:getLuaData():getByte(5)&#13;&#10;cmd = midi:getLuaData():getByte(6)&#13;&#10;ID = midi:getLuaData():getByte(7)&#13;&#10;LS = midi:getLuaData():getByte(9)&#13;&#10;MS = midi:getLuaData():getByte(10)&#13;&#10;&#13;&#10;&#9;if eof == 9 then -- its sample name response&#13;&#10;&#9;samplenameascii = midi:getLuaData():getRange(8, 16)&#13;&#10;&#9;samplename = samplenameascii:toString()&#13;&#10;&#9;samplenameout = panel:getModulatorByName(&quot;sampleNameLCD&quot;)&#13;&#10;&#9;samplenameout:getComponent():setPropertyString(&quot;uiLabelText&quot;, samplename)&#13;&#10;&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;banzai&quot;))&#13;&#10; &#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if eof == 125 and l == 7 then --its an empty preset response&#13;&#10;&#9;k1 = {} &#13;&#10;&#9;presetLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;Empty preset&quot;)&#13;&#10;&#9;list = panel:getModulatorByName(&quot;listbox&quot;):getComponent()&#13;&#10;&#9;list:setProperty(&quot;uiListBoxContent&quot;, &quot;&quot;, true)&#13;&#10;&#9;zonelist = panel:getModulatorByName(&quot;sampleZoneList&quot;):getComponent()&#13;&#10;&#9;zonelist:setProperty(&quot;uiListBoxContent&quot;, &quot;&quot;, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;--preset dump collector--&#13;&#10;&#13;&#10;dumpinit    = midi:getData():getRange(0,8)&#13;&#10;dumpdatamsg = midi:getData():getRange(0,7)&#13;&#10;&#13;&#10;&#13;&#10;&#9;if dumpheader == dumpinit:toHexString(1) then --preset dump command number&#13;&#10;&#13;&#10;&#9;showInfoLayer(1) &#9;&#9;&#9;&#9;-- display a &quot;please wait&quot; message during the dump&#13;&#10;&#13;&#10;&#9;k0:__init() &#9;&#9;&#9;&#9;&#9;--reset K0 memoryblock &#13;&#10;&#9;k1 = {} &#9;&#9;&#9;&#9;&#9;&#9;--erase k1 table&#13;&#10;&#13;&#10;&#9;--dumpInfo()&#13;&#10;&#9;calcbit1 = BigInteger(msg:getByte(8))&#13;&#10;&#9;calcbit2 = BigInteger(msg:getByte(9))&#13;&#10;&#9;ls = calcbit1:getBitRangeAsInt (0,7)&#13;&#10;&#9;ms = calcbit2:getBitRangeAsInt (0,7)&#13;&#10;&#13;&#10;&#9;msg = string.format(&quot;F0 18 21 %.2x 55 7F 00 F7&quot;, devID)&#9;--send ack message to continue dump process&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;elseif dumpdata == dumpdatamsg:toHexString(1) then  &#9;&#9;--its a dump data message&#13;&#10;&#13;&#10;&#9;size = midi:getSize()&#13;&#10;&#9;dump = midi:getLuaData():getRange(7,l-8) &#9;&#9;&#9;&#9;-- grab dumped string&#13;&#10;&#9;k0:append(dump) &#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--append to global memoryblock&#13;&#10;&#13;&#10;&#9;msg = string.format(&quot;F0 18 21 %.2x 55 7F %.2x F7&quot;, devID, ID) -- ack for dump part 1 received&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg)) &#9;&#9;-- ack msg, send more data.&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if dumpEOF == dumpdatamsg:toHexString(1) then &#9;&#9;&#9;&#9;--EOF dump message, put all data into table k1&#13;&#10;&#13;&#10;&#9;memsize = k0:getSize()&#13;&#10;&#9;&#9;for i = 1,memsize, 1 do&#13;&#10;&#9;&#9;byte = k0:getByte(i)&#13;&#10;&#9;&#9;table.insert(k1,i, byte)&#13;&#10;&#9;&#9;showInfoLayer(0) &#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- hide the &quot;please wait&quot; message when dump is finished &#13;&#10;&#9;end&#13;&#10;&#13;&#10;updateModulatorsFromMidi()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--set panel modulators to values received in the dump so it matches the state of the sampler&#13;&#10;&#13;&#10;end &#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--end of preset dump collector&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--set modulators from individual parameter responses received&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;if dumpdatamsg:toHexString(1) == singleParamMsg then --its a single param value&#13;&#10;&#13;&#10;--console(string.format(&quot;mod id ls is %.d ms is %.d&quot;,LS,MS))&#9;&#13;&#10;--console(string.format(ID))&#13;&#10;&#13;&#10;&#9;if ID == 1 then setCord00source(LS,MS) end&#13;&#10;&#9;if ID == 2 then setCord00dest(LS,MS) end&#13;&#10;&#9;if ID == 3 then setCord00amt(LS,MS) end&#13;&#10;&#9;if ID == 4 then setCord01source(LS,MS) end&#13;&#10;&#9;if ID == 5 then setCord01dest(LS,MS) end&#13;&#10;&#9;if ID == 6 then setCord01amt(LS,MS) end&#13;&#10;&#9;if ID == 7 then setCord02source(LS,MS) end&#13;&#10;&#9;if ID == 8 then setCord02Dest(LS,MS) end&#13;&#10;&#9;if ID == 9 then setcord02amt(LS,MS) end&#13;&#10;&#9;if ID == 10 then setCord03source(LS,MS) end&#13;&#10;&#9;if ID == 11 then setCord03dest(LS,MS) end&#13;&#10;&#9;if ID == 12 then setCord03amt(LS,MS) end&#13;&#10;&#9;if ID == 13 then setCord04source(LS,MS) end&#13;&#10;&#9;if ID == 14 then setCord04dest(LS,MS) end&#13;&#10;&#9;if ID == 15 then setCord04amt(LS,MS) end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if ID == 38 then --sample number and name stuff --38 is sample number response, use returned value to request name&#13;&#10;&#9;&#13;&#10;&#9;sampleNameReq(LS,MS)&#13;&#10;&#13;&#10;&#9;sampleNumberMemLSB = midi:getData():getByte(9)&#13;&#10;&#9;sampleNumberMemMSB = midi:getData():getByte(10)&#13;&#10;&#9;console(string.format(&quot;sample number received&quot;)) &#13;&#10;&#9;console(string.format(sampleNumberMemLSB)) &#13;&#10;&#9;console(string.format(sampleNumberMemMSB)) &#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if ID == 41 then voiceCoarseTune(LS,MS) end &#9; --nrpr stuff math todo so split it off&#13;&#10;&#9;if ID == 42 then voiceFineTune(LS,MS) end&#13;&#10;&#9;if ID == 43 then voiceTranspose(LS,MS) end&#13;&#10;&#9;if ID == 44 then setSamplezoneRoot(LS,MS) end&#13;&#10;&#9;if ID == 45 then setSampleLowKey(LS,MS) end&#13;&#10;&#9;if ID == 46 then setSampleKeyWin(LS) end&#13;&#10;&#9;if ID == 47 then setSampleHighKey(LS,MS) end&#13;&#10;&#13;&#10;&#9;if ID == 57 then nonTranspose(LS) end&#13;&#10;&#9;if ID == 58 then chorusAmt:setModulatorValue(LS, false,false,false) end&#13;&#10;&#9;if ID == 59 then SetChorusWidth(LS,MS) end&#13;&#10;&#13;&#10;&#9;if ID == 82 then panel:getModulatorByName(&quot;filterType&quot;):setModulatorValue(LS,false,false,false) end --filtertype&#13;&#10;&#9;if ID == 83 then Cutoff:setModulatorValue(splitToInt(LS,MS),false,false,false) end &#9;&#9;&#9;&#9;&#9;-- cutoff / morph&#13;&#10;&#9;if ID == 84 then resonance:setModulatorValue(splitToInt(LS,MS),false,false,false) end &#9;&#9;&#9;&#9;-- resonance / gain&#13;&#10;&#9;if ID == 87 then morph01Mod:setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 88 then morph02Mod:setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 89 then morph03Mod:setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 90 then morph04Mod:setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 91 then morph05Mod:setModulatorValue(LS,false,false,false) console(string.format(&quot;morph5&quot;)) end&#13;&#10;&#9;if ID == 92 then morph06Mod:setModulatorValue(LS,false,false,false) end&#13;&#10;&#13;&#10;&#9;if ID == 93 then panel:getModulatorByName(&quot;filterEnvAtk1Rate&quot;):setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 94 then setFilterEnvAmpLvl(LS,MS,ID) end&#13;&#10;&#9;if ID == 95 then panel:getModulatorByName(&quot;filterEnvAtk2Rate&quot;):setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 96 then setFilterEnvAmpLvl(LS,MS,ID) end&#13;&#10;&#9;if ID == 97 then panel:getModulatorByName(&quot;filterEnvDcy1Rate&quot;):setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 98 then setFilterEnvAmpLvl(LS,MS,ID) end&#13;&#10;&#9;if ID == 99 then panel:getModulatorByName(&quot;filterEnvDcy2Rate&quot;):setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 100 then setFilterEnvAmpLvl(LS,MS,ID) end&#13;&#10;&#9;if ID == 101 then panel:getModulatorByName(&quot;filterEnvRls1Rate&quot;):setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 102 then setFilterEnvAmpLvl(LS,MS,ID) end&#13;&#10;&#9;if ID == 103 then panel:getModulatorByName(&quot;filterEnvRls2Rate&quot;):setModulatorValue(LS,false,false,false) end&#13;&#10;&#9;if ID == 104 then setFilterEnvAmpLvl(LS,MS,ID) end&#13;&#10;&#13;&#10;&#9;if ID == 105 then lfoRateMod:setModulatorValue(splitToInt(LS,MS),false,false,false) end &#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--populate samplezones list selector&#13;&#10;&#13;&#10;local samplezones = midi:getData():getRange(0,6) &#13;&#10;&#13;&#10;&#9;if samplezones:toHexString(1) == samplezonesAmount then&#13;&#10;&#13;&#10;&#9;&#9;local zones = &quot;&quot;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; &#9;  --empty string before loop kicks off&#13;&#10;&#9;&#9;&#9;for i = 1, splitToInt(cmd,ID) do &#9;&#9;&#9;&#9;&#9;  --loop for amount of voices found&#13;&#10;&#9;&#9;&#9;local a = string.format(&quot;zone %.d=%.d\n&quot;,i,i)  --make string to populate list&#13;&#10;&#9;&#9;&#9;zones = zones..a&#9;&#9;&#9;&#9;&#9;&#9;  --concat results to empty string&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;zonelist = panel:getModulatorByName(&quot;sampleZoneList&quot;):getComponent()&#13;&#10;&#9;&#9;zonelist:setProperty(&quot;uiListBoxContent&quot;, zones, true) --put string in right place - PROFIT!&#13;&#10;&#9;&#9;end&#13;&#9;end"
                   luaMethodLinkedProperty="luaPanelMidiReceived" luaMethodSource="0"
                   uuid="ba7a891f708b23628f21d899243ced95" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Midi to send" uuid="db650c2288facddb09d36fc91476a3d2">
        <luaMethodGroup name="requests" uuid="5a18a27152d6927ffb55d1a88b099b1f">
          <luaMethod luaMethodName="paramReqMsg" luaMethodCode="function paramReqMsg(paramx, paramy)&#10;&#13;&#10;local type = string.format(&quot;f0 18 21 %.2x 55 02 01 %.2x %.2x 7f f7&quot;, devID, paramx, paramy)&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(type))&#13;&#10;--console(string.format(&quot;requeststing is &quot;..type))&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e4fc2501298ff460e5884e8fb3030a9d"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="presetDumpRequest" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;presetDumpRequest = function()&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;-- full preset dump command initiator&#13;&#10;if presetNum ~= nil then local num = presetNum:getValue()&#13;&#10;&#13;&#10;y = msb(num)&#13;&#10;x = lsb(num)&#13;&#10;&#13;&#10;&#13;&#10;selectedPreset = string.format(&quot;f0 18 21 %.2x 55 0E %.2x %.2x f7&quot;, devID,x,y)&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(selectedPreset))&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="ed2ee3dbe8c2f655a06b2eb5b8f011f3" luaMethodValid="1"/>
          <luaMethod luaMethodName="voiceParametersRequest" luaMethodCode="function voiceParametersRequest(x,y)&#13;&#10;&#10;local samplezones = string.format(&quot;f0 18 21 %.2x 55 1C %.2x %.2x %.2x %.2x f7&quot;, devID, lsb(x),msb(x),lsb(y),msb(y))&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(samplezones))&#13;&#10;--console(samplezones)&#13;&#10;--RESPONSE:&gt; {F0h,18h,21h,ddh,55h,1Dh,&lt;V_Num_Of_SZones&gt;,F7h}&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="cc4fe0c0c2d53bdba8d90477c5396896"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="sampleNameReq" luaMethodCode="function sampleNameReq(paramx,paramy)&#13;&#10;&#13;&#10;local type = string.format(&quot;f0 18 21 %.2x 55 0A %.2x %.2x f7&quot;, devID, paramx, paramy)&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(type))&#10;&#9;-- Your method code here&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="d2db8525672c1ddf94a29b3cf64b30b3"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="changes" uuid="815132053fcb647556e19e081633bfc5">
          <luaMethod luaMethodName="paramChangeMsg" luaMethodCode="function paramChangeMsg(paramNumLsb,paramNumMsb, paramVal)&#10;&#13;&#10;-- 5 values are: devID @ byte 3, paramnum @ 7 &amp; 8, paramVal @ 9 &amp; 10&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x %.2x %.2x 7f f7&quot;, devID, paramNumLsb, paramNumMsb, lsb(paramVal), msb(paramVal))&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;end&#13;&#10;--console(string.format(msg))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="3d597805777eb58692be3a9457b64db6"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cordAmountChange" luaMethodCode="function cordAmountChange(paramNumLsb,paramNumMsb, paramValLSB, paramValMSB)&#10;&#13;&#10;&#13;&#10;-- 5 values are: devID @ byte 3, paramnum @ 7 &amp; 8, paramVal @ 9 &amp; 10&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x %.2x %.2x 7f f7&quot;, devID, paramNumLsb, paramNumMsb, paramValLSB, paramValMSB)&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;end&#13;&#10;--console(string.format(msg))&#10;end&#10;"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1ce375800a0c90aff21803b9e659a732"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="paramChangeMsgNeg" luaMethodCode="function paramChangeMsgNeg(paramNumLsb,paramNumMsb, paramVal)&#10;&#13;&#10;-- 5 values are: devID @ byte 3, paramnum @ 7 &amp; 8, paramVal @ 9 &amp; 10&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x %.2x 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb, lsb(paramVal))&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;end&#13;&#10;--console(string.format(msg))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="31e1c2cd9353b9b630476c3160b412f5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="paramChangeChorus" luaMethodCode="function paramChangeChorus(paramNumLsb,paramNumMsb, paramVal)&#10;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;if paramVal == 1 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 02 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif paramVal == 2 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 03 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;elseif paramVal == 3 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 04 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 4 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 06 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 5 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 07 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 6 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 08 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 7 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 09 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 8 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 0b 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 9 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 0c 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 10 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 0d 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 11 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 0f 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 12 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 10 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 13 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 11 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 14 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 13 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 15 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 14 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 16 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 15 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 17 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 17 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 18 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 18 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 19 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 19 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 20 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 1a 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 21 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 1b 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 22 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 1d 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 23 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 1e 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 24 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 1f 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 25 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 21 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 26 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 22 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 27 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 23 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 28 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 25 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 29 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 26 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 30 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 27 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 31 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 28 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 32 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 29 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 33 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 2b 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 34 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 2c 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 35 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 2d 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 36 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 2f 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 37 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 30 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 38 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 31 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 39 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 32 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;elseif paramVal == 40 then&#13;&#10;&#13;&#10;&#9;&#9;console(string.format(paramVal))&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 34 7f 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#13;&#10;&#9;&#9;else -- 0 value&#13;&#10;&#13;&#10;&#9;&#9;msg = string.format(&quot;f0 18 21 %.2x 55 01 02 %.2x %.2x 00 7F 7f f7&quot;, devID, paramNumLsb, paramNumMsb)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msg))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="9779e88f32f8bd61679f098222b8afe6"
                     luaMethodValid="1"/>
        </luaMethodGroup>
      </luaMethodGroup>
      <luaMethodGroup name="GUI" uuid="f621fe8ca1bc6dc0ad643168f11b1a72">
        <luaMethodGroup name="Layers" uuid="b375839649abdbfeb0bb0c4a7a0a98c7">
          <luaMethod luaMethodName="showInfoLayer" luaMethodCode="function showInfoLayer(layer)&#13;&#10;&#13;&#10;&#13;&#10;infolayer = canvas:getLayerByName(&quot;infoLayer&quot;)&#13;&#10;&#13;&#10;if layer == 1 then&#13;&#10;&#13;&#10;infolayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;&#13;&#10;elseif layer == 0 then &#13;&#10;&#13;&#10;infolayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;&#13;&#10;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="0e7671f0be0569b32595d13c058a2d5b"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="editorPageSelect" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;&#13;&#10;--Main=0&#10;--Tuning=1&#10;--Amp=2&#10;--Filter=3&#10;--Lfo &amp; aux=4&#10;--Cords=5&#10;&#10;&#10;&#13;editorPageSelect = function(mod, value)&#13;&#10;&#13;&#10;if loaded then&#13;&#10;&#13;&#10;cordslayer = canvas:getLayerByName(&quot;cordsLayer&quot;)&#13;&#10;filterLayer = canvas:getLayerByName(&quot;filterLayer&quot;)&#13;&#10;midiselectionLayer = canvas:getLayerByName(&quot;midiSelectionLayer&quot;)&#13;&#10;groupLinkLayer = canvas:getLayerByName(&quot;groupLinkLayer&quot;)&#13;&#10;TuningLayer = canvas:getLayerByName(&quot;TuningLayer&quot;)&#13;&#10;lfoLayer = canvas:getLayerByName(&quot;lfoAuxLayer&quot;)&#13;&#10;&#13;&#10;if value == 0 then --Main&#13;&#10;&#13;&#10;filterLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;midiselectionLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;groupLinkLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;TuningLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;cordslayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;lfoLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;&#13;&#10;elseif value == 1 then --Tuning&#13;&#10;&#13;&#10;filterLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;midiselectionLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;groupLinkLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;TuningLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;cordslayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;lfoLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;&#13;&#10;elseif value == 2 then --Amp&#13;&#10;&#13;&#10;filterLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;midiselectionLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;groupLinkLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;TuningLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;cordslayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;lfoLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;&#13;&#10;elseif value == 3 then --Filter&#13;&#10;&#13;&#10;filterLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;midiselectionLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;groupLinkLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;TuningLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;cordslayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;lfoLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;&#13;&#10;elseif value == 4 then --Lfo &amp; aux&#13;&#10;&#13;&#10;filterLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;midiselectionLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;groupLinkLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;TuningLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;cordslayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;lfoLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;&#13;&#10;elseif value == 5 then --Cords&#13;&#10;&#13;&#10;filterLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;midiselectionLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;groupLinkLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;TuningLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;cordslayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 1)&#13;&#10;lfoLayer:setPropertyInt(&quot;uiPanelCanvasLayerVisibility&quot;, 0)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;end&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="7622f0231cc331121188e8225088ec24" luaMethodValid="1"/>
        </luaMethodGroup>
      </luaMethodGroup>
      <luaMethodGroup name="modulatorsChangedActions" uuid="5cdf1ee95d391a7ce4dbdd03e8da0eab">
        <luaMethodGroup name="filter" uuid="e90e5e3037fb23d99dc2431a183c057b">
          <luaMethodGroup name="graphics" uuid="e8443dd4cb236aa44e7820facddc1b0c">
            <luaMethod luaMethodName="filterPlot" luaMethodCode="--&#13;-- Called when a component needs repainting&#13;-- @comp&#13;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#13;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#13;--&#13;filterPlot = function(comp,g)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;--cut = panel:getModulatorByName(&quot;cutoff&quot;):getValue()&#13;&#10;--type = panel:getModulatorByName(&quot;filterType&quot;):getValue()&#13;&#10;--res  = panel:getModulatorByName(&quot;resAndGain&quot;):getValue()&#13;&#10;&#13;&#10;local widht = comp:getWidth()&#13;&#10;local height = comp:getHeight()&#13;&#10;local y0 = cut&#13;&#10;local y1 = res&#13;&#10;&#13;&#10;g:setColour(Colour(0x5DFFFFFF))&#13;&#10;&#13;&#10;outerframeborderfill = g:drawRoundedRectangle(4,4,comp:getWidth()-7, comp:getHeight()-7,7, 7);&#13;&#10;g:setColour(Colour(0x5D242424))&#13;&#10;outerframeouterborder = g:drawRoundedRectangle(1,1,comp:getWidth()-2, comp:getHeight()-2,7, 2);&#13;&#10;outerframeinnerborder = g:drawRoundedRectangle(8,8,comp:getWidth()-16, comp:getHeight()-16,2, 2);&#13;&#10;&#13;&#10;&#13;&#10;--p = Path()&#13;&#10;--p:quadraticTo(cutoff,10,20+res,5);&#13;&#10;--stroke = PathStrokeType (2.3 * cutoff, PathStrokeType.beveled, PathStrokeType.rounded);&#13;&#10;--g:setColour (Colour(0xff9237df))&#13;&#10;--g:strokePath (p, stroke, AffineTransform());&#13;&#10;end&#13;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4739d714de6e13c31b63b7ee8432de50"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="AmpEnvPaint" luaMethodCode="--&#13;-- Called when a component needs repainting&#13;-- @comp&#13;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#13;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#13;--&#13;AmpEnvPaint = function(comp,g)&#13;&#10;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;atk1Rate  = fltAtk1RateMod:getValue()/3.2&#13;&#10;atk1Lvl   = fltAtk1LevelMod:getValue()*1.41&#13;&#10;atk2Rate  = fltAtk2RateMod:getValue()/3.2&#13;&#10;atk2Lvl   = fltAtk2LevelMod:getValue()*1.41&#13;&#10;dcy1Rate  = fltDcy1RateMod:getValue()/3.2&#13;&#10;dcy1Lvl   = fltDcy1LevelMod:getValue()*1.41&#13;&#10;dcy2Rate  = fltDcy2RateMod:getValue()/3.2&#13;&#10;dcy2Lvl   = fltDcy2LevelMod:getValue()*1.41&#13;&#10;rls1Rate  = fltRls1RateMod:getValue()/3.2&#13;&#10;rls1Lvl&#9;  = fltRls1LevelMod:getValue()*1.41&#13;&#10;rls2Rate  = fltRls2RateMod:getValue()/3.2&#13;&#10;rls2Lvl&#9;  = fltRls2LevelMod:getValue()*1.41&#13;&#10;&#13;&#10;--(string.format(atk1rRate))&#13;&#10;&#13;&#10;local widht = comp:getWidth()&#13;&#10;local height = comp:getHeight()&#13;&#10;&#13;&#10;g:setColour(Colour(0x5DFFFFFF))&#13;&#10;&#13;&#10;outerframeborderfill = g:drawRoundedRectangle(4,4,comp:getWidth()-7, comp:getHeight()-7,7, 7);&#13;&#10;g:setColour(Colour(0x5D242424))&#13;&#10;outerframeouterborder = g:drawRoundedRectangle(1,1,comp:getWidth()-2, comp:getHeight()-2,7, 2);&#13;&#10;outerframeinnerborder = g:drawRoundedRectangle(8,8,comp:getWidth()-16, comp:getHeight()-16,2, 2);&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;g:setColour(Colour(0xff1050ff))&#13;&#10;&#13;&#10;-- draw lines&#13;&#10;&#13;&#10;--ATK1&#13;&#10;seg1 = g:drawLine(atk1Rate+10 ,(comp:getHeight()-(atk1Lvl))/2,10,comp:getHeight()/2,1.2);&#13;&#10;--ATK2&#13;&#10;seg2 = g:drawLine((atk1Rate+10)+atk2Rate,(comp:getHeight()-(atk2Lvl))/2,atk1Rate+10 ,(comp:getHeight()-(atk1Lvl))/2,1.2);&#13;&#10;--DCY1&#13;&#10;seg3 = g:drawLine(atk2Rate+10+dcy1Rate+atk1Rate,(comp:getHeight()-(dcy1Lvl))/2, atk1Rate+atk2Rate+10,(comp:getHeight()-(atk2Lvl))/2,1.2);&#13;--DCY2&#13;&#10;seg4 = g:drawLine(atk2Rate+10+dcy1Rate+atk1Rate+dcy2Rate,(comp:getHeight()-(dcy2Lvl))/2,atk1Rate+atk2Rate+dcy1Rate+10,(comp:getHeight()-(dcy1Lvl))/2,1.2);&#13;&#10;--RLS1&#13;&#10;seg5 = g:drawLine(atk2Rate+10+dcy1Rate+atk1Rate+dcy2Rate+rls1Rate,(comp:getHeight()-(rls1Lvl))/2,atk1Rate+atk2Rate+dcy1Rate+dcy2Rate+10,(comp:getHeight()-(dcy2Lvl))/2,1.2);&#13;&#10;--RLS2&#13;&#10;seg6 = g:drawLine(atk2Rate+10+dcy1Rate+atk1Rate+dcy2Rate+rls1Rate+rls2Rate ,(comp:getHeight()-(rls2Lvl))/2,atk1Rate+atk2Rate+dcy1Rate+dcy2Rate+rls1Rate+10,(comp:getHeight()-(rls1Lvl))/2,1.2);&#13;&#10;--taildraw&#13;&#10;seg7 = g:drawLine((atk2Rate+10+dcy1Rate+atk1Rate+dcy2Rate+rls1Rate+rls2Rate),(comp:getHeight()-(rls2Lvl))/2,comp:getWidth()-10,(comp:getHeight()-(rls2Lvl))/2,1.2);&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;end"
                       luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                       uuid="b38f4eb5ab7d22e09e2ffc03317968cc" luaMethodValid="1"/>
            <luaMethod luaMethodName="DrawFilter" luaMethodCode="--&#13;-- Called when a component needs repainting&#13;-- @comp&#13;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#13;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#13;--Cutoff &#9;   &#9;&#9;= panel:getModulatorByName(&quot;cutoff&quot;)&#13;&#10;--resonance  &#13;DrawFilter = function(comp,g)&#13;&#10;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#13;&#10;&#9;local widht &#9;= comp:getWidth()&#13;&#10;&#9;local height &#9;= comp:getHeight()&#13;&#10;&#9;local cutoff &#9;= panel:getModulatorByName(&quot;cutoff&quot;):getValue()&#13;&#10;&#9;local res &#9;&#9;= panel:getModulatorByName(&quot;resAndGain&quot;):getValue()&#13;&#10;&#13;&#10;&#9;g:setColour(Colour(0x5DFFFFFF))&#13;&#10;&#13;&#10;&#9;outerframeborderfill = g:drawRoundedRectangle(4,4,comp:getWidth()-7, comp:getHeight()-7,7, 7);&#13;&#10;&#9;&#13;&#10;&#9;g:setColour(Colour(0x5D242424))&#13;&#10;&#9;outerframeouterborder = g:drawRoundedRectangle(1,1,comp:getWidth()-2, comp:getHeight()-2,7, 2);&#13;&#10;&#9;outerframeinnerborder = g:drawRoundedRectangle(8,8,comp:getWidth()-16, comp:getHeight()-16,2, 2);&#13;&#10;&#13;&#10;&#9;end&#13;end"
                       luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                       uuid="bdfb406ebe84c2a63b5283a7a86b7db5" luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="filter envelope" uuid="2bc9f3e523854a675c90f08dbe1eb0df">
            <luaMethod luaMethodName="FilterEnvAtk1" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvAtk1 = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;paramChangeMsg(93,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="5e0c7532ea751a9cfa9ee823ef4edcd0" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvAtk1Lvl" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvAtk1Lvl = function(mod, value)&#13;&#10;&#13;&#10;--console(string.format(value))&#13;&#10;&#9;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if value &gt;= 0 then&#13;&#10;&#9;&#9;&#9;paramChangeMsg(94,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;elseif value &lt; 0 then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local mem = value*(-1)&#13;&#10;&#9;&#9;&#9;local mem = 128-mem&#13;&#10;&#13;&#10;&#13;&#10;&#9;--&#9;&#9;console(string.format(mem))&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsgNeg(94,0,mem)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;&#9;repaint = a:getComponent()&#13;&#10;&#9;&#9;repaint:repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="ccad2a22c68451023135fb179c75124a" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvAtk2Rate" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvAtk2Rate = function(mod, value)&#13;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;if restore ~= true then paramChangeMsg(95,0,value) end&#13;&#10;&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;end&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="25ee6dc77f4dec6821f5dcded3d8326a" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvAtk2Level" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvAtk2Level = function(mod, value)&#13;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if value &gt;= 0 then&#13;&#10;&#9;&#9;&#9;paramChangeMsg(96,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;elseif value &lt; 0 then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local mem = value*(-1)&#13;&#10;&#9;&#9;&#9;local mem = 128-mem&#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsgNeg(96,0,mem)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;&#9;repaint = a:getComponent()&#13;&#10;&#9;&#9;repaint:repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="9b725cf9e4f25da9300bdd83fdda8d76" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvDcy1Rate" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvDcy1Rate = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;paramChangeMsg(97,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="9228d640e7be843c49a01a63531feeb2" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvDcy1Level" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvDcy1Level = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if value &gt;= 0 then&#13;&#10;&#9;&#9;&#9;paramChangeMsg(98,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;elseif value &lt; 0 then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local mem = value*(-1)&#13;&#10;&#9;&#9;&#9;local mem = 128-mem&#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsgNeg(98,0,mem)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;&#9;repaint = a:getComponent()&#13;&#10;&#9;&#9;repaint:repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="dd631e003f4548999dd026703db49f63" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvDcy2Rate" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvDcy2Rate = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;paramChangeMsg(99,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="2acb7ff65eadaae3cb5ffc3110c53161" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvDcy2Level" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvDcy2Level = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if value &gt;= 0 then&#13;&#10;&#9;&#9;&#9;paramChangeMsg(100,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;elseif value &lt; 0 then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local mem = value*(-1)&#13;&#10;&#9;&#9;&#9;local mem = 128-mem&#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsgNeg(100,0,mem)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;&#9;repaint = a:getComponent()&#13;&#10;&#9;&#9;repaint:repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="3994a012c19f62384fd7e6f8d699c88a" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvRls1Rate" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvRls1Rate = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;paramChangeMsg(101,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="edb0605bb128f139d33d00951fa642a9" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvRls1Level" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvRls1Level = function(mod, value)&#13;&#10;&#13;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if value &gt;= 0 then&#13;&#10;&#9;&#9;&#9;paramChangeMsg(102,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;elseif value &lt; 0 then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local mem = value*(-1)&#13;&#10;&#9;&#9;&#9;local mem = 128-mem&#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsgNeg(102,0,mem)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;&#9;repaint = a:getComponent()&#13;&#10;&#9;&#9;repaint:repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="808ed0887a39662ffc655281f386316d" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvRls2Rate" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvRls2Rate = function(mod, value)&#13;&#10;&#13;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;paramChangeMsg(103,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="ae31eedbe41d91a974d254b7c2e48254" luaMethodValid="1"/>
            <luaMethod luaMethodName="FilterEnvRls2Level" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;FilterEnvRls2Level = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if value &gt;= 0 then&#13;&#10;&#9;&#9;&#9;paramChangeMsg(104,0,value) &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;elseif value &lt; 0 then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;local mem = value*(-1)&#13;&#10;&#9;&#9;&#9;local mem = 128-mem&#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsgNeg(104,0,mem)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;a = panel:getModulatorByName(&quot;ampEnvelopeGraph&quot;) &#13;&#10;&#9;&#9;repaint = a:getComponent()&#13;&#10;&#9;&#9;repaint:repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                       uuid="c8c7346e63efb9f1541315137a09a079" luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethod luaMethodName="resAndGainChanged" luaMethodCode="function resAndGainChanged(mod, value)&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;if filterMode ~= nil then&#13;&#10;&#13;&#10;&#13;&#10;local type = panel:getModulatorByName(&quot;filterType&quot;):getValue()&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;if type == 0 then choice = 1 end --lowpass1&#13;&#10;if type == 1 then choice = 1 end --lowpass2&#13;&#10;if type == 2 then choice = 1 end --lowpass3&#13;&#10;if type == 3 then choice = 1 end --highpass1&#13;&#10;if type == 4 then choice = 1 end --highpass2&#13;&#10;if type == 5 then choice = 1 end --bandpass1&#13;&#10;if type == 6 then choice = 1 end --bandpass2&#13;&#10;if type == 7 then choice = 1 end --bandpass3&#13;&#10;if type == 8 then choice = 2 end --swept1&#13;&#10;if type == 9 then choice = 2 end --swept2&#13;&#10;if type == 10 then choice = 2 end --swept3&#13;&#10;if type == 11 then choice = 1 end --phaser1&#13;&#10;if type == 12 then choice = 1 end --phaser2&#13;&#10;if type == 13 then choice = 1 end --bat-phaser&#13;&#10;if type == 14 then choice = 1 end --flanger lite&#13;&#10;if type == 15 then choice = 1 end --vocal AhayEe&#13;&#10;if type == 16 then choice = 1 end --vocal OoAh&#13;&#10;if type == 17 then choice = 2 end --dual eq morph&#13;&#10;if type == 18 then choice = 1 end --2eq + lp morph&#13;&#10;if type == 19 then choice = 1 end --2eq morph + expression&#13;&#10;if type == 20 then choice = 2 end --peak/shelf morph&#13;&#10;&#13;&#10;&#13;&#10;if resLCD then&#13;&#10;&#13;&#10;&#13;&#10;--&#9;resLCD:setPropertyString(&quot;uiLabelJustification&quot;, &quot;centred&quot;)&#13;&#10;--&#9;resLCD:setPropertyString(&quot;componentRectangle&quot;, &quot;520 190 87 27&quot;)&#13;&#10;&#13;&#10;&#9;if choice == 1 then&#9;resLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..value)&#13;&#10;&#9;elseif choice == 2 then&#9;resLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..dbscale[value+1])&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;--&#9;a = panel:getModulatorByName(&quot;filterPlot&quot;) &#13;&#10;--&#9;repaint = a:getComponent()&#13;&#10;--&#9;repaint:repaint()&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--send midi change&#13;&#10;restore = panel:getRestoreState()&#13;&#10;if restore ~= true then &#13;&#10;paramChangeMsg(84,0,value)&#13;&#10;end&#13;&#10;end&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="8a775211bf5f86be0e760623ba4815b2"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="filterType" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;filterType = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;if resonance ~= nil then &#13;&#10; resval = resonance:getValue()&#13;&#10; cutoff = Cutoff:getValue()&#13;&#10;end&#13;&#10;&#13;&#10;if value == 0 then Choice = 1 end --lowpass1&#13;&#10;if value == 1 then Choice = 1 end --lowpass2&#13;&#10;if value == 2 then Choice = 1 end --lowpass3&#13;&#10;if value == 3 then Choice = 2 end --highpass1&#13;&#10;if value == 4 then Choice = 2 end --highpass2&#13;&#10;if value == 5 then Choice = 3 end --bandpass1&#13;&#10;if value == 6 then Choice = 3 end --bandpass2&#13;&#10;if value == 7 then Choice = 3 end --bandpass3&#13;&#10;if value == 8 then Choice = 4 end --swept1&#13;&#10;if value == 9 then Choice = 4 end --swept2&#13;&#10;if value == 10 then Choice = 4 end --swept3&#13;&#10;if value == 11 then Choice = 5 end --phaser1&#13;&#10;if value == 12 then Choice = 5 end --phaser2&#13;&#10;if value == 13 then Choice = 5 end --bat-phaser&#13;&#10;if value == 14 then Choice = 6 end --flanger lite&#13;&#10;if value == 15 then Choice = 7 end --vocal AhayEe&#13;&#10;if value == 16 then Choice = 7 end --vocal OoAh&#13;&#10;if value == 17 then Choice = 8 end --dual eq morph&#13;&#10;if value == 18 then Choice = 9 end --2eq + lp morph&#13;&#10;if value == 19 then Choice = 10 end --2eq morph + expression&#13;&#10;if value == 20 then Choice = 11 end --peak/shelf morph&#13;&#10;&#13;&#10;if cutoffComp ~= nil  then&#13;&#10;&#13;&#10;&#9;if Choice == 1 then --lowpass 1 2 and 3&#13;&#10;--cutoffCompoff&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Cutoff&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..lpCompArray)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Resonance&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;--send filterchange msg&#13;&#10;restore = panel:getRestoreState()&#13;&#10;if restore ~= true then &#13;&#10;paramChangeMsg(82,0,value)&#13;&#10;end&#13;&#10;&#13;&#10;&#9;elseif Choice == 2 then --highpass 1 and 2&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Cutoff&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;69hz=0\n71hz=1\n73hz=2\n75hz=3\n77hz=4\n79hz=5\n81hz=6\n83hz=7\n85hz=8\n87hz=9\n89hz=10\n91hz=11\n93hz=12\n95hz=13\n97hz=14\n100hz=15\n103hz=16\n106hz=17\n109hz=18\n112hz=19\n115hz=20\n118hz=21\n121hz=22\n124hz=23\n127hz=24\n130hz=25\n133hz=26\n136hz=27\n139hz=28\n142hz=29\n145hz=30\n149hz=31\n153hz=32\n157hz=33\n161hz=34\n165hz=35\n169hz=36\n173hz=37\n177hz=38\n181hz=39\n185hz=40\n189hz=41\n193hz=42\n198hz=43\n203hz=44\n208hz=45\n213hz=46\n218hz=47\n223hz=48\n228hz=49\n233hz=50\n238hz=51\n244hz=52\n250hz=53\n256hz=54\n262hz=55\n268hz=56\n274hz=57\n280hz=58\n286hz=59\n292hz=60\n299hz=61\n306hz=62\n313hz=63\n320hz=64\n327hz=65\n334hz=66\n342hz=67\n350hz=68\n358hz=69\n366hz=70\n374hz=71\n382hz=72\n390hz=73\n399hz=74\n408hz=75\n417hz=76\n426hz=77\n435hz=78\n445hz=79\n455hz=80\n465hz=81\n475hz=82\n485hz=83\n496hz=84\n507hz=85\n518hz=86\n529hz=87\n541hz=88\n553hz=89\n565hz=90\n577hz=91\n590hz=92\n603hz=93\n616hz=94\n629hz=95\n643hz=96\n657hz=97\n671hz=98\n686hz=99\n701hz=100\n716hz=101\n732hz=102\n748hz=103\n764hz=104\n780hz=105\n797hz=106\n814hz=107\n832hz=108\n850hz=109\n868hz=110\n887hz=111\n906hz=112\n925hz=113\n945hz=114\n965hz=115\n986hz=116\n1007hz=117\n1029hz=118\n1051hz=119\n1074hz=120\n1097hz=121\n1120hz=122\n1144hz=123\n1168hz=124\n1193hz=125\n1218hz=126\n1244hz=127\n1271hz=128\n1298hz=129\n1326hz=130\n1354hz=131\n1383hz=132\n1412hz=133\n1442hz=134\n1473hz=135\n1504hz=136\n1536hz=137\n1569hz=138\n1602hz=139\n1636hz=140\n1671hz=141\n1707hz=142\n1743hz=143\n1780hz=144\n1818hz=145\n1857hz=146\n1896hz=147\n1936hz=148\n1977hz=149\n2019hz=150\n2062hz=151\n2106hz=152\n2151hz=153\n2197hz=154\n2244hz=155\n2292hz=156\n2341hz=157\n2391hz=158\n2442hz=159\n2494hz=160\n2547hz=161\n2601hz=162\n2656hz=163\n2712hz=164\n2769hz=165\n2827hz=166\n2887hz=167\n2948hz=168\n3010hz=169\n3074hz=170\n3139hz=171\n3205hz=172\n3273hz=173\n3342hz=174\n3412hz=175\n3484hz=176\n3557hz=177\n3632hz=178\n3709hz=179\n3787hz=180\n3867hz=181\n3948hz=182\n4031hz=183\n4116hz=184\n4203hz=185\n4292hz=186\n4382hz=187\n4474hz=188\n4568hz=189\n4664hz=190\n4762hz=191\n4862hz=192\n4964hz=193\n5068hz=194\n5175hz=195\n5284hz=196\n5395hz=197\n5508hz=198\n5624hz=199\n5742hz=200\n5863hz=201\n5986hz=202\n6112hz=203\n6240hz=204\n6371hz=205\n6505hz=206\n6642hz=207\n6782hz=208\n6925hz=209\n7070hz=210\n7219hz=211\n7371hz=212\n7526hz=213\n7684hz=214\n7845hz=215\n8010hz=216\n8178hz=217\n8350hz=218\n8525hz=219\n8704hz=220\n8887hz=221\n9074hz=222\n9264hz=223\n9458hz=224\n9657hz=225\n9860hz=226\n10067hz=227\n10278hz=228\n10494hz=229\n10714hz=230\n10939hz=231\n11169hz=232\n11403hz=233\n11642hz=234\n11886hz=235\n12135hz=236\n12390hz=237\n12650hz=238\n12915hz=239\n13186hz=240\n13463hz=241\n13745hz=242\n14033hz=243\n14327hz=244\n14627hz=245\n14934hz=246\n15247hz=247\n15567hz=248\n15893hz=249\n16226hz=250\n16566hz=251\n16913hz=252\n17268hz=253\n17630hz=254\n18000hz=255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Resonance&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;--send filterchange msg&#13;&#10;&#13;&#10;&#13;&#10;&#9;elseif Choice == 3 then --bandpass 1 2 and 3&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Cutoff&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;57hz=0\n59hz=1\n61hz=2\n63hz=3\n65hz=4\n67hz=5\n69hz=6\n71hz=7\n73hz=8\n75hz=9\n77hz=10\n79hz=11\n81hz=12\n83hz=13\n85hz=14\n87hz=15\n89hz=16\n91hz=17\n93hz=18\n95hz=19\n97hz=20\n99hz=21\n101hz=22\n103hz=23\n105hz=24\n107hz=25\n110hz=26\n113hz=27\n116hz=28\n119hz=29\n122hz=30\n125hz=31\n128hz=32\n131hz=33\n134hz=34\n137hz=35\n140hz=36\n143hz=37\n146hz=38\n149hz=39\n152hz=40\n155hz=41\n158hz=42\n162hz=43\n166hz=44\n170hz=45\n174hz=46\n178hz=47\n182hz=48\n186hz=49\n190hz=50\n194hz=51\n198hz=52\n202hz=53\n206hz=54\n210hz=55\n214hz=56\n219hz=57\n224hz=58\n229hz=59\n234hz=60\n239hz=61\n244hz=62\n249hz=63\n254hz=64\n259hz=65\n264hz=66\n269hz=67\n275hz=68\n281hz=69\n287hz=70\n293hz=71\n299hz=72\n305hz=73\n311hz=74\n317hz=75\n323hz=76\n330hz=77\n337hz=78\n344hz=79\n351hz=80\n358hz=81\n365hz=82\n372hz=83\n380hz=84\n388hz=85\n396hz=86\n404hz=87\n412hz=88\n420hz=89\n428hz=90\n437hz=91\n446hz=92\n455hz=93\n464hz=94\n473hz=95\n482hz=96\n492hz=97\n502hz=98\n512hz=99\n522hz=100\n532hz=101\n543hz=102\n554hz=103\n565hz=104\n576hz=105\n587hz=106\n599hz=107\n611hz=108\n623hz=109\n635hz=110\n648hz=111\n661hz=112\n674hz=113\n687hz=114\n700hz=115\n714hz=116\n728hz=117\n742hz=118\n757hz=119\n772hz=120\n787hz=121\n802hz=122\n818hz=123\n834hz=124\n850hz=125\n867hz=126\n884hz=127\n901hz=128\n919hz=129\n937hz=130\n955hz=131\n974hz=132\n993hz=133\n1012hz=134\n1032hz=135\n1052hz=136\n1072hz=137\n1093hz=138\n1114hz=139\n1136hz=140\n1158hz=141\n1180hz=142\n1203hz=143\n1226hz=144\n1250hz=145\n1274hz=146\n1299hz=147\n1324hz=148\n1350hz=149\n1376hz=150\n1403hz=151\n1430hz=152\n1458hz=153\n1486hz=154\n1515hz=155\n1544hz=156\n1574hz=157\n1604hz=158\n1635hz=159\n1666hz=160\n1698hz=161\n1731hz=162\n1764hz=163\n1798hz=164\n1833hz=165\n1868hz=166\n1904hz=167\n1941hz=168\n1978hz=169\n2016hz=170\n2055hz=171\n2094hz=172\n2134hz=173\n2175hz=174\n2217hz=175\n2259hz=176\n2302hz=177\n2346hz=178\n2391hz=179\n2437hz=180\n2484hz=181\n2531hz=182\n2579hz=183\n2628hz=184\n2678hz=185\n1729hz=186\n2781hz=187\n2834hz=188\n2888hz=189\n2943hz=190\n2999hz=191\n3056hz=192\n3114hz=193\n3173hz=194\n3233hz=195\n3295hz=196\n3358hz=197\n3422hz=198\n3487hz=199\n3553hz=200\n3621hz=201\n3690hz=202\n3760hz=203\n3832hz=204\n3905hz=205\n3979hz=206\n4055hz=207\n4132hz=208\n4211hz=209\n4291hz=210\n4373hz=211\n4456hz=212\n4541hz=213\n4627hz=214\n4715hz=215\n4805hz=216\n4896hz=217\n4989hz=218\n5084hz=219\n5181hz=220\n5279hz=221\n5379hz=222\n5481hz=223\n5585hz=224\n5691hz=225\n5799hz=226\n5909hz=227\n6021hz=228\n6135hz=229\n6252hz=230\n6371hz=231\n6492hz=232\n6615hz=233\n6741hz=234\n6869hz=235\n6999hz=236\n7132hz=237\n7267hz=238\n7405hz=239\n7545hz=240\n7688hz=241\n7834hz=242\n7983hz=243\n8134hz=244\n8288hz=245\n8445hz=246\n8605hz=247\n8768hz=248\n8934hz=249\n9103hz=250\n9276hz=251\n9452hz=252\n9631hz=253\n9814hz=254\n10000hz=255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Resonance&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;elseif Choice == 4 then --swept eq 1 2 and 3&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Swept eq freq&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;83hz=0\n85hz=1\n87hz=2\n89hz=3\n91hz=4\n93hz=5\n95hz=6\n97hz=7\n99hz=8\n101hz=9\n103hz=10\n105hz=11\n107hz=12\n109hz=13\n111hz=14\n113hz=15\n116hz=16\n119hz=17\n122hz=18\n125hz=19\n128hz=20\n131hz=21\n134hz=22\n137hz=23\n140hz=24\n143hz=25\n146hz=26\n149hz=27\n152hz=28\n155hz=29\n158hz=30\n161hz=31\n164hz=32\n167hz=33\n170hz=34\n174hz=35\n178hz=36\n182hz=37\n186hz=38\n190hz=39\n194hz=40\n198hz=41\n202hz=42\n206hz=43\n210hz=44\n214hz=45\n218hz=46\n222hz=47\n226hz=48\n231hz=49\n236hz=50\n241hz=51\n246hz=52\n251hz=53\n256hz=54\n261hz=55\n266hz=56\n271hz=57\n276hz=58\n281hz=59\n287hz=60\n293hz=61\n299hz=62\n305hz=63\n311hz=64\n317hz=65\n323hz=66\n329hz=67\n335hz=68\n342hz=69\n349hz=70\n356hz=71\n363hz=72\n370hz=73\n377hz=74\n384hz=75\n391hz=76\n399hz=77\n407hz=78\n415hz=79\n423hz=80\n431hz=81\n439hz=82\n447hz=83\n455hz=84\n464hz=85\n473hz=86\n482hz=87\n491hz=88\n500hz=89\n509hz=90\n519hz=91\n529hz=92\n539hz=93\n549hz=94\n559hz=95\n570hz=96\n581hz=97\n592hz=98\n603hz=99\n614hz=100\n625hz=101\n637hz=102\n649hz=103\n661hz=104\n673hz=105\n686hz=106\n699hz=107\n712hz=108\n725hz=109\n738hz=110\n752hz=111\n766hz=112\n780hz=113\n794hz=114\n809hz=115\n824hz=116\n839hz=117\n855hz=118\n871hz=119\n887hz=120\n903hz=121\n920hz=122\n937hz=123\n954hz=124\n972hz=125\n990hz=126\n1008hz=127\n1027hz=128\n1046hz=129\n1065hz=130\n1085hz=131\n1105hz=132\n1125hz=133\n1146hz=134\n1167hz=135\n1183hz=136\n1210hz=137\n1232hz=138\n1255hz=139\n1278hz=140\n1301hz=141\n1325hz=142\n1349hz=143\n1374hz=144\n1399hz=145\n1425hz=146\n1451hz=147\n1477hz=148\n1504hz=149\n1531hz=150\n1559hz=151\n1587hz=152\n1616hz=153\n1645hz=154\n1675hz=155\n1705hz=156\n1736hz=157\n1768hz=158\n1800hz=159\n1833hz=160\n1866hz=161\n1900hz=162\n1934hz=163\n1969hz=164\n2005hz=165\n2041hz=166\n2078hz=167\n2116hz=168\n2154hz=169\n2193hz=170\n2233hz=171\n2273hz=172\n2314hz=173\n2356hz=174\n2399hz=175\n2442hz=176\n2486hz=177\n2531hz=178\n2577hz=179\n2624hz=180\n2671hz=181\n2719hz=182\n2768hz=183\n2818hz=184\n2869hz=185\n2921hz=186\n2974hz=187\n3028hz=189\n3083hz=190\n3139hz=191\n3196hz=192\n3254hz=193\n3313hz=194\n3373hz=195\n3434hz=196\n3496hz=197\n3559hz=198\n3623hz=199\n3688hz=200\n3754hz=201\n3822hz=202\n3891hz=203\n3961hz=204\n4032hz=205\n4105hz=206\n4179hz=207\n4254hz=208\n4331hz=209\n4409hz=210\n4488hz=211\n4569hz=212\n4651hz=213\n4735hz=214\n4820hz=215\n4907hz=216\n4995hz=217\n5085hz=218\n5177hz=219\n5270hz=220\n5365hz=221\n5461hz=222\n5559hz=223\n5659hz=224\n5761hz=225\n5865hz=226\n5970hz=227\n6077hz=228\n6186hz=229\n6297hz=230\n6410hz=231\n6525hz=232\n6642hz=233\n6761hz=234\n6882hz=235\n7006hz=236\n7132hz=237\n7260hz=238\n7390hz=239\n7523hz=240\n7658hz=241\n7796hz=242\n7936hz=243\n8078hz=244\n8223hz=245\n8371hz=246\n8521hz=247\n8674hz=248\n8830hz=249\n8989hz=250\n9150hz=251\n9314hz=252\n9481hz=253\n9651hz=254\n9824hz=255\n10000hz=256&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..dbArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;elseif Choice == 5 then --phaser 1 2 and bat phaser&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Phaser freq&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Resonance&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;elseif Choice == 6 then --flanger lite&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Flanger freq&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Resonance&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;elseif Choice == 7 then --vocal filters&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Morph&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Body size&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;  &quot;)&#13;&#10;&#13;&#10;&#9;elseif Choice == 8 then  --dual eq morph&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Morph&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..dbArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Low&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;High&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Low&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;High&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#9;&#13;&#10;&#9;MorphFreqArray(1)&#13;&#10;&#9;FilterGainValues()&#13;&#10;&#13;&#10;&#9;elseif Choice == 9 then  --2eq + lp morph&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Fc / Morph&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Lpf Q&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Low&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;High&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Low&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;High&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#13;&#10;--&#9;morph01Mod:getComponent():setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#13;&#10;&#9;MorphFreqArray(1)&#13;&#10;&#9;FilterGainValues()&#13;&#10;&#13;&#10;elseif Choice == 10 then  ----2eq morph + expression&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Morph&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Expression&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..resArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Low&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;High&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Low&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;High&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Gain&quot;)&#13;&#10;&#13;&#10;&#9;MorphFreqArray(1)&#13;&#10;&#9;FilterGainValues()&#13;&#10;&#13;&#10;&#9;elseif Choice == 11 then  --peak/shelf morph&#13;&#10;&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Morph&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;cutoffComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255&quot;)&#13;&#10;&#9;Cutoff:setModulatorValue(cutoff, false, true, false)&#13;&#10;--res&#13;&#10;&#9;resComp:setPropertyString(&quot;componentVisibleName&quot;, &quot;Peak&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;)&#13;&#10;&#9;resComp:setPropertyString(&quot;uiFixedSliderContent&quot;,&quot;&quot;..dbArray)&#13;&#10;&#9;resonance:setModulatorValue(resval, false, true, false)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Freq&quot;)&#13;&#10;&#9;morph02Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Shelf&quot;)&#13;&#10;&#9;morph03Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Peak&quot;)&#13;&#10;&#9;morph04Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Freq&quot;)&#13;&#10;&#9;morph05Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Shelf&quot;)&#13;&#10;&#9;morph06Mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;, &quot;Peak&quot;)&#13;&#10;&#13;&#10;&#9;morph01Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph02Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph03Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph04Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph05Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;morph06Mod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#13;&#10;&#9;MorphFreqArray(2)&#13;&#10;&#9;FilterGainValues()&#13;&#10;&#13;&#10;&#9;end&#13;&#10;--&#9;a = panel:getModulatorByName(&quot;filterPlot&quot;) &#13;&#10;--&#9;repaint = a:getComponent()&#13;&#10;--&#9;repaint:repaint()&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--send midi change&#13;&#10;restore = panel:getRestoreState()&#13;&#10;if restore ~= true then &#13;&#10;paramChangeMsg(82,0,value)&#13;&#10;end&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="dc00baab77be0b3f15ecbb0da730728d"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cutoffChanged" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cutoffChanged = function(mod, value)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;filtertype = panel:getModulatorByName(&quot;filterType&quot;):getValue()&#13;&#10;&#13;&#10;if filtertype == 0 then Choice = 0 end --lowpass1&#13;&#10;if filtertype == 1 then Choice = 0 end --lowpass2&#13;&#10;if filtertype == 2 then Choice = 0 end --lowpass3&#13;&#10;if filtertype == 3 then Choice = 1 end --highpass1&#13;&#10;if filtertype == 4 then Choice = 1 end --highpass2&#13;&#10;if filtertype == 5 then Choice = 2 end --bandpass1&#13;&#10;if filtertype == 6 then Choice = 2 end --bandpass1&#13;&#10;if filtertype == 7 then Choice = 2 end --bandpass3&#13;&#10;if filtertype == 8 then Choice = 3 end --swept1&#13;&#10;if filtertype == 9 then Choice = 3 end --swept2&#13;&#10;if filtertype == 10 then Choice = 3 end --swept3&#13;&#10;if filtertype == 11 then Choice = 4 end --phaser1&#13;&#10;if filtertype == 12 then Choice = 4 end --phaser2&#13;&#10;if filtertype == 13 then Choice = 4 end --bat-phaser&#13;&#10;if filtertype == 14 then Choice = 4 end --flanger lite&#13;&#10;if filtertype == 15 then Choice = 4 end --vocal AhayEe&#13;&#10;if filtertype == 16 then Choice = 4 end --vocal OoAh&#13;&#10;if filtertype == 17 then Choice = 4 end --dual eq morph&#13;&#10;if filtertype == 18 then Choice = 4 end --2eq + lp morph&#13;&#10;if filtertype == 19 then Choice = 4 end --2eq morph + expression&#13;&#10;if filtertype == 20 then Choice = 4 end --peak/shelf morph&#13;&#10;&#13;&#10;&#13;&#10;if cutoffLCD ~= nil then&#13;&#10;&#13;&#10;&#9;if Choice == 0 then cutoffLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..lowpass[value+1])&#13;&#10;&#9;elseif Choice == 1 then&#9;cutoffLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..highpass[value+1])&#13;&#10;&#9;elseif Choice == 2 then&#9;cutoffLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..bandpass[value+1])&#13;&#10;&#9;elseif Choice == 3 then&#9;cutoffLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..swept[value+1])&#13;&#10;&#9;elseif Choice == 4 then&#9;cutoffLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;..value)&#13;&#10;&#9;end&#13;&#10;&#13;end&#13;&#10;&#13;&#10;--&#9;a = panel:getModulatorByName(&quot;filterPlot&quot;) &#13;&#10;--&#9;repaint = a:getComponent()&#13;&#10;--&#9;repaint:repaint()&#13;&#10;--end&#13;&#10;&#13;&#10;&#13;&#10;--send midi change&#13;&#10;restore = panel:getRestoreState()&#13;&#10;if restore ~= true then &#13;&#10;paramChangeMsg(83,0,value)&#13;&#10;end&#13;&#10;end&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="4a2c8efe29dc94a5e438e51e03a9ebcc"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="switchFilter" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;switchFilter = function(mod, value)&#13;&#10;restore = panel:getRestoreState()&#13;&#10;if restore ~= true then &#13;&#10;if filterMode ~=  nil then&#13;&#10;filterMode:setModulatorValue(value, false, false, false)&#13;&#10;end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="338de9fd70e1d144d3456e5a1db3527b" luaMethodValid="1"/>
          <luaMethod luaMethodName="MorphParam01" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;MorphParam01 = function(mod, value)&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#9;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#9;paramChangeMsg(87,0,value)&#13;&#10;&#9;&#13;&#10;&#9;end&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#10;&#13;&#10;&#13;&#10;end&#13;"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="32f78d5003f38c4ab1bb31d44b5498b5" luaMethodValid="1"/>
          <luaMethod luaMethodName="MorphShelf01" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;MorphShelf01 = function(mod, value)&#13;&#10;&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;--&#9;if value &gt;= 0 then&#13;&#10;&#9;--&#9;value = value+64&#13;&#10;&#9;&#9;paramChangeMsg(88,0,16384+value)&#13;&#10;--&#9;&#9;else&#13;&#10;--&#9;&#9;paramChangeMsg(88,0,16384+value*(-1))&#13;&#10;--&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;repaint = a:getComponent()&#13;&#10;repaint:repaint()&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="0bb81115c58fdc90abba2ce3328dc049" luaMethodValid="1"/>
          <luaMethod luaMethodName="MorphPeak01" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;MorphPeak01 = function(mod, value)&#13;&#10;&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;value = value&#13;&#10;&#9;paramChangeMsg(89,0,value)&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#9;end&#13;&#10;end&#13;"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="27ad3450676a611a39d158be391f93af" luaMethodValid="1"/>
          <luaMethod luaMethodName="MorphParam04" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;MorphParam04 = function(mod, value)&#13;&#10;&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;value = value&#13;&#10;&#9;paramChangeMsg(90,0,value)&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="8641e4dacc786cd46b539a1efd80a975" luaMethodValid="1"/>
          <luaMethod luaMethodName="MorphParam05" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;MorphParam05 = function(mod, value)&#13;&#10;&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;--&#9;if value &gt;= 0 then&#13;&#10;--&#9;&#9;value = value+64&#13;&#10;&#9;&#9;paramChangeMsg(91,0,16384+value)&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#9;end&#13;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="1be229f07fbc25316f8b3fa25acf61d5" luaMethodValid="1"/>
          <luaMethod luaMethodName="MorphParam06" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;MorphParam06 = function(mod, value)&#13;&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;value = value&#13;&#10;&#9;paramChangeMsg(92,0,value)&#13;&#10;&#13;&#10;&#9;a = panel:getModulatorByName(&quot;FilterGraph&quot;) &#13;&#10;&#9;repaint = a:getComponent()&#13;&#10;&#9;repaint:repaint()&#13;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="1b019fd9811ea67c9315e689940b075f" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Tuning" uuid="2a6e1bff1b9998f97ee12c5ace88a498">
          <luaMethod luaMethodName="coarseTune" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;coarseTune = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;-- (128*128)-72+value for range limiting&#13;&#10;&#13;&#10;&#9;if restore ~= true then paramChangeMsg(41,0,16312+value) end&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1143eeea8ba28f8118de2b052b2fead9"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="fineTune" luaMethodCode="fineTune = function(mod, value)&#13;&#10;&#13;&#10;if restore ~= true then paramChangeMsg(42,0,16320+value) end&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e154b88201baca760c9e620b05311ad9"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="keyTranspose" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;keyTranspose = function(mod, value)&#13;&#10;&#13;&#10;value = value +104&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then paramChangeMsg(43,0,value+16360) end&#13;&#10;&#9;console(string.format(&quot;KeyTranspose sent with value %.x&quot;,value))&#13;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="9deff3b51b82805f4afeb90ac40ae254" luaMethodValid="1"/>
          <luaMethod luaMethodName="voiceNonTranspose" luaMethodCode="function voiceNonTranspose(mod, value)&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then paramChangeMsg(57,0,value)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if value == 1 then &#13;&#10;&#13;&#10;&#9;voiceKeytrans:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;voiceKeytrans:getComponent():setProperty(&quot;componentVisibleName&quot;,&quot; &quot;,true)&#13;&#10;&#9;coarseTune:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;coarseTune:getComponent():setProperty(&quot;componentVisibleName&quot;,&quot; &quot;,true)&#13;&#10;&#9;voiceFineTuneMod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;BlackAngleGrey&quot;,true)&#13;&#10;&#9;voiceFineTuneMod:getComponent():setProperty(&quot;componentVisibleName&quot;,&quot; &quot;,true)&#13;&#10;&#13;&#10;&#9;else &#13;&#10;&#13;&#10;&#9;voiceKeytrans:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;voiceKeytrans:getComponent():setProperty(&quot;componentVisibleName&quot;,&quot;Key transpose&quot;,true)&#13;&#10;&#9;coarseTune:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;coarseTune:getComponent():setProperty(&quot;componentVisibleName&quot;,&quot;Coarse tune&quot;,true)&#13;&#10;&#9;voiceFineTuneMod:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;blackAngel97x4&quot;,true)&#13;&#10;&#9;voiceFineTuneMod:getComponent():setProperty(&quot;componentVisibleName&quot;,&quot;Fine tune&quot;,true)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;--what(comp)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="504ace49b8c179ca093137ecdf4de86f"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="SampleZoneRootNote" luaMethodCode="function SampleZoneRootNote(mod, value)&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;paramChangeMsg(44,0,value)&#13;&#10;&#13;&#10;&#13;&#10;&#9;end&#10;end&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="854cc82d27957df15d9de4a1ce0e2c9c"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="SetSampleZoneLowKey" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;SetSampleZoneLowKey = function(mod, value)&#13;&#10;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#9;&#13;&#10;&#9;--&#9;if midiInActive == true then&#13;&#10;&#9;&#13;&#10;&#9;&#9;local low  = value&#13;&#10;&#9;&#9;local high = panel:getModulatorByName(&quot;sampleHighKey&quot;):getValue()&#13;&#10;&#9;&#9;local range = high-low&#13;&#10;&#9;&#9;local c = panel:getModulatorByName(&quot;sampleZoneKeyWinFade&quot;)&#13;&#10;&#13;&#10;&#9;&#9;c:getComponent():setProperty(&quot;uiSliderMax&quot;,range, false)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;--&#9;&#9;if high &gt; range then&#13;&#10;&#9;--&#9;&#9;c:setModulatorValue(0,true,false,true)&#13;&#10;&#9;--&#9;&#9;c:setModulatorValue(range,true,false,true)&#13;&#10;--&#13;&#10;--&#9;&#9;&#9;else&#13;&#10;--&#9;&#9;&#9;c:setModulatorValue(0,true,false,true)&#13;&#10;--&#9;&#9;&#9;c:setModulatorValue(high,true,false,true)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#13;&#10;--&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;&#9;&#9;paramChangeMsg(45,0,value)&#13;&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#13;&#10;&#9;--end&#13;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="a6aeb1095e4ddaf2fb5594c2f9ead119" luaMethodValid="1"/>
          <luaMethod luaMethodName="SetSampleZoneHighKey" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;SetSampleZoneHighKey = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;local low  = panel:getModulatorByName(&quot;sampleLowKey&quot;):getValue()&#13;&#10;local high = value&#13;&#10;local range = high-low&#13;&#10;&#13;&#10;local c = panel:getModulatorByName(&quot;sampleZoneKeyWinFade&quot;)&#13;&#10;c:getComponent():setProperty(&quot;uiSliderMax&quot;,range, false)&#13;&#10;if c:getValue() &gt; range then&#13;&#10;c:setModulatorValue(range,true,false,true)&#13;&#10;end&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;paramChangeMsg(47,0,value)&#13;&#10;&#13;&#10;&#13;&#10;&#9;end&#10;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="1a69de2b7ed9438307def3ed5d34a21a" luaMethodValid="1"/>
          <luaMethod luaMethodName="SetSampleZoneKeyWinFade" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;&#10;-- Range of this modulator is changed by low- &amp; highkeysettings (range can never be greater that the total interval)&#13;&#10;&#13;SetSampleZoneKeyWinFade = function(mod, value)&#13;&#10;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#9;&#9;if restore ~= true then &#13;&#10;&#9;&#9;&#9;if midiInActive ~= false then &#13;&#10;&#9;&#9;&#9;paramChangeMsg(46,0,value)&#13;&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#13;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="3d34249cc38b57d4b3617a7bb5813d20" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="cords" uuid="faa4aa0efc9ecbc0ba21d8ecec0e34b0">
          <luaMethod luaMethodName="cord00source" luaMethodCode="   --&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord00source = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;if value == 2 then --Key+=5&#13;&#10;value = 5&#13;&#10;&#13;&#10;elseif value == 3 then --Key~=9&#13;&#10;value = 9&#13;&#10;&#13;&#10;elseif value == 4 then --Vel+=10&#13;&#10;value = 10&#13;&#10;&#13;&#10;elseif value == 5 then --Vel~=11&#13;&#10;value = 11&#13;&#10;&#13;&#10;elseif value == 6 then --Vel&lt;=12&#13;&#10;value = 12&#13;&#10;&#13;&#10;elseif value == 7 then --RlsVel=13&#13;&#10;value = 13&#13;&#10;&#13;&#10;elseif value == 8 then --Gate=14&#13;&#10;value = 14&#13;&#10;&#13;&#10;elseif value == 9 then --PitchWhl=15&#13;&#10;value = 15&#13;&#10;&#13;&#10;elseif value == 10 then --ModWhl=17&#13;&#10;value = 17&#13;&#10;&#13;&#10;elseif value == 11 then --Press=18&#13;&#10;value = 18&#13;&#10;&#13;&#10;elseif value == 12 then --Pedal=19&#13;&#10;value = 19&#13;&#10;&#13;&#10;elseif value == 13 then&#13;&#10;value = 20&#13;&#10;&#13;&#10;elseif value == 14 then --MidiB=21&#13;&#10;value = 21&#13;&#10;&#13;&#10;elseif value == 15 then --FtSw1=22&#13;&#10;value = 22&#13;&#10; &#13;&#10;elseif value == 16 then--FtSw2=23&#13;&#10;value = 23&#13;&#10;&#13;&#10;elseif value == 17 then --Ft1FF=24&#13;&#10;value = 24&#13;&#10;&#13;&#10;elseif value == 18 then --Ft2FF=25&#13;&#10;value = 25&#13;&#10;&#13;&#10;elseif value == 19 then --MidiVl=26&#13;&#10;value = 26&#13;&#10;&#13;&#10;elseif value == 20 then --MidiPn=27&#13;&#10;value = 27&#13;&#10;&#13;&#10;elseif value == 21 then --MidiC=28&#13;&#10;value = 28&#13;&#10;&#13;&#10;elseif value == 22 then --MidiD=33&#13;&#10;value = 33&#13;&#10;&#13;&#10;elseif value == 23 then --MidiE=34&#13;&#10;value = 34&#13;&#10;&#13;&#10;elseif value == 24 then --MidiF=35&#13;&#10;value = 35&#13;&#10;&#13;&#10;elseif value == 25 then --MidiG=36&#13;&#10;value = 36&#13;&#10;&#13;&#10;elseif value == 26 then --MidiH=37&#13;&#10;value = 37&#13;&#10;&#13;&#10;elseif value == 27 then --Thumb=38&#13;&#10;value = 38&#13;&#10;&#13;&#10;elseif value == 28 then --ThmFF=39&#13;&#10;value = 39&#13;&#10;&#13;&#10;elseif value == 29 then --KeyGld=40&#13;&#10;value = 40&#13;&#10;&#13;&#10;elseif value == 30 then --VEnv+=60&#13;&#10;value = 60&#13;&#10;&#13;&#10;elseif value == 31 then --VEnv~=73&#13;&#10;value = 73&#13;&#10;&#13;&#10;elseif value == 32 then --VEnv&lt;=74&#13;&#10;value = 74&#13;&#10;&#13;&#10;elseif value == 33 then --FEnv+=80&#13;&#10;value = 80&#13;&#10;&#13;&#10;elseif value == 34 then--FEnv~=81&#13;&#10;value = 81&#13;&#10;&#13;&#10;elseif value == 35 then--FEnv&lt;=82&#13;&#10;value = 82&#13;&#10;&#13;&#10;elseif value == 36 then--AEnv+=83&#13;&#10;value = 83&#13;&#10;&#13;&#10;elseif value == 37 then---AEnv~=89&#13;&#10;value = 89&#13;&#10;&#13;&#10;elseif value == 38 then&#13;&#10;--AEnv&lt;=90&#13;&#10;value = 90&#13;&#10;&#13;&#10;elseif value == 39 then&#13;&#10;--Lfo1~=91&#13;&#10;value = 91&#13;&#10;&#13;&#10;elseif value == 40 then&#13;&#10;--Lfo1+=97&#13;&#10;value = 97&#13;&#10;&#13;&#10;&#13;&#10;elseif value == 41 then&#13;&#10;--White=98&#13;&#10;value = 98&#13;&#10;&#13;&#10;elseif value == 42 then&#13;&#10;--Pink=99&#13;&#10;value = 99&#13;&#10;&#13;&#10;elseif value == 43 then&#13;&#10;--kRand1=100&#13;&#10;value = 100&#13;&#10;&#13;&#10;elseif value == 44 then&#13;&#10;--kRand2=101&#13;&#10;value = 101&#13;&#10;&#13;&#10;elseif value == 45 then&#13;&#10;--Lfo2~=102&#13;&#10;value = 102&#13;&#10;&#13;&#10;elseif value == 46 then&#13;&#10;--Lfo2+=105&#13;&#10;value = 105&#13;&#10;&#13;&#10;elseif value == 47 then&#13;&#10;--Lag0in=106&#13;&#10;value = 106&#13;&#10;&#13;&#10;elseif value == 48 then&#13;&#10;--Lag0=107&#13;&#10;value = 107&#13;&#10;&#13;&#10;elseif value == 49 then&#13;&#10;--Lag1in=108&#13;&#10;value = 108&#13;&#10;&#13;&#10;elseif value == 50 then&#13;&#10;--Lag1=109&#13;&#10;value = 109&#13;&#10;&#13;&#10;elseif value == 51 then&#13;&#10;--CkDwhl=110&#13;&#10;value = 110&#13;&#10;&#13;&#10;elseif value == 52 then&#13;&#10;--CkWhl=145&#10;value = 145&#13;&#10;&#13;&#10;elseif value == 53 then&#13;&#10;--CkHalf=146&#10;value = 146&#13;&#10;&#13;&#10;elseif value == 54 then&#13;&#10;--CkQtr=147&#10;value = 147&#13;&#10;&#13;&#10;elseif value == 55 then&#13;&#10;--Ck8th=148&#10;value = 148&#13;&#10;&#13;&#10;elseif value == 56 then&#13;&#10;--Ck16th=149&#10;value = 149&#13;&#10;&#13;&#10;elseif value == 57 then&#13;&#10;--DC=150&#10;value = 150&#13;&#10;&#13;&#10;elseif value == 58 then&#13;&#10;--Sum=161&#10;value = 161&#13;&#10;&#13;&#10;elseif value == 59 then&#13;&#10;--Switch=162&#10;value = 162&#13;&#10;&#13;&#10;elseif value == 60 then&#13;&#10;--Abs=163&#10;value = 163&#13;&#10;&#13;&#10;elseif value == 61 then&#13;&#10;--Diode=164&#10;value = 164&#10;&#13;&#10;elseif value == 62 then--FlipFlop=165&#10;value = 165&#13;&#10;&#10;elseif value == 63 then --Quantize=166&#13;&#10;value = 166&#13;&#10;&#10;elseif value == 64 then--Gainx4=167&#10;value = 167&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;paramChangeMsg(1,1,value)&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="09b6845840006e0383ffb6564406dacc" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord00dest" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord00dest = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;if value == 0 then&#13;&#10;--off=0&#13;&#10;bi = 0&#13;&#10;&#13;&#10;elseif value == 1 then&#13;&#10;--Keysust=1&#13;&#10;bi = 1&#13;&#10;&#13;&#10;elseif value == 2 then&#13;&#10;--FinePitch=10&#13;&#10;bi = 10&#10;&#13;&#10;elseif value == 3 then&#13;&#10;--Pitch=48&#13;&#10;bi = 48&#10;&#13;&#10;elseif value == 4 then&#13;&#10;--Glide=49&#13;&#10;bi = 49&#13;&#10;&#13;&#10;elseif value == 5 then&#13;&#10;--ChrsAmt=50&#13;&#10;bi = 50&#13;&#10;&#10;elseif value == 6 then&#13;&#10;--ChrsITD=51&#10;bi = 51&#13;&#10;&#10;elseif value == 7 then&#13;&#10;--SStart=52&#13;&#10;bi = 52&#13;&#10;&#10;elseif value == 8 then&#13;&#10;--SLoop=53&#13;&#10;bi = 53&#13;&#10;&#10;elseif value == 9 then&#13;&#10;--SRetrig=54&#13;&#10;bi = 54&#13;&#10;&#10;elseif value == 10 then&#13;&#10;--FilFreq=56&#13;&#10;bi = 56&#13;&#10;&#10;elseif value == 11 then&#13;&#10;--FilRes=57&#13;&#10;bi = 57&#13;&#10;&#10;elseif value == 12 then&#13;&#10;--AmpVol=58&#13;&#10;bi = 58&#13;&#10;&#10;elseif value == 13 then&#13;&#10;--AmpPan=65&#13;&#10;bi = 65&#13;&#10;&#10;elseif value == 14 then&#13;&#10;--AmpXfd=66&#13;&#10;bi = 66&#13;&#10;&#10;elseif value == 15 then&#13;&#10;--VenvRts=67&#13;&#10;bi = 67&#13;&#10;&#10;elseif value == 16 then&#13;&#10;--VenvAtk=73&#13;&#10;bi = 73&#13;&#10;&#10;elseif value == 17 then&#13;&#10;--VenvDcy=74&#13;&#10;bi = 74&#13;&#10;&#10;elseif value == 18 then&#13;&#10;--VenvRls=75&#13;&#10;bi = 75&#13;&#10;&#10;elseif value == 19 then&#13;&#10;--FenvRts=76&#13;&#10;bi = 76&#13;&#10;&#10;elseif value == 20 then&#13;&#10;--FenvAtk=81&#13;&#10;bi = 81&#13;&#10;&#10;elseif value == 21 then&#13;&#10;--FenvDcy=82&#13;&#10;bi = 82&#13;&#10;&#10;elseif value == 22 then&#13;&#10;--FenvRls=83&#13;&#10;bi = 83&#13;&#10;&#10;elseif value == 23 then&#13;&#10;--FenvTrg=84&#13;&#10;bi = 84&#13;&#10;&#10;elseif value == 24 then&#13;&#10;--AEnvRts=88&#13;&#10;bi = 88&#13;&#10;&#10;elseif value == 25 then&#13;&#10;--AEnvAtk=89&#13;&#10;bi = 89&#13;&#10;&#10;elseif value == 26 then&#13;&#10;--AEnvDcy=90&#13;&#10;bi = 90&#13;&#10;&#10;elseif value == 27 then&#13;&#10;--AEnvRls=91&#13;&#10;bi = 91&#13;&#10;&#10;elseif value == 28 then&#13;&#10;--AEnvTrg=92&#13;&#10;bi = 92&#13;&#10;&#10;elseif value == 29 then&#13;&#10;--Lfo1Rate=96&#13;&#10;bi = 96&#13;&#10;&#10;elseif value == 30 then&#13;&#10;--Lfo1Trg=97&#13;&#10;bi = 97&#13;&#10;&#10;elseif value == 31 then&#13;&#10;--Lfo2rate=98&#13;&#10;bi = 98&#13;&#10;&#10;elseif value == 32 then&#13;&#10;--Lfo2Trg=105&#13;&#10;bi = 105&#13;&#10;&#10;elseif value == 33 then&#13;&#10;--Lag0in=106&#13;&#10;bi = 106&#13;&#10;&#10;elseif value == 34 then&#13;&#10;--Lag1in=107&#13;&#10;bi = 107&#13;&#10;&#10;elseif value == 35 then&#13;&#10;--Sum=111&#13;&#10;bi = 111&#13;&#10;&#10;elseif value == 36 then&#13;&#10;--Switch=162&#13;&#10;bi = 162&#13;&#10;&#13;&#10;elseif value == 37 then&#13;&#10;--Abs=163&#13;&#10;bi = 163&#13;&#10;&#10;elseif value == 38 then&#13;&#10;--Diode=164&#13;&#10;bi = 164&#13;&#10;&#10;elseif value == 39 then&#13;&#10;--FlipFlop=165&#13;&#10;bi = 165&#13;&#10;&#10;elseif value == 40 then&#13;&#10;--Quantize=166&#13;&#10;bi = 166&#13;&#10;&#10;elseif value == 41 then&#13;&#10;--Gainx4=167&#13;&#10;bi = 167&#13;&#10;&#10;elseif value == 42 then&#13;&#10;--C00Amt=168&#13;&#10;bi = 168&#13;&#10;&#10;elseif value == 43 then&#13;&#10;--C01Amt=169&#13;&#10;bi = 169&#13;&#10;&#10;elseif value == 44 then&#13;&#10;--C02Amt=170&#13;&#10;bi = 170&#13;&#10;&#10;elseif value == 45 then&#13;&#10;--C03Amt=171&#13;&#10;bi = 171&#13;&#10;&#10;elseif value == 46 then&#13;&#10;--C04Amt=172&#13;&#10;bi = 172&#13;&#10;&#10;elseif value == 47 then&#13;&#10;--C05Amt=173&#13;&#10;bi = 173&#13;&#10;&#10;elseif value == 48 then&#13;&#10;--C06Amt=174&#13;&#10;bi = 174&#13;&#10;&#10;elseif value == 49 then&#13;&#10;--C07Amt=175&#13;&#10;bi = 175&#13;&#10;&#10;elseif value == 50 then&#13;&#10;--C08Amt=176&#13;&#10;bi = 176&#13;&#10;&#10;elseif value == 51 then&#13;&#10;--C09Amt=177&#13;&#10;bi = 177&#13;&#10;&#10;elseif value == 52 then&#13;&#10;--C10Amt=178&#13;&#10;bi = 178&#13;&#10;&#10;elseif value == 53 then&#13;&#10;--C11Amt=179&#13;&#10;bi = 179&#13;&#10;&#10;elseif value == 54 then&#13;&#10;--C12Amt=180&#13;&#10;bi = 180&#13;&#10;&#10;elseif value == 55 then&#13;&#10;--C13Amt=181&#13;&#10;bi = 151&#13;&#10;&#10;elseif value == 56 then&#13;&#10;--C14Amt=182&#13;&#10;bi = 182&#13;&#10;&#10;elseif value == 57 then&#13;&#10;--C15Amt=183&#13;&#10;bi = 183&#13;&#10;&#10;elseif value == 58 then&#13;&#10;--C16Amt=184&#13;&#10;bi = 184&#13;&#10;&#10;elseif value == 59 then&#13;&#10;--C17Amt=185&#13;&#10;bi = 185&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;paramChangeMsg(2,1,bi)&#13;&#10;&#13;&#10;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="665ffe0e5ccef5c72ee4655e740379e4" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord00amt" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord00amt = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;if value &lt; 0 then&#13;&#10;local amount = (128*128)+value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(3,1,LS,MS)&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;if value &gt;= 0 then &#13;&#10;local amount = value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(3,1,LS,MS)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;end&#13;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="ddbb391d8de2d3a55329d4c072e36e2f" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord01source" luaMethodCode="function cord01source(mod, value)&#10;if loaded == true then&#13;&#10;&#13;&#10;--console(string.format(&quot;cord 01 source value is %.d&quot;, value))&#13;&#10;&#13;&#10;&#13;&#10;if value == 2 then --Key+=5&#13;&#10;value = 5&#13;&#10;&#13;&#10;elseif value == 3 then --Key~=9&#13;&#10;value = 9&#13;&#10;&#13;&#10;elseif value == 4 then --Vel+=10&#13;&#10;value = 10&#13;&#10;&#13;&#10;elseif value == 5 then --Vel~=11&#13;&#10;value = 11&#13;&#10;&#13;&#10;elseif value == 6 then --Vel&lt;=12&#13;&#10;value = 12&#13;&#10;&#13;&#10;elseif value == 7 then --RlsVel=13&#13;&#10;value = 13&#13;&#10;&#13;&#10;elseif value == 8 then --Gate=14&#13;&#10;value = 14&#13;&#10;&#13;&#10;elseif value == 9 then --PitchWhl=15&#13;&#10;value = 15&#13;&#10;&#13;&#10;elseif value == 10 then --ModWhl=17&#13;&#10;value = 17&#13;&#10;&#13;&#10;elseif value == 11 then --Press=18&#13;&#10;value = 18&#13;&#10;&#13;&#10;elseif value == 12 then --Pedal=19&#13;&#10;value = 19&#13;&#10;&#13;&#10;elseif value == 13 then&#13;&#10;value = 20&#13;&#10;&#13;&#10;elseif value == 14 then --MidiB=21&#13;&#10;value = 21&#13;&#10;&#13;&#10;elseif value == 15 then --FtSw1=22&#13;&#10;value = 22&#13;&#10; &#13;&#10;elseif value == 16 then--FtSw2=23&#13;&#10;value = 23&#13;&#10;&#13;&#10;elseif value == 17 then --Ft1FF=24&#13;&#10;value = 24&#13;&#10;&#13;&#10;elseif value == 18 then --Ft2FF=25&#13;&#10;value = 25&#13;&#10;&#13;&#10;elseif value == 19 then --MidiVl=26&#13;&#10;value = 26&#13;&#10;&#13;&#10;elseif value == 20 then --MidiPn=27&#13;&#10;value = 27&#13;&#10;&#13;&#10;elseif value == 21 then --MidiC=28&#13;&#10;value = 28&#13;&#10;&#13;&#10;elseif value == 22 then --MidiD=33&#13;&#10;value = 33&#13;&#10;&#13;&#10;elseif value == 23 then --MidiE=34&#13;&#10;value = 34&#13;&#10;&#13;&#10;elseif value == 24 then --MidiF=35&#13;&#10;value = 35&#13;&#10;&#13;&#10;elseif value == 25 then --MidiG=36&#13;&#10;value = 36&#13;&#10;&#13;&#10;elseif value == 26 then --MidiH=37&#13;&#10;value = 37&#13;&#10;&#13;&#10;elseif value == 27 then --Thumb=38&#13;&#10;value = 38&#13;&#10;&#13;&#10;elseif value == 28 then --ThmFF=39&#13;&#10;value = 39&#13;&#10;&#13;&#10;elseif value == 29 then --KeyGld=40&#13;&#10;value = 40&#13;&#10;&#13;&#10;elseif value == 30 then --VEnv+=60&#13;&#10;value = 60&#13;&#10;&#13;&#10;elseif value == 31 then --VEnv~=73&#13;&#10;value = 73&#13;&#10;&#13;&#10;elseif value == 32 then --VEnv&lt;=74&#13;&#10;value = 74&#13;&#10;&#13;&#10;elseif value == 33 then --FEnv+=80&#13;&#10;value = 80&#13;&#10;&#13;&#10;elseif value == 34 then--FEnv~=81&#13;&#10;value = 81&#13;&#10;&#13;&#10;elseif value == 35 then--FEnv&lt;=82&#13;&#10;value = 82&#13;&#10;&#13;&#10;elseif value == 36 then--AEnv+=83&#13;&#10;value = 83&#13;&#10;&#13;&#10;elseif value == 37 then---AEnv~=89&#13;&#10;value = 89&#13;&#10;&#13;&#10;elseif value == 38 then&#13;&#10;--AEnv&lt;=90&#13;&#10;value = 90&#13;&#10;&#13;&#10;elseif value == 39 then&#13;&#10;--Lfo1~=91&#13;&#10;value = 91&#13;&#10;&#13;&#10;elseif value == 40 then&#13;&#10;--Lfo1+=97&#13;&#10;value = 97&#13;&#10;&#13;&#10;&#13;&#10;elseif value == 41 then&#13;&#10;--White=98&#13;&#10;value = 98&#13;&#10;&#13;&#10;elseif value == 42 then&#13;&#10;--Pink=99&#13;&#10;value = 99&#13;&#10;&#13;&#10;elseif value == 43 then&#13;&#10;--kRand1=100&#13;&#10;value = 100&#13;&#10;&#13;&#10;elseif value == 44 then&#13;&#10;--kRand2=101&#13;&#10;value = 101&#13;&#10;&#13;&#10;elseif value == 45 then&#13;&#10;--Lfo2~=102&#13;&#10;value = 102&#13;&#10;&#13;&#10;elseif value == 46 then&#13;&#10;--Lfo2+=105&#13;&#10;value = 105&#13;&#10;&#13;&#10;elseif value == 47 then&#13;&#10;--Lag0in=106&#13;&#10;value = 106&#13;&#10;&#13;&#10;elseif value == 48 then&#13;&#10;--Lag0=107&#13;&#10;value = 107&#13;&#10;&#13;&#10;elseif value == 49 then&#13;&#10;--Lag1in=108&#13;&#10;value = 108&#13;&#10;&#13;&#10;elseif value == 50 then&#13;&#10;--Lag1=109&#13;&#10;value = 109&#13;&#10;&#13;&#10;elseif value == 51 then&#13;&#10;--CkDwhl=110&#13;&#10;value = 110&#13;&#10;&#13;&#10;elseif value == 52 then&#13;&#10;--CkWhl=145&#10;value = 145&#13;&#10;&#13;&#10;elseif value == 53 then&#13;&#10;--CkHalf=146&#10;value = 146&#13;&#10;&#13;&#10;elseif value == 54 then&#13;&#10;--CkQtr=147&#10;value = 147&#13;&#10;&#13;&#10;elseif value == 55 then&#13;&#10;--Ck8th=148&#10;value = 148&#13;&#10;&#13;&#10;elseif value == 56 then&#13;&#10;--Ck16th=149&#10;value = 149&#13;&#10;&#13;&#10;elseif value == 57 then&#13;&#10;--DC=150&#10;value = 150&#13;&#10;&#13;&#10;elseif value == 58 then&#13;&#10;--Sum=161&#10;value = 161&#13;&#10;&#13;&#10;elseif value == 59 then&#13;&#10;--Switch=162&#10;value = 162&#13;&#10;&#13;&#10;elseif value == 60 then&#13;&#10;--Abs=163&#10;value = 163&#13;&#10;&#13;&#10;elseif value == 61 then&#13;&#10;--Diode=164&#10;value = 164&#10;&#13;&#10;elseif value == 62 then--FlipFlop=165&#10;value = 165&#13;&#10;&#10;elseif value == 63 then --Quantize=166&#13;&#10;value = 166&#13;&#10;&#10;elseif value == 64 then--Gainx4=167&#10;value = 167&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;paramChangeMsg(4,1,value)&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="6e1a3784a40557e74a33ad9772515b36"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cord01dest" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord01dest = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;if value == 0 then&#13;&#10;--off=0&#13;&#10;bi = 0&#13;&#10;&#13;&#10;elseif value == 1 then&#13;&#10;--Keysust=1&#13;&#10;bi = 1&#13;&#10;&#13;&#10;elseif value == 2 then&#13;&#10;--FinePitch=10&#13;&#10;bi = 10&#10;&#13;&#10;elseif value == 3 then&#13;&#10;--Pitch=48&#13;&#10;bi = 48&#10;&#13;&#10;elseif value == 4 then&#13;&#10;--Glide=49&#13;&#10;bi = 49&#13;&#10;&#13;&#10;elseif value == 5 then&#13;&#10;--ChrsAmt=50&#13;&#10;bi = 50&#13;&#10;&#10;elseif value == 6 then&#13;&#10;--ChrsITD=51&#10;bi = 51&#13;&#10;&#10;elseif value == 7 then&#13;&#10;--SStart=52&#13;&#10;bi = 52&#13;&#10;&#10;elseif value == 8 then&#13;&#10;--SLoop=53&#13;&#10;bi = 53&#13;&#10;&#10;elseif value == 9 then&#13;&#10;--SRetrig=54&#13;&#10;bi = 54&#13;&#10;&#10;elseif value == 10 then&#13;&#10;--FilFreq=56&#13;&#10;bi = 56&#13;&#10;&#10;elseif value == 11 then&#13;&#10;--FilRes=57&#13;&#10;bi = 57&#13;&#10;&#10;elseif value == 12 then&#13;&#10;--AmpVol=58&#13;&#10;bi = 58&#13;&#10;&#10;elseif value == 13 then&#13;&#10;--AmpPan=65&#13;&#10;bi = 65&#13;&#10;&#10;elseif value == 14 then&#13;&#10;--AmpXfd=66&#13;&#10;bi = 66&#13;&#10;&#10;elseif value == 15 then&#13;&#10;--VenvRts=67&#13;&#10;bi = 67&#13;&#10;&#10;elseif value == 16 then&#13;&#10;--VenvAtk=73&#13;&#10;bi = 73&#13;&#10;&#10;elseif value == 17 then&#13;&#10;--VenvDcy=74&#13;&#10;bi = 74&#13;&#10;&#10;elseif value == 18 then&#13;&#10;--VenvRls=75&#13;&#10;bi = 75&#13;&#10;&#10;elseif value == 19 then&#13;&#10;--FenvRts=76&#13;&#10;bi = 76&#13;&#10;&#10;elseif value == 20 then&#13;&#10;--FenvAtk=81&#13;&#10;bi = 81&#13;&#10;&#10;elseif value == 21 then&#13;&#10;--FenvDcy=82&#13;&#10;bi = 82&#13;&#10;&#10;elseif value == 22 then&#13;&#10;--FenvRls=83&#13;&#10;bi = 83&#13;&#10;&#10;elseif value == 23 then&#13;&#10;--FenvTrg=84&#13;&#10;bi = 84&#13;&#10;&#10;elseif value == 24 then&#13;&#10;--AEnvRts=88&#13;&#10;bi = 88&#13;&#10;&#10;elseif value == 25 then&#13;&#10;--AEnvAtk=89&#13;&#10;bi = 89&#13;&#10;&#10;elseif value == 26 then&#13;&#10;--AEnvDcy=90&#13;&#10;bi = 90&#13;&#10;&#10;elseif value == 27 then&#13;&#10;--AEnvRls=91&#13;&#10;bi = 91&#13;&#10;&#10;elseif value == 28 then&#13;&#10;--AEnvTrg=92&#13;&#10;bi = 92&#13;&#10;&#10;elseif value == 29 then&#13;&#10;--Lfo1Rate=96&#13;&#10;bi = 96&#13;&#10;&#10;elseif value == 30 then&#13;&#10;--Lfo1Trg=97&#13;&#10;bi = 97&#13;&#10;&#10;elseif value == 31 then&#13;&#10;--Lfo2rate=98&#13;&#10;bi = 98&#13;&#10;&#10;elseif value == 32 then&#13;&#10;--Lfo2Trg=105&#13;&#10;bi = 105&#13;&#10;&#10;elseif value == 33 then&#13;&#10;--Lag0in=106&#13;&#10;bi = 106&#13;&#10;&#10;elseif value == 34 then&#13;&#10;--Lag1in=107&#13;&#10;bi = 107&#13;&#10;&#10;elseif value == 35 then&#13;&#10;--Sum=111&#13;&#10;bi = 111&#13;&#10;&#10;elseif value == 36 then&#13;&#10;--Switch=162&#13;&#10;bi = 162&#13;&#10;&#13;&#10;elseif value == 37 then&#13;&#10;--Abs=163&#13;&#10;bi = 163&#13;&#10;&#10;elseif value == 38 then&#13;&#10;--Diode=164&#13;&#10;bi = 164&#13;&#10;&#10;elseif value == 39 then&#13;&#10;--FlipFlop=165&#13;&#10;bi = 165&#13;&#10;&#10;elseif value == 40 then&#13;&#10;--Quantize=166&#13;&#10;bi = 166&#13;&#10;&#10;elseif value == 41 then&#13;&#10;--Gainx4=167&#13;&#10;bi = 167&#13;&#10;&#10;elseif value == 42 then&#13;&#10;--C00Amt=168&#13;&#10;bi = 168&#13;&#10;&#10;elseif value == 43 then&#13;&#10;--C01Amt=169&#13;&#10;bi = 169&#13;&#10;&#10;elseif value == 44 then&#13;&#10;--C02Amt=170&#13;&#10;bi = 170&#13;&#10;&#10;elseif value == 45 then&#13;&#10;--C03Amt=171&#13;&#10;bi = 171&#13;&#10;&#10;elseif value == 46 then&#13;&#10;--C04Amt=172&#13;&#10;bi = 172&#13;&#10;&#10;elseif value == 47 then&#13;&#10;--C05Amt=173&#13;&#10;bi = 173&#13;&#10;&#10;elseif value == 48 then&#13;&#10;--C06Amt=174&#13;&#10;bi = 174&#13;&#10;&#10;elseif value == 49 then&#13;&#10;--C07Amt=175&#13;&#10;bi = 175&#13;&#10;&#10;elseif value == 50 then&#13;&#10;--C08Amt=176&#13;&#10;bi = 176&#13;&#10;&#10;elseif value == 51 then&#13;&#10;--C09Amt=177&#13;&#10;bi = 177&#13;&#10;&#10;elseif value == 52 then&#13;&#10;--C10Amt=178&#13;&#10;bi = 178&#13;&#10;&#10;elseif value == 53 then&#13;&#10;--C11Amt=179&#13;&#10;bi = 179&#13;&#10;&#10;elseif value == 54 then&#13;&#10;--C12Amt=180&#13;&#10;bi = 180&#13;&#10;&#10;elseif value == 55 then&#13;&#10;--C13Amt=181&#13;&#10;bi = 151&#13;&#10;&#10;elseif value == 56 then&#13;&#10;--C14Amt=182&#13;&#10;bi = 182&#13;&#10;&#10;elseif value == 57 then&#13;&#10;--C15Amt=183&#13;&#10;bi = 183&#13;&#10;&#10;elseif value == 58 then&#13;&#10;--C16Amt=184&#13;&#10;bi = 184&#13;&#10;&#10;elseif value == 59 then&#13;&#10;--C17Amt=185&#13;&#10;bi = 185&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;paramChangeMsg(5,1,bi)&#13;&#10;&#13;&#10;end&#13;&#10;end&#13;&#10;&#13;"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="40a44b12433eb340b7c3a4891bf06846"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cord01amount" luaMethodCode="function cord01amount(mod, value)&#10;if loaded == true then&#13;&#10;&#13;&#10;if value &lt; 0 then&#13;&#10;local amount = (128*128)+value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(6,1,LS,MS)&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;if value &gt;= 0 then &#13;&#10;local amount = value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(6,1,LS,MS)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;end&#13;end&#10;"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="9d2f03cfaa2cd275a56118bc948a04d4"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cord02source" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord02source = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;--console(string.format(&quot;cord 01 source value is %.d&quot;, value))&#13;&#10;&#13;&#10;&#13;&#10;if value == 2 then --Key+=5&#13;&#10;value = 5&#13;&#10;&#13;&#10;elseif value == 3 then --Key~=9&#13;&#10;value = 9&#13;&#10;&#13;&#10;elseif value == 4 then --Vel+=10&#13;&#10;value = 10&#13;&#10;&#13;&#10;elseif value == 5 then --Vel~=11&#13;&#10;value = 11&#13;&#10;&#13;&#10;elseif value == 6 then --Vel&lt;=12&#13;&#10;value = 12&#13;&#10;&#13;&#10;elseif value == 7 then --RlsVel=13&#13;&#10;value = 13&#13;&#10;&#13;&#10;elseif value == 8 then --Gate=14&#13;&#10;value = 14&#13;&#10;&#13;&#10;elseif value == 9 then --PitchWhl=15&#13;&#10;value = 15&#13;&#10;&#13;&#10;elseif value == 10 then --ModWhl=17&#13;&#10;value = 17&#13;&#10;&#13;&#10;elseif value == 11 then --Press=18&#13;&#10;value = 18&#13;&#10;&#13;&#10;elseif value == 12 then --Pedal=19&#13;&#10;value = 19&#13;&#10;&#13;&#10;elseif value == 13 then&#13;&#10;value = 20&#13;&#10;&#13;&#10;elseif value == 14 then --MidiB=21&#13;&#10;value = 21&#13;&#10;&#13;&#10;elseif value == 15 then --FtSw1=22&#13;&#10;value = 22&#13;&#10; &#13;&#10;elseif value == 16 then--FtSw2=23&#13;&#10;value = 23&#13;&#10;&#13;&#10;elseif value == 17 then --Ft1FF=24&#13;&#10;value = 24&#13;&#10;&#13;&#10;elseif value == 18 then --Ft2FF=25&#13;&#10;value = 25&#13;&#10;&#13;&#10;elseif value == 19 then --MidiVl=26&#13;&#10;value = 26&#13;&#10;&#13;&#10;elseif value == 20 then --MidiPn=27&#13;&#10;value = 27&#13;&#10;&#13;&#10;elseif value == 21 then --MidiC=28&#13;&#10;value = 28&#13;&#10;&#13;&#10;elseif value == 22 then --MidiD=33&#13;&#10;value = 33&#13;&#10;&#13;&#10;elseif value == 23 then --MidiE=34&#13;&#10;value = 34&#13;&#10;&#13;&#10;elseif value == 24 then --MidiF=35&#13;&#10;value = 35&#13;&#10;&#13;&#10;elseif value == 25 then --MidiG=36&#13;&#10;value = 36&#13;&#10;&#13;&#10;elseif value == 26 then --MidiH=37&#13;&#10;value = 37&#13;&#10;&#13;&#10;elseif value == 27 then --Thumb=38&#13;&#10;value = 38&#13;&#10;&#13;&#10;elseif value == 28 then --ThmFF=39&#13;&#10;value = 39&#13;&#10;&#13;&#10;elseif value == 29 then --KeyGld=40&#13;&#10;value = 40&#13;&#10;&#13;&#10;elseif value == 30 then --VEnv+=60&#13;&#10;value = 60&#13;&#10;&#13;&#10;elseif value == 31 then --VEnv~=73&#13;&#10;value = 73&#13;&#10;&#13;&#10;elseif value == 32 then --VEnv&lt;=74&#13;&#10;value = 74&#13;&#10;&#13;&#10;elseif value == 33 then --FEnv+=80&#13;&#10;value = 80&#13;&#10;&#13;&#10;elseif value == 34 then--FEnv~=81&#13;&#10;value = 81&#13;&#10;&#13;&#10;elseif value == 35 then--FEnv&lt;=82&#13;&#10;value = 82&#13;&#10;&#13;&#10;elseif value == 36 then--AEnv+=83&#13;&#10;value = 83&#13;&#10;&#13;&#10;elseif value == 37 then---AEnv~=89&#13;&#10;value = 89&#13;&#10;&#13;&#10;elseif value == 38 then&#13;&#10;--AEnv&lt;=90&#13;&#10;value = 90&#13;&#10;&#13;&#10;elseif value == 39 then&#13;&#10;--Lfo1~=91&#13;&#10;value = 91&#13;&#10;&#13;&#10;elseif value == 40 then&#13;&#10;--Lfo1+=97&#13;&#10;value = 97&#13;&#10;&#13;&#10;&#13;&#10;elseif value == 41 then&#13;&#10;--White=98&#13;&#10;value = 98&#13;&#10;&#13;&#10;elseif value == 42 then&#13;&#10;--Pink=99&#13;&#10;value = 99&#13;&#10;&#13;&#10;elseif value == 43 then&#13;&#10;--kRand1=100&#13;&#10;value = 100&#13;&#10;&#13;&#10;elseif value == 44 then&#13;&#10;--kRand2=101&#13;&#10;value = 101&#13;&#10;&#13;&#10;elseif value == 45 then&#13;&#10;--Lfo2~=102&#13;&#10;value = 102&#13;&#10;&#13;&#10;elseif value == 46 then&#13;&#10;--Lfo2+=105&#13;&#10;value = 105&#13;&#10;&#13;&#10;elseif value == 47 then&#13;&#10;--Lag0in=106&#13;&#10;value = 106&#13;&#10;&#13;&#10;elseif value == 48 then&#13;&#10;--Lag0=107&#13;&#10;value = 107&#13;&#10;&#13;&#10;elseif value == 49 then&#13;&#10;--Lag1in=108&#13;&#10;value = 108&#13;&#10;&#13;&#10;elseif value == 50 then&#13;&#10;--Lag1=109&#13;&#10;value = 109&#13;&#10;&#13;&#10;elseif value == 51 then&#13;&#10;--CkDwhl=110&#13;&#10;value = 110&#13;&#10;&#13;&#10;elseif value == 52 then&#13;&#10;--CkWhl=145&#10;value = 145&#13;&#10;&#13;&#10;elseif value == 53 then&#13;&#10;--CkHalf=146&#10;value = 146&#13;&#10;&#13;&#10;elseif value == 54 then&#13;&#10;--CkQtr=147&#10;value = 147&#13;&#10;&#13;&#10;elseif value == 55 then&#13;&#10;--Ck8th=148&#10;value = 148&#13;&#10;&#13;&#10;elseif value == 56 then&#13;&#10;--Ck16th=149&#10;value = 149&#13;&#10;&#13;&#10;elseif value == 57 then&#13;&#10;--DC=150&#10;value = 150&#13;&#10;&#13;&#10;elseif value == 58 then&#13;&#10;--Sum=161&#10;value = 161&#13;&#10;&#13;&#10;elseif value == 59 then&#13;&#10;--Switch=162&#10;value = 162&#13;&#10;&#13;&#10;elseif value == 60 then&#13;&#10;--Abs=163&#10;value = 163&#13;&#10;&#13;&#10;elseif value == 61 then&#13;&#10;--Diode=164&#10;value = 164&#10;&#13;&#10;elseif value == 62 then--FlipFlop=165&#10;value = 165&#13;&#10;&#10;elseif value == 63 then --Quantize=166&#13;&#10;value = 166&#13;&#10;&#10;elseif value == 64 then--Gainx4=167&#10;value = 167&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;paramChangeMsg(7,1,value)&#13;&#10;&#13;&#10;end&#13;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="71617a9cc69668ff19ee22a6577347dc" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord02dest" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord02dest = function(mod, value)&#13;&#10;if loaded == true then&#13;&#10;&#13;if value == 0 then&#13;&#10;--off=0&#13;&#10;bi = 0&#13;&#10;&#13;&#10;elseif value == 1 then&#13;&#10;--Keysust=1&#13;&#10;bi = 1&#13;&#10;&#13;&#10;elseif value == 2 then&#13;&#10;--FinePitch=10&#13;&#10;bi = 10&#10;&#13;&#10;elseif value == 3 then&#13;&#10;--Pitch=48&#13;&#10;bi = 48&#10;&#13;&#10;elseif value == 4 then&#13;&#10;--Glide=49&#13;&#10;bi = 49&#13;&#10;&#13;&#10;elseif value == 5 then&#13;&#10;--ChrsAmt=50&#13;&#10;bi = 50&#13;&#10;&#10;elseif value == 6 then&#13;&#10;--ChrsITD=51&#10;bi = 51&#13;&#10;&#10;elseif value == 7 then&#13;&#10;--SStart=52&#13;&#10;bi = 52&#13;&#10;&#10;elseif value == 8 then&#13;&#10;--SLoop=53&#13;&#10;bi = 53&#13;&#10;&#10;elseif value == 9 then&#13;&#10;--SRetrig=54&#13;&#10;bi = 54&#13;&#10;&#10;elseif value == 10 then&#13;&#10;--FilFreq=56&#13;&#10;bi = 56&#13;&#10;&#10;elseif value == 11 then&#13;&#10;--FilRes=57&#13;&#10;bi = 57&#13;&#10;&#10;elseif value == 12 then&#13;&#10;--AmpVol=58&#13;&#10;bi = 58&#13;&#10;&#10;elseif value == 13 then&#13;&#10;--AmpPan=65&#13;&#10;bi = 65&#13;&#10;&#10;elseif value == 14 then&#13;&#10;--AmpXfd=66&#13;&#10;bi = 66&#13;&#10;&#10;elseif value == 15 then&#13;&#10;--VenvRts=67&#13;&#10;bi = 67&#13;&#10;&#10;elseif value == 16 then&#13;&#10;--VenvAtk=73&#13;&#10;bi = 73&#13;&#10;&#10;elseif value == 17 then&#13;&#10;--VenvDcy=74&#13;&#10;bi = 74&#13;&#10;&#10;elseif value == 18 then&#13;&#10;--VenvRls=75&#13;&#10;bi = 75&#13;&#10;&#10;elseif value == 19 then&#13;&#10;--FenvRts=76&#13;&#10;bi = 76&#13;&#10;&#10;elseif value == 20 then&#13;&#10;--FenvAtk=81&#13;&#10;bi = 81&#13;&#10;&#10;elseif value == 21 then&#13;&#10;--FenvDcy=82&#13;&#10;bi = 82&#13;&#10;&#10;elseif value == 22 then&#13;&#10;--FenvRls=83&#13;&#10;bi = 83&#13;&#10;&#10;elseif value == 23 then&#13;&#10;--FenvTrg=84&#13;&#10;bi = 84&#13;&#10;&#10;elseif value == 24 then&#13;&#10;--AEnvRts=88&#13;&#10;bi = 88&#13;&#10;&#10;elseif value == 25 then&#13;&#10;--AEnvAtk=89&#13;&#10;bi = 89&#13;&#10;&#10;elseif value == 26 then&#13;&#10;--AEnvDcy=90&#13;&#10;bi = 90&#13;&#10;&#10;elseif value == 27 then&#13;&#10;--AEnvRls=91&#13;&#10;bi = 91&#13;&#10;&#10;elseif value == 28 then&#13;&#10;--AEnvTrg=92&#13;&#10;bi = 92&#13;&#10;&#10;elseif value == 29 then&#13;&#10;--Lfo1Rate=96&#13;&#10;bi = 96&#13;&#10;&#10;elseif value == 30 then&#13;&#10;--Lfo1Trg=97&#13;&#10;bi = 97&#13;&#10;&#10;elseif value == 31 then&#13;&#10;--Lfo2rate=98&#13;&#10;bi = 98&#13;&#10;&#10;elseif value == 32 then&#13;&#10;--Lfo2Trg=105&#13;&#10;bi = 105&#13;&#10;&#10;elseif value == 33 then&#13;&#10;--Lag0in=106&#13;&#10;bi = 106&#13;&#10;&#10;elseif value == 34 then&#13;&#10;--Lag1in=107&#13;&#10;bi = 107&#13;&#10;&#10;elseif value == 35 then&#13;&#10;--Sum=111&#13;&#10;bi = 111&#13;&#10;&#10;elseif value == 36 then&#13;&#10;--Switch=162&#13;&#10;bi = 162&#13;&#10;&#13;&#10;elseif value == 37 then&#13;&#10;--Abs=163&#13;&#10;bi = 163&#13;&#10;&#10;elseif value == 38 then&#13;&#10;--Diode=164&#13;&#10;bi = 164&#13;&#10;&#10;elseif value == 39 then&#13;&#10;--FlipFlop=165&#13;&#10;bi = 165&#13;&#10;&#10;elseif value == 40 then&#13;&#10;--Quantize=166&#13;&#10;bi = 166&#13;&#10;&#10;elseif value == 41 then&#13;&#10;--Gainx4=167&#13;&#10;bi = 167&#13;&#10;&#10;elseif value == 42 then&#13;&#10;--C00Amt=168&#13;&#10;bi = 168&#13;&#10;&#10;elseif value == 43 then&#13;&#10;--C01Amt=169&#13;&#10;bi = 169&#13;&#10;&#10;elseif value == 44 then&#13;&#10;--C02Amt=170&#13;&#10;bi = 170&#13;&#10;&#10;elseif value == 45 then&#13;&#10;--C03Amt=171&#13;&#10;bi = 171&#13;&#10;&#10;elseif value == 46 then&#13;&#10;--C04Amt=172&#13;&#10;bi = 172&#13;&#10;&#10;elseif value == 47 then&#13;&#10;--C05Amt=173&#13;&#10;bi = 173&#13;&#10;&#10;elseif value == 48 then&#13;&#10;--C06Amt=174&#13;&#10;bi = 174&#13;&#10;&#10;elseif value == 49 then&#13;&#10;--C07Amt=175&#13;&#10;bi = 175&#13;&#10;&#10;elseif value == 50 then&#13;&#10;--C08Amt=176&#13;&#10;bi = 176&#13;&#10;&#10;elseif value == 51 then&#13;&#10;--C09Amt=177&#13;&#10;bi = 177&#13;&#10;&#10;elseif value == 52 then&#13;&#10;--C10Amt=178&#13;&#10;bi = 178&#13;&#10;&#10;elseif value == 53 then&#13;&#10;--C11Amt=179&#13;&#10;bi = 179&#13;&#10;&#10;elseif value == 54 then&#13;&#10;--C12Amt=180&#13;&#10;bi = 180&#13;&#10;&#10;elseif value == 55 then&#13;&#10;--C13Amt=181&#13;&#10;bi = 151&#13;&#10;&#10;elseif value == 56 then&#13;&#10;--C14Amt=182&#13;&#10;bi = 182&#13;&#10;&#10;elseif value == 57 then&#13;&#10;--C15Amt=183&#13;&#10;bi = 183&#13;&#10;&#10;elseif value == 58 then&#13;&#10;--C16Amt=184&#13;&#10;bi = 184&#13;&#10;&#10;elseif value == 59 then&#13;&#10;--C17Amt=185&#13;&#10;bi = 185&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;paramChangeMsg(8,1,bi)&#13;&#10;&#13;&#10;end&#13;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="3c36c01bf04f78ef1dd6e6b87c502c64" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord02amount" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord02amount = function(mod, value)&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;if value &lt; 0 then&#13;&#10;local amount = (128*128)+value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(9,1,LS,MS)&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;if value &gt;= 0 then &#13;&#10;local amount = value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(9,1,LS,MS)&#13;&#10;end&#13;&#13;&#10;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="5da3f9f2352ede497522904c3ca346f5" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord03source" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord03source = function(mod, value)&#13;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;if value == 2 then --Key+=5&#13;&#10;value = 5&#13;&#10;&#13;&#10;elseif value == 3 then --Key~=9&#13;&#10;value = 9&#13;&#10;&#13;&#10;elseif value == 4 then --Vel+=10&#13;&#10;value = 10&#13;&#10;&#13;&#10;elseif value == 5 then --Vel~=11&#13;&#10;value = 11&#13;&#10;&#13;&#10;elseif value == 6 then --Vel&lt;=12&#13;&#10;value = 12&#13;&#10;&#13;&#10;elseif value == 7 then --RlsVel=13&#13;&#10;value = 13&#13;&#10;&#13;&#10;elseif value == 8 then --Gate=14&#13;&#10;value = 14&#13;&#10;&#13;&#10;elseif value == 9 then --PitchWhl=15&#13;&#10;value = 15&#13;&#10;&#13;&#10;elseif value == 10 then --ModWhl=17&#13;&#10;value = 17&#13;&#10;&#13;&#10;elseif value == 11 then --Press=18&#13;&#10;value = 18&#13;&#10;&#13;&#10;elseif value == 12 then --Pedal=19&#13;&#10;value = 19&#13;&#10;&#13;&#10;elseif value == 13 then&#13;&#10;value = 20&#13;&#10;&#13;&#10;elseif value == 14 then --MidiB=21&#13;&#10;value = 21&#13;&#10;&#13;&#10;elseif value == 15 then --FtSw1=22&#13;&#10;value = 22&#13;&#10; &#13;&#10;elseif value == 16 then--FtSw2=23&#13;&#10;value = 23&#13;&#10;&#13;&#10;elseif value == 17 then --Ft1FF=24&#13;&#10;value = 24&#13;&#10;&#13;&#10;elseif value == 18 then --Ft2FF=25&#13;&#10;value = 25&#13;&#10;&#13;&#10;elseif value == 19 then --MidiVl=26&#13;&#10;value = 26&#13;&#10;&#13;&#10;elseif value == 20 then --MidiPn=27&#13;&#10;value = 27&#13;&#10;&#13;&#10;elseif value == 21 then --MidiC=28&#13;&#10;value = 28&#13;&#10;&#13;&#10;elseif value == 22 then --MidiD=33&#13;&#10;value = 33&#13;&#10;&#13;&#10;elseif value == 23 then --MidiE=34&#13;&#10;value = 34&#13;&#10;&#13;&#10;elseif value == 24 then --MidiF=35&#13;&#10;value = 35&#13;&#10;&#13;&#10;elseif value == 25 then --MidiG=36&#13;&#10;value = 36&#13;&#10;&#13;&#10;elseif value == 26 then --MidiH=37&#13;&#10;value = 37&#13;&#10;&#13;&#10;elseif value == 27 then --Thumb=38&#13;&#10;value = 38&#13;&#10;&#13;&#10;elseif value == 28 then --ThmFF=39&#13;&#10;value = 39&#13;&#10;&#13;&#10;elseif value == 29 then --KeyGld=40&#13;&#10;value = 40&#13;&#10;&#13;&#10;elseif value == 30 then --VEnv+=60&#13;&#10;value = 60&#13;&#10;&#13;&#10;elseif value == 31 then --VEnv~=73&#13;&#10;value = 73&#13;&#10;&#13;&#10;elseif value == 32 then --VEnv&lt;=74&#13;&#10;value = 74&#13;&#10;&#13;&#10;elseif value == 33 then --FEnv+=80&#13;&#10;value = 80&#13;&#10;&#13;&#10;elseif value == 34 then--FEnv~=81&#13;&#10;value = 81&#13;&#10;&#13;&#10;elseif value == 35 then--FEnv&lt;=82&#13;&#10;value = 82&#13;&#10;&#13;&#10;elseif value == 36 then--AEnv+=83&#13;&#10;value = 83&#13;&#10;&#13;&#10;elseif value == 37 then---AEnv~=89&#13;&#10;value = 89&#13;&#10;&#13;&#10;elseif value == 38 then&#13;&#10;--AEnv&lt;=90&#13;&#10;value = 90&#13;&#10;&#13;&#10;elseif value == 39 then&#13;&#10;--Lfo1~=91&#13;&#10;value = 91&#13;&#10;&#13;&#10;elseif value == 40 then&#13;&#10;--Lfo1+=97&#13;&#10;value = 97&#13;&#10;&#13;&#10;&#13;&#10;elseif value == 41 then&#13;&#10;--White=98&#13;&#10;value = 98&#13;&#10;&#13;&#10;elseif value == 42 then&#13;&#10;--Pink=99&#13;&#10;value = 99&#13;&#10;&#13;&#10;elseif value == 43 then&#13;&#10;--kRand1=100&#13;&#10;value = 100&#13;&#10;&#13;&#10;elseif value == 44 then&#13;&#10;--kRand2=101&#13;&#10;value = 101&#13;&#10;&#13;&#10;elseif value == 45 then&#13;&#10;--Lfo2~=102&#13;&#10;value = 102&#13;&#10;&#13;&#10;elseif value == 46 then&#13;&#10;--Lfo2+=105&#13;&#10;value = 105&#13;&#10;&#13;&#10;elseif value == 47 then&#13;&#10;--Lag0in=106&#13;&#10;value = 106&#13;&#10;&#13;&#10;elseif value == 48 then&#13;&#10;--Lag0=107&#13;&#10;value = 107&#13;&#10;&#13;&#10;elseif value == 49 then&#13;&#10;--Lag1in=108&#13;&#10;value = 108&#13;&#10;&#13;&#10;elseif value == 50 then&#13;&#10;--Lag1=109&#13;&#10;value = 109&#13;&#10;&#13;&#10;elseif value == 51 then&#13;&#10;--CkDwhl=110&#13;&#10;value = 110&#13;&#10;&#13;&#10;elseif value == 52 then&#13;&#10;--CkWhl=145&#10;value = 145&#13;&#10;&#13;&#10;elseif value == 53 then&#13;&#10;--CkHalf=146&#10;value = 146&#13;&#10;&#13;&#10;elseif value == 54 then&#13;&#10;--CkQtr=147&#10;value = 147&#13;&#10;&#13;&#10;elseif value == 55 then&#13;&#10;--Ck8th=148&#10;value = 148&#13;&#10;&#13;&#10;elseif value == 56 then&#13;&#10;--Ck16th=149&#10;value = 149&#13;&#10;&#13;&#10;elseif value == 57 then&#13;&#10;--DC=150&#10;value = 150&#13;&#10;&#13;&#10;elseif value == 58 then&#13;&#10;--Sum=161&#10;value = 161&#13;&#10;&#13;&#10;elseif value == 59 then&#13;&#10;--Switch=162&#10;value = 162&#13;&#10;&#13;&#10;elseif value == 60 then&#13;&#10;--Abs=163&#10;value = 163&#13;&#10;&#13;&#10;elseif value == 61 then&#13;&#10;--Diode=164&#10;value = 164&#10;&#13;&#10;elseif value == 62 then--FlipFlop=165&#10;value = 165&#13;&#10;&#10;elseif value == 63 then --Quantize=166&#13;&#10;value = 166&#13;&#10;&#10;elseif value == 64 then--Gainx4=167&#10;value = 167&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;paramChangeMsg(10,1,value)&#13;end&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="a0c6f66764db2b43e52c382d7ac79ee9" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord03dest" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord03dest = function(mod, value)&#13;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;if value == 0 then&#13;&#10;--off=0&#13;&#10;bi = 0&#13;&#10;&#13;&#10;elseif value == 1 then&#13;&#10;--Keysust=1&#13;&#10;bi = 1&#13;&#10;&#13;&#10;elseif value == 2 then&#13;&#10;--FinePitch=10&#13;&#10;bi = 10&#10;&#13;&#10;elseif value == 3 then&#13;&#10;--Pitch=48&#13;&#10;bi = 48&#10;&#13;&#10;elseif value == 4 then&#13;&#10;--Glide=49&#13;&#10;bi = 49&#13;&#10;&#13;&#10;elseif value == 5 then&#13;&#10;--ChrsAmt=50&#13;&#10;bi = 50&#13;&#10;&#10;elseif value == 6 then&#13;&#10;--ChrsITD=51&#10;bi = 51&#13;&#10;&#10;elseif value == 7 then&#13;&#10;--SStart=52&#13;&#10;bi = 52&#13;&#10;&#10;elseif value == 8 then&#13;&#10;--SLoop=53&#13;&#10;bi = 53&#13;&#10;&#10;elseif value == 9 then&#13;&#10;--SRetrig=54&#13;&#10;bi = 54&#13;&#10;&#10;elseif value == 10 then&#13;&#10;--FilFreq=56&#13;&#10;bi = 56&#13;&#10;&#10;elseif value == 11 then&#13;&#10;--FilRes=57&#13;&#10;bi = 57&#13;&#10;&#10;elseif value == 12 then&#13;&#10;--AmpVol=58&#13;&#10;bi = 58&#13;&#10;&#10;elseif value == 13 then&#13;&#10;--AmpPan=65&#13;&#10;bi = 65&#13;&#10;&#10;elseif value == 14 then&#13;&#10;--AmpXfd=66&#13;&#10;bi = 66&#13;&#10;&#10;elseif value == 15 then&#13;&#10;--VenvRts=67&#13;&#10;bi = 67&#13;&#10;&#10;elseif value == 16 then&#13;&#10;--VenvAtk=73&#13;&#10;bi = 73&#13;&#10;&#10;elseif value == 17 then&#13;&#10;--VenvDcy=74&#13;&#10;bi = 74&#13;&#10;&#10;elseif value == 18 then&#13;&#10;--VenvRls=75&#13;&#10;bi = 75&#13;&#10;&#10;elseif value == 19 then&#13;&#10;--FenvRts=76&#13;&#10;bi = 76&#13;&#10;&#10;elseif value == 20 then&#13;&#10;--FenvAtk=81&#13;&#10;bi = 81&#13;&#10;&#10;elseif value == 21 then&#13;&#10;--FenvDcy=82&#13;&#10;bi = 82&#13;&#10;&#10;elseif value == 22 then&#13;&#10;--FenvRls=83&#13;&#10;bi = 83&#13;&#10;&#10;elseif value == 23 then&#13;&#10;--FenvTrg=84&#13;&#10;bi = 84&#13;&#10;&#10;elseif value == 24 then&#13;&#10;--AEnvRts=88&#13;&#10;bi = 88&#13;&#10;&#10;elseif value == 25 then&#13;&#10;--AEnvAtk=89&#13;&#10;bi = 89&#13;&#10;&#10;elseif value == 26 then&#13;&#10;--AEnvDcy=90&#13;&#10;bi = 90&#13;&#10;&#10;elseif value == 27 then&#13;&#10;--AEnvRls=91&#13;&#10;bi = 91&#13;&#10;&#10;elseif value == 28 then&#13;&#10;--AEnvTrg=92&#13;&#10;bi = 92&#13;&#10;&#10;elseif value == 29 then&#13;&#10;--Lfo1Rate=96&#13;&#10;bi = 96&#13;&#10;&#10;elseif value == 30 then&#13;&#10;--Lfo1Trg=97&#13;&#10;bi = 97&#13;&#10;&#10;elseif value == 31 then&#13;&#10;--Lfo2rate=98&#13;&#10;bi = 98&#13;&#10;&#10;elseif value == 32 then&#13;&#10;--Lfo2Trg=105&#13;&#10;bi = 105&#13;&#10;&#10;elseif value == 33 then&#13;&#10;--Lag0in=106&#13;&#10;bi = 106&#13;&#10;&#10;elseif value == 34 then&#13;&#10;--Lag1in=107&#13;&#10;bi = 107&#13;&#10;&#10;elseif value == 35 then&#13;&#10;--Sum=111&#13;&#10;bi = 111&#13;&#10;&#10;elseif value == 36 then&#13;&#10;--Switch=162&#13;&#10;bi = 162&#13;&#10;&#13;&#10;elseif value == 37 then&#13;&#10;--Abs=163&#13;&#10;bi = 163&#13;&#10;&#10;elseif value == 38 then&#13;&#10;--Diode=164&#13;&#10;bi = 164&#13;&#10;&#10;elseif value == 39 then&#13;&#10;--FlipFlop=165&#13;&#10;bi = 165&#13;&#10;&#10;elseif value == 40 then&#13;&#10;--Quantize=166&#13;&#10;bi = 166&#13;&#10;&#10;elseif value == 41 then&#13;&#10;--Gainx4=167&#13;&#10;bi = 167&#13;&#10;&#10;elseif value == 42 then&#13;&#10;--C00Amt=168&#13;&#10;bi = 168&#13;&#10;&#10;elseif value == 43 then&#13;&#10;--C01Amt=169&#13;&#10;bi = 169&#13;&#10;&#10;elseif value == 44 then&#13;&#10;--C02Amt=170&#13;&#10;bi = 170&#13;&#10;&#10;elseif value == 45 then&#13;&#10;--C03Amt=171&#13;&#10;bi = 171&#13;&#10;&#10;elseif value == 46 then&#13;&#10;--C04Amt=172&#13;&#10;bi = 172&#13;&#10;&#10;elseif value == 47 then&#13;&#10;--C05Amt=173&#13;&#10;bi = 173&#13;&#10;&#10;elseif value == 48 then&#13;&#10;--C06Amt=174&#13;&#10;bi = 174&#13;&#10;&#10;elseif value == 49 then&#13;&#10;--C07Amt=175&#13;&#10;bi = 175&#13;&#10;&#10;elseif value == 50 then&#13;&#10;--C08Amt=176&#13;&#10;bi = 176&#13;&#10;&#10;elseif value == 51 then&#13;&#10;--C09Amt=177&#13;&#10;bi = 177&#13;&#10;&#10;elseif value == 52 then&#13;&#10;--C10Amt=178&#13;&#10;bi = 178&#13;&#10;&#10;elseif value == 53 then&#13;&#10;--C11Amt=179&#13;&#10;bi = 179&#13;&#10;&#10;elseif value == 54 then&#13;&#10;--C12Amt=180&#13;&#10;bi = 180&#13;&#10;&#10;elseif value == 55 then&#13;&#10;--C13Amt=181&#13;&#10;bi = 151&#13;&#10;&#10;elseif value == 56 then&#13;&#10;--C14Amt=182&#13;&#10;bi = 182&#13;&#10;&#10;elseif value == 57 then&#13;&#10;--C15Amt=183&#13;&#10;bi = 183&#13;&#10;&#10;elseif value == 58 then&#13;&#10;--C16Amt=184&#13;&#10;bi = 184&#13;&#10;&#10;elseif value == 59 then&#13;&#10;--C17Amt=185&#13;&#10;bi = 185&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;paramChangeMsg(11,1,bi)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="67e49c9edef8517a7a8c3375468fbe1f" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord03amount" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord03amount = function(mod, value)&#13;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;if value &lt; 0 then&#13;&#10;local amount = (128*128)+value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(12,1,LS,MS)&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;if value &gt;= 0 then &#13;&#10;local amount = value&#13;&#10;--console(string.format(amount))&#13;&#10;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;cordAmountChange(12,1,LS,MS)&#13;&#10;end&#13;&#13;&#10;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="0e7bd862d85f1fad5fbbe31ef99189f4" luaMethodValid="1"/>
          <luaMethod luaMethodName="cord04source" luaMethodCode="function cord04source(mod, value)&#10;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;if value == 2 then --Key+=5&#13;&#10;value = 5&#13;&#10;&#13;&#10;elseif value == 3 then --Key~=9&#13;&#10;value = 9&#13;&#10;&#13;&#10;elseif value == 4 then --Vel+=10&#13;&#10;value = 10&#13;&#10;&#13;&#10;elseif value == 5 then --Vel~=11&#13;&#10;value = 11&#13;&#10;&#13;&#10;elseif value == 6 then --Vel&lt;=12&#13;&#10;value = 12&#13;&#10;&#13;&#10;elseif value == 7 then --RlsVel=13&#13;&#10;value = 13&#13;&#10;&#13;&#10;elseif value == 8 then --Gate=14&#13;&#10;value = 14&#13;&#10;&#13;&#10;elseif value == 9 then --PitchWhl=15&#13;&#10;value = 15&#13;&#10;&#13;&#10;elseif value == 10 then --ModWhl=17&#13;&#10;value = 17&#13;&#10;&#13;&#10;elseif value == 11 then --Press=18&#13;&#10;value = 18&#13;&#10;&#13;&#10;elseif value == 12 then --Pedal=19&#13;&#10;value = 19&#13;&#10;&#13;&#10;elseif value == 13 then&#13;&#10;value = 20&#13;&#10;&#13;&#10;elseif value == 14 then --MidiB=21&#13;&#10;value = 21&#13;&#10;&#13;&#10;elseif value == 15 then --FtSw1=22&#13;&#10;value = 22&#13;&#10; &#13;&#10;elseif value == 16 then--FtSw2=23&#13;&#10;value = 23&#13;&#10;&#13;&#10;elseif value == 17 then --Ft1FF=24&#13;&#10;value = 24&#13;&#10;&#13;&#10;elseif value == 18 then --Ft2FF=25&#13;&#10;value = 25&#13;&#10;&#13;&#10;elseif value == 19 then --MidiVl=26&#13;&#10;value = 26&#13;&#10;&#13;&#10;elseif value == 20 then --MidiPn=27&#13;&#10;value = 27&#13;&#10;&#13;&#10;elseif value == 21 then --MidiC=28&#13;&#10;value = 28&#13;&#10;&#13;&#10;elseif value == 22 then --MidiD=33&#13;&#10;value = 33&#13;&#10;&#13;&#10;elseif value == 23 then --MidiE=34&#13;&#10;value = 34&#13;&#10;&#13;&#10;elseif value == 24 then --MidiF=35&#13;&#10;value = 35&#13;&#10;&#13;&#10;elseif value == 25 then --MidiG=36&#13;&#10;value = 36&#13;&#10;&#13;&#10;elseif value == 26 then --MidiH=37&#13;&#10;value = 37&#13;&#10;&#13;&#10;elseif value == 27 then --Thumb=38&#13;&#10;value = 38&#13;&#10;&#13;&#10;elseif value == 28 then --ThmFF=39&#13;&#10;value = 39&#13;&#10;&#13;&#10;elseif value == 29 then --KeyGld=40&#13;&#10;value = 40&#13;&#10;&#13;&#10;elseif value == 30 then --VEnv+=60&#13;&#10;value = 60&#13;&#10;&#13;&#10;elseif value == 31 then --VEnv~=73&#13;&#10;value = 73&#13;&#10;&#13;&#10;elseif value == 32 then --VEnv&lt;=74&#13;&#10;value = 74&#13;&#10;&#13;&#10;elseif value == 33 then --FEnv+=80&#13;&#10;value = 80&#13;&#10;&#13;&#10;elseif value == 34 then--FEnv~=81&#13;&#10;value = 81&#13;&#10;&#13;&#10;elseif value == 35 then--FEnv&lt;=82&#13;&#10;value = 82&#13;&#10;&#13;&#10;elseif value == 36 then--AEnv+=83&#13;&#10;value = 83&#13;&#10;&#13;&#10;elseif value == 37 then---AEnv~=89&#13;&#10;value = 89&#13;&#10;&#13;&#10;elseif value == 38 then&#13;&#10;--AEnv&lt;=90&#13;&#10;value = 90&#13;&#10;&#13;&#10;elseif value == 39 then&#13;&#10;--Lfo1~=91&#13;&#10;value = 91&#13;&#10;&#13;&#10;elseif value == 40 then&#13;&#10;--Lfo1+=97&#13;&#10;value = 97&#13;&#10;&#13;&#10;&#13;&#10;elseif value == 41 then&#13;&#10;--White=98&#13;&#10;value = 98&#13;&#10;&#13;&#10;elseif value == 42 then&#13;&#10;--Pink=99&#13;&#10;value = 99&#13;&#10;&#13;&#10;elseif value == 43 then&#13;&#10;--kRand1=100&#13;&#10;value = 100&#13;&#10;&#13;&#10;elseif value == 44 then&#13;&#10;--kRand2=101&#13;&#10;value = 101&#13;&#10;&#13;&#10;elseif value == 45 then&#13;&#10;--Lfo2~=102&#13;&#10;value = 102&#13;&#10;&#13;&#10;elseif value == 46 then&#13;&#10;--Lfo2+=105&#13;&#10;value = 105&#13;&#10;&#13;&#10;elseif value == 47 then&#13;&#10;--Lag0in=106&#13;&#10;value = 106&#13;&#10;&#13;&#10;elseif value == 48 then&#13;&#10;--Lag0=107&#13;&#10;value = 107&#13;&#10;&#13;&#10;elseif value == 49 then&#13;&#10;--Lag1in=108&#13;&#10;value = 108&#13;&#10;&#13;&#10;elseif value == 50 then&#13;&#10;--Lag1=109&#13;&#10;value = 109&#13;&#10;&#13;&#10;elseif value == 51 then&#13;&#10;--CkDwhl=110&#13;&#10;value = 110&#13;&#10;&#13;&#10;elseif value == 52 then&#13;&#10;--CkWhl=145&#10;value = 145&#13;&#10;&#13;&#10;elseif value == 53 then&#13;&#10;--CkHalf=146&#10;value = 146&#13;&#10;&#13;&#10;elseif value == 54 then&#13;&#10;--CkQtr=147&#10;value = 147&#13;&#10;&#13;&#10;elseif value == 55 then&#13;&#10;--Ck8th=148&#10;value = 148&#13;&#10;&#13;&#10;elseif value == 56 then&#13;&#10;--Ck16th=149&#10;value = 149&#13;&#10;&#13;&#10;elseif value == 57 then&#13;&#10;--DC=150&#10;value = 150&#13;&#10;&#13;&#10;elseif value == 58 then&#13;&#10;--Sum=161&#10;value = 161&#13;&#10;&#13;&#10;elseif value == 59 then&#13;&#10;--Switch=162&#10;value = 162&#13;&#10;&#13;&#10;elseif value == 60 then&#13;&#10;--Abs=163&#10;value = 163&#13;&#10;&#13;&#10;elseif value == 61 then&#13;&#10;--Diode=164&#10;value = 164&#10;&#13;&#10;elseif value == 62 then--FlipFlop=165&#10;value = 165&#13;&#10;&#10;elseif value == 63 then --Quantize=166&#13;&#10;value = 166&#13;&#10;&#10;elseif value == 64 then--Gainx4=167&#10;value = 167&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;paramChangeMsg(13,1,value)&#13;end&#13;&#10;end&#10;"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="5b4175c1db2688bb15606688416e3e1d"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cord04dest" luaMethodCode="function cord04dest(mod, value)&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;if value == 0 then&#13;&#10;--off=0&#13;&#10;bi = 0&#13;&#10;&#13;&#10;elseif value == 1 then&#13;&#10;--Keysust=1&#13;&#10;bi = 1&#13;&#10;&#13;&#10;elseif value == 2 then&#13;&#10;--FinePitch=10&#13;&#10;bi = 10&#10;&#13;&#10;elseif value == 3 then&#13;&#10;--Pitch=48&#13;&#10;bi = 48&#10;&#13;&#10;elseif value == 4 then&#13;&#10;--Glide=49&#13;&#10;bi = 49&#13;&#10;&#13;&#10;elseif value == 5 then&#13;&#10;--ChrsAmt=50&#13;&#10;bi = 50&#13;&#10;&#10;elseif value == 6 then&#13;&#10;--ChrsITD=51&#10;bi = 51&#13;&#10;&#10;elseif value == 7 then&#13;&#10;--SStart=52&#13;&#10;bi = 52&#13;&#10;&#10;elseif value == 8 then&#13;&#10;--SLoop=53&#13;&#10;bi = 53&#13;&#10;&#10;elseif value == 9 then&#13;&#10;--SRetrig=54&#13;&#10;bi = 54&#13;&#10;&#10;elseif value == 10 then&#13;&#10;--FilFreq=56&#13;&#10;bi = 56&#13;&#10;&#10;elseif value == 11 then&#13;&#10;--FilRes=57&#13;&#10;bi = 57&#13;&#10;&#10;elseif value == 12 then&#13;&#10;--AmpVol=58&#13;&#10;bi = 58&#13;&#10;&#10;elseif value == 13 then&#13;&#10;--AmpPan=65&#13;&#10;bi = 65&#13;&#10;&#10;elseif value == 14 then&#13;&#10;--AmpXfd=66&#13;&#10;bi = 66&#13;&#10;&#10;elseif value == 15 then&#13;&#10;--VenvRts=67&#13;&#10;bi = 67&#13;&#10;&#10;elseif value == 16 then&#13;&#10;--VenvAtk=73&#13;&#10;bi = 73&#13;&#10;&#10;elseif value == 17 then&#13;&#10;--VenvDcy=74&#13;&#10;bi = 74&#13;&#10;&#10;elseif value == 18 then&#13;&#10;--VenvRls=75&#13;&#10;bi = 75&#13;&#10;&#10;elseif value == 19 then&#13;&#10;--FenvRts=76&#13;&#10;bi = 76&#13;&#10;&#10;elseif value == 20 then&#13;&#10;--FenvAtk=81&#13;&#10;bi = 81&#13;&#10;&#10;elseif value == 21 then&#13;&#10;--FenvDcy=82&#13;&#10;bi = 82&#13;&#10;&#10;elseif value == 22 then&#13;&#10;--FenvRls=83&#13;&#10;bi = 83&#13;&#10;&#10;elseif value == 23 then&#13;&#10;--FenvTrg=84&#13;&#10;bi = 84&#13;&#10;&#10;elseif value == 24 then&#13;&#10;--AEnvRts=88&#13;&#10;bi = 88&#13;&#10;&#10;elseif value == 25 then&#13;&#10;--AEnvAtk=89&#13;&#10;bi = 89&#13;&#10;&#10;elseif value == 26 then&#13;&#10;--AEnvDcy=90&#13;&#10;bi = 90&#13;&#10;&#10;elseif value == 27 then&#13;&#10;--AEnvRls=91&#13;&#10;bi = 91&#13;&#10;&#10;elseif value == 28 then&#13;&#10;--AEnvTrg=92&#13;&#10;bi = 92&#13;&#10;&#10;elseif value == 29 then&#13;&#10;--Lfo1Rate=96&#13;&#10;bi = 96&#13;&#10;&#10;elseif value == 30 then&#13;&#10;--Lfo1Trg=97&#13;&#10;bi = 97&#13;&#10;&#10;elseif value == 31 then&#13;&#10;--Lfo2rate=98&#13;&#10;bi = 98&#13;&#10;&#10;elseif value == 32 then&#13;&#10;--Lfo2Trg=105&#13;&#10;bi = 105&#13;&#10;&#10;elseif value == 33 then&#13;&#10;--Lag0in=106&#13;&#10;bi = 106&#13;&#10;&#10;elseif value == 34 then&#13;&#10;--Lag1in=107&#13;&#10;bi = 107&#13;&#10;&#10;elseif value == 35 then&#13;&#10;--Sum=111&#13;&#10;bi = 111&#13;&#10;&#10;elseif value == 36 then&#13;&#10;--Switch=162&#13;&#10;bi = 162&#13;&#10;&#13;&#10;elseif value == 37 then&#13;&#10;--Abs=163&#13;&#10;bi = 163&#13;&#10;&#10;elseif value == 38 then&#13;&#10;--Diode=164&#13;&#10;bi = 164&#13;&#10;&#10;elseif value == 39 then&#13;&#10;--FlipFlop=165&#13;&#10;bi = 165&#13;&#10;&#10;elseif value == 40 then&#13;&#10;--Quantize=166&#13;&#10;bi = 166&#13;&#10;&#10;elseif value == 41 then&#13;&#10;--Gainx4=167&#13;&#10;bi = 167&#13;&#10;&#10;elseif value == 42 then&#13;&#10;--C00Amt=168&#13;&#10;bi = 168&#13;&#10;&#10;elseif value == 43 then&#13;&#10;--C01Amt=169&#13;&#10;bi = 169&#13;&#10;&#10;elseif value == 44 then&#13;&#10;--C02Amt=170&#13;&#10;bi = 170&#13;&#10;&#10;elseif value == 45 then&#13;&#10;--C03Amt=171&#13;&#10;bi = 171&#13;&#10;&#10;elseif value == 46 then&#13;&#10;--C04Amt=172&#13;&#10;bi = 172&#13;&#10;&#10;elseif value == 47 then&#13;&#10;--C05Amt=173&#13;&#10;bi = 173&#13;&#10;&#10;elseif value == 48 then&#13;&#10;--C06Amt=174&#13;&#10;bi = 174&#13;&#10;&#10;elseif value == 49 then&#13;&#10;--C07Amt=175&#13;&#10;bi = 175&#13;&#10;&#10;elseif value == 50 then&#13;&#10;--C08Amt=176&#13;&#10;bi = 176&#13;&#10;&#10;elseif value == 51 then&#13;&#10;--C09Amt=177&#13;&#10;bi = 177&#13;&#10;&#10;elseif value == 52 then&#13;&#10;--C10Amt=178&#13;&#10;bi = 178&#13;&#10;&#10;elseif value == 53 then&#13;&#10;--C11Amt=179&#13;&#10;bi = 179&#13;&#10;&#10;elseif value == 54 then&#13;&#10;--C12Amt=180&#13;&#10;bi = 180&#13;&#10;&#10;elseif value == 55 then&#13;&#10;--C13Amt=181&#13;&#10;bi = 151&#13;&#10;&#10;elseif value == 56 then&#13;&#10;--C14Amt=182&#13;&#10;bi = 182&#13;&#10;&#10;elseif value == 57 then&#13;&#10;--C15Amt=183&#13;&#10;bi = 183&#13;&#10;&#10;elseif value == 58 then&#13;&#10;--C16Amt=184&#13;&#10;bi = 184&#13;&#10;&#10;elseif value == 59 then&#13;&#10;--C17Amt=185&#13;&#10;bi = 185&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;paramChangeMsg(14,1,bi)&#13;&#10;&#13;&#10;end&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="7c8ce8760c9dd857a15641b670648962"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cord04amount" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;cord04amount = function(mod, value)&#13;&#10;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#13;&#10;&#9;&#9;if value &lt; 0 then&#13;&#10;&#9;&#9;local amount = (128*128)+value&#13;&#10;--console(string.format(amount))&#13;&#10;&#9;&#9;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;&#9;&#9;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;&#9;&#9;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;&#9;&#9;cordAmountChange(15,1,LS,MS)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if value &gt;= 0 then &#13;&#10;&#9;&#9;local amount = value&#13;&#10;--console(string.format(amount))&#13;&#10;&#9;&#9;local bi = CtrlrLuaBigInteger(amount)&#13;&#10;&#9;&#9;local LS = bi:getBitRangeAsInt(0,7)&#13;&#10;&#9;&#9;local MS = bi:getBitRangeAsInt(7,7)&#13;&#10;&#13;&#10;&#9;&#9;cordAmountChange(15,1,LS,MS)&#13;&#10;&#9;&#9;end&#13;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="13c2d6df7855efb3e96f7205689336f5"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="lfo" uuid="210132f8200f3d41c7d0dc60fcdeb486">
          <luaMethod luaMethodName="lfoRate" luaMethodCode="function lfoRate(mod, value)&#13;&#10;&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;restore = panel:getRestoreState()&#13;&#10;if restore ~= true then &#13;&#10;paramChangeMsg(105,0,value)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="3d5db7eb26e1fcd3ff06f92354ec82cc" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="chorus" uuid="74edbf95924faa10797151af2a464153">
          <luaMethod luaMethodName="ChorusWidth" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;ChorusWidth = function(mod, value)&#13;&#9;&#13;&#10;&#9;if loaded == true then&#13;&#10;&#9;&#9;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#9;&#9;if restore ~= true then &#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;paramChangeChorus(59,0,value)&#13;&#10;&#9;&#9;&#9;&#13;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="fd55bbe0ff9bcd7d59c81ff1c367a9f5" luaMethodValid="1"/>
          <luaMethod luaMethodName="ChorusAmt" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;ChorusAmt = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;restore = panel:getRestoreState()&#13;&#10;&#13;&#10;&#9;if restore ~= true then &#13;&#10;&#13;&#10;&#9;paramChangeMsg(58,0,value)&#13;&#10;&#9;end&#13;end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="7abb6a00cb6420f263f143ef2e935132" luaMethodValid="1"/>
        </luaMethodGroup>
      </luaMethodGroup>
      <luaMethodGroup name="targetSelection" uuid="8afb62f5e2e827f9fb1db3c901489315">
        <luaMethod luaMethodName="selectedVoice" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;selectedVoice = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#9;&#13;&#10;--select voice to be targeted for editing&#13;&#10;voice = string.format(&quot;f0 18 21 %.2x 55 01 02 61 01 %.2x %.2x 6b f7&quot;, devID, lsb(value), msb(value))&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(voice))&#13;&#10;&#13;&#10;--&#9;if midiInActive ~= true then&#13;&#10;--&#9;paramChangeMsg(98,01, value)&#13;&#10;--&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(41,0) -- voice coarse tuning&#13;&#10;paramReqMsg(42,0) -- voice fine tuning&#13;&#10;paramReqMsg(43,0) -- voice key transpose&#13;&#10;paramReqMsg(44,0) -- samplezone root key&#13;&#10;paramReqMsg(45,0) -- samplezone low key&#13;&#10;paramReqMsg(46,0) -- samplezone keywin fade&#13;&#10;paramReqMsg(47,0) -- samplezone high key&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(57,0) -- voice non-transpose&#13;&#10;paramReqMsg(58,0) -- chorus amount&#13;&#10;paramReqMsg(59,0) -- chorus width&#13;&#10;&#13;&#10;paramReqMsg(82,0) -- filtertype&#13;&#10;paramReqMsg(83,0) -- cutoff&#13;&#10;paramReqMsg(84,0) -- res&#13;&#10;paramReqMsg(87,0) -- morph freq 01&#13;&#10;paramReqMsg(88,0) -- morph shelf 01&#13;&#10;paramReqMsg(89,0) -- morph peak 01&#13;&#10;paramReqMsg(90,0) -- morph freq 02&#13;&#10;paramReqMsg(91,0) -- morph shelf02&#13;&#10;paramReqMsg(92,0) -- morph peak 02&#13;&#10;&#13;&#10;paramReqMsg(93,0) -- filterenv atk1rate&#13;&#10;paramReqMsg(94,0) -- filterenv atk1lvl&#13;&#10;paramReqMsg(95,0) -- filterenv atk2rate&#13;&#10;paramReqMsg(96,0) -- filterenv atk2lvl&#13;&#10;paramReqMsg(97,0) -- filterenv dcy1rate&#13;&#10;paramReqMsg(98,0) -- filterenv dcy1lvl&#13;&#10;paramReqMsg(99,0) -- filterenv dcy2rate&#13;&#10;paramReqMsg(100,0) -- filterenv dcy2lvl&#13;&#10;paramReqMsg(101,0) -- filterenv rls1rate&#13;&#10;paramReqMsg(102,0) -- filterenv rls1lvl&#13;&#10;paramReqMsg(103,0) -- filterenv rls2rate&#13;&#10;paramReqMsg(104,0) -- filterenv rls2lvl&#13;&#10;&#13;&#10;&#13;&#10;&#13;paramReqMsg(1,1)  --cord 00 source&#13;&#10;paramReqMsg(2,1)  --cord 00 dest&#13;&#10;paramReqMsg(3,1)  --cord 00 amt&#13;&#10;paramReqMsg(4,1)  --cord 01 source&#13;&#10;paramReqMsg(5,1)  --cord 01 dest&#13;&#10;paramReqMsg(6,1)  --cord 01 amt&#13;&#10;paramReqMsg(7,1)  --cord 02 source&#13;&#10;paramReqMsg(8,1)  --cord 02 dest&#13;&#10;paramReqMsg(9,1)  --cord 02 amt&#13;&#10;paramReqMsg(10,1)  --cord 03 source&#13;&#10;paramReqMsg(11,1)  --cord 03 dest&#13;&#10;paramReqMsg(12,1)  --cord 03 amt&#13;&#10;paramReqMsg(13,1)  --cord 04 source&#13;&#10;paramReqMsg(14,1)  --cord 04 dest&#13;&#10;paramReqMsg(15,1)  --cord 04 amt&#13;&#10;&#13;&#10;paramReqMsg(105,0) --lfo rate&#13;&#10;&#13;&#10;-- misc requests&#13;&#10;voiceParametersRequest(panel:getModulatorByName(&quot;presetNumber&quot;):getValue(),value)&#13;&#10;&#13;&#10;if panel:getModulatorByName(&quot;sampleZoneList&quot;):getValue() ~= 0 then &#13;&#10;panel:getModulatorByName(&quot;sampleZoneList&quot;):setModulatorValue(0, false, true, false) -- set to 0 to mimick sampler behaviour (selecting a new voice automatically targets first samplezone in that voice/multisample)&#10;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#9;&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="4142779210b73cf7399b5f63193d6527" luaMethodValid="1"/>
        <luaMethod luaMethodName="selectedPreset" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;selectedPreset = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;local preset = string.format(&quot;f0 18 21 %.2x 55 01 02 5F 01 %.2x %.2x 6b f7&quot;, devID, lsb(value), msb(value))&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(preset))&#13;&#10;&#13;&#10;&#13;&#10;-- do a presetdumprequest to populate voicefield&#13;&#10;presetDumpRequest()&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;&#13;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="048ffd38859e8cd0be90f8d52e8bfdf5" luaMethodValid="1"/>
        <luaMethod luaMethodName="refreshPreset" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;refreshPreset = function(mod, value)&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(41,0) -- voice coarse tuning&#13;&#10;paramReqMsg(42,0) -- voice fine tuning&#13;&#10;paramReqMsg(43,0) -- voice key transpose&#13;&#10;paramReqMsg(44,0) -- samplezone root key&#13;&#10;paramReqMsg(45,0) -- samplezone low key&#13;&#10;paramReqMsg(46,0) -- samplezone keywin fade&#13;&#10;paramReqMsg(47,0) -- samplezone high key&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(57,0) -- voice non-transpose&#13;&#10;paramReqMsg(58,0) -- chorus amount&#13;&#10;paramReqMsg(59,0) -- chorus width&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(82,0) -- filtertype&#13;&#10;paramReqMsg(83,0) -- cutoff&#13;&#10;paramReqMsg(84,0) -- res&#13;&#10;paramReqMsg(87,0) -- morph freq 01&#13;&#10;paramReqMsg(88,0) -- morph shelf 01&#13;&#10;paramReqMsg(89,0) -- morph peak 01&#13;&#10;paramReqMsg(90,0) -- morph freq 02&#13;&#10;paramReqMsg(91,0) -- morph shelf02&#13;&#10;paramReqMsg(92,0) -- morph peak 02&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(93,0) -- filterenv atk1rate&#13;&#10;paramReqMsg(94,0) -- filterenv atk1lvl&#13;&#10;paramReqMsg(95,0) -- filterenv atk2rate&#13;&#10;paramReqMsg(96,0) -- filterenv atk2lvl&#13;&#10;paramReqMsg(97,0) -- filterenv dcy1rate&#13;&#10;paramReqMsg(98,0) -- filterenv dcy1lvl&#13;&#10;paramReqMsg(99,0) -- filterenv dcy2rate&#13;&#10;paramReqMsg(100,0) -- filterenv dcy2lvl&#13;&#10;paramReqMsg(101,0) -- filterenv rls1rate&#13;&#10;paramReqMsg(102,0) -- filterenv rls1lvl&#13;&#10;paramReqMsg(103,0) -- filterenv rls2rate&#13;&#10;paramReqMsg(104,0) -- filterenv rls2lvl&#13;&#10;&#13;paramReqMsg(1,1)  --cord 00 source&#13;&#10;paramReqMsg(2,1)  --cord 00 dest&#13;&#10;paramReqMsg(3,1)  --cord 00 amt&#13;&#10;paramReqMsg(4,1)  --cord 01 source&#13;&#10;paramReqMsg(5,1)  --cord 01 dest&#13;&#10;paramReqMsg(6,1)  --cord 01 amt&#13;&#10;paramReqMsg(7,1)  --cord 02 source&#13;&#10;paramReqMsg(8,1)  --cord 02 dest&#13;&#10;paramReqMsg(9,1)  --cord 02 amt&#13;&#10;paramReqMsg(10,1)  --cord 03 source&#13;&#10;paramReqMsg(11,1)  --cord 03 dest&#13;&#10;paramReqMsg(12,1)  --cord 03 amt&#13;&#10;paramReqMsg(13,1)  --cord 04 source&#13;&#10;paramReqMsg(14,1)  --cord 04 dest&#13;&#10;paramReqMsg(15,1)  --cord 04 amt&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(105,0) --lfo rate&#13;&#10;&#13;&#10;&#13;&#10;-- misc requests&#13;&#10;--voiceParametersRequest(panel:getModulatorByName(&quot;presetNumber&quot;):getValue(),value)&#13;&#10;if panel:getModulatorByName(&quot;sampleZoneList&quot;):getValue() ~= nil then &#13;&#10;panel:getModulatorByName(&quot;sampleZoneList&quot;):setModulatorValue(0, false, true, false) -- set to 0 to mimick sampler behaviour (selecting a new voice automatically targets first samplzone in that voice/multisample)&#13;&#10;end&#13;&#10;if panel:getModulatorByName(&quot;listbox&quot;):getValue() ~= nil then &#13;&#10;panel:getModulatorByName(&quot;listbox&quot;):setModulatorValue(0, false, true, false) -- set to 0 to mimick sampler behaviour (selecting a new preset automatically targets first voice in that preset)&#13;&#10;end&#13;&#10;&#13;&#10;end&#13;&#10;end&#13;&#10;&#13;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="21b1b76abcec8ea9274cf972fd66e059" luaMethodValid="1"/>
        <luaMethod luaMethodName="SampleZoneSelected" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;SampleZoneSelected = function(mod, value)&#13;&#10;console(string.format(value))&#13;&#10;&#13;&#10;if loaded == true then&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--tell the sampler what samplezone to target&#13;&#10;&#13;&#10;local zone = string.format(&quot;f0 18 21 %.2x 55 01 02 62 01 %.2x 00 6b f7&quot;, devID, value)&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(zone))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--request note, fade, velocity window and RTwindow values&#13;&#10;&#13;&#10;&#13;&#10;&#9;paramReqMsg(44,0) -- samplezone root key&#13;&#10;&#9;paramReqMsg(45,0) -- samplezone low key&#13;&#10;&#9;paramReqMsg(46,0) -- samplezone keywin fade&#13;&#10;&#9;paramReqMsg(47,0) -- samplezone high key&#13;&#10;&#13;&#10;--request sample name &amp; show in lcd&#13;&#10;&#13;&#10;&#13;&#10;paramReqMsg(38, 0)  --request sample number in selected target&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;local sampleLCD = panel:getModulatorByName(&quot;sampleNameLCD&quot;):getComponent()&#13;&#10;&#13;&#10;&#13;end&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="315192767b9fa14b3ca2e669ea292e63" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="panel loading" uuid="fd487bef43cf4428493832ab7c1c1c52">
        <luaMethod luaMethodName="panelLoaded" luaMethodCode="--&#13;-- Called when the panel has finished loading&#13;--&#13;panelLoaded = function()&#13;&#10;&#13;&#10;--init stuff&#13;&#10;&#13;&#10;loaded &#9;= true&#13;&#10;k0 &#9;&#9;= MemoryBlock() --dump data memoryblock for saving to file&#13;&#10;k1 &#9;&#9;= {} -- k0 dumped to table to easily extract values&#13;&#10;canvas &#9;= panel:getCanvas()&#13;&#10;devID &#9;= 1&#13;&#10;&#13;&#10;--midi received analysys strings&#13;&#10;&#13;&#10;-- for preset dump parsing&#13;&#10;dumpheader = string.format(&quot;f0 18 21 01 55 0d 01 00&quot;)&#13;&#10;dumpdata   = string.format(&quot;f0 18 21 01 55 0d 02&quot;)&#13;&#10;dumpEOF    = string.format(&quot;f0 18 21 01 55 7b f7&quot;)&#13;&#10;samplezonesAmount = string.format(&quot;f0 18 21 01 55 1d&quot;)&#13;&#10;&#13;&#10;-- for single value responses&#13;&#10;singleParamMsg = string.format(&quot;f0 18 21 01 55 01 02&quot;)&#13;&#10;&#13;&#10;&#13;&#10;--MODULATORS&#13;&#10;&#13;&#10;--voice params&#13;&#10;&#13;&#10;voiceFineTuneMod = panel:getModulatorByName(&quot;voiceFineTune&quot;)&#13;&#10;coarseTune &#9;&#9; = panel:getModulatorByName(&quot;coarseTune&quot;)&#13;&#10;voiceKeytrans &#9; = panel:getModulatorByName(&quot;keyTranspose&quot;)&#13;&#10;voiceNonTransMod = panel:getModulatorByName(&quot;voiceNonTranspose&quot;)&#13;&#10;&#13;&#10;chorusAmt&#9;&#9; = panel:getModulatorByName(&quot;chorusAmt&quot;)&#13;&#10;chorusWidth&#9;&#9; = panel:getModulatorByName(&quot;chorusWidth&quot;)&#13;&#10;&#13;&#10;--filter basics&#13;&#10;filterMode &#9;&#9;= panel:getModulatorByName(&quot;filtertype&quot;)&#13;&#10;Cutoff &#9;   &#9;&#9;= panel:getModulatorByName(&quot;cutoff&quot;)&#13;&#10;resonance  &#9;&#9;= panel:getModulatorByName(&quot;resAndGain&quot;) &#13;&#10;&#13;&#10;--filter morphing&#13;&#10;morph01Mod&#9;&#9;= panel:getModulatorByName(&quot;morphParam01&quot;)&#13;&#10;morph02Mod&#9;&#9;= panel:getModulatorByName(&quot;morphParam02&quot;)&#13;&#10;morph03Mod&#9;&#9;= panel:getModulatorByName(&quot;morphParam03&quot;)&#13;&#10;morph04Mod&#9;&#9;= panel:getModulatorByName(&quot;morphParam04&quot;)&#13;&#10;morph05Mod&#9;&#9;= panel:getModulatorByName(&quot;morphParam05&quot;)&#13;&#10;morph06Mod&#9;&#9;= panel:getModulatorByName(&quot;morphParam06&quot;)&#13;&#10;&#13;&#10;--filter envelope&#13;&#10;fltAtk1RateMod &#9;= panel:getModulatorByName(&quot;filterEnvAtk1Rate&quot;) &#13;&#10;fltAtk1LevelMod = panel:getModulatorByName(&quot;filterEnvAtk1Level&quot;) &#13;&#10;fltAtk2RateMod &#9;= panel:getModulatorByName(&quot;filterEnvAtk2Rate&quot;) &#13;&#10;fltAtk2LevelMod = panel:getModulatorByName(&quot;filterEnvAtk2Level&quot;) &#13;&#10;fltDcy1RateMod &#9;= panel:getModulatorByName(&quot;filterEnvDcy1Rate&quot;)&#13;&#10;fltDcy1LevelMod = panel:getModulatorByName(&quot;filterEnvDcy1Level&quot;)&#13;&#10;fltDcy2RateMod &#9;= panel:getModulatorByName(&quot;filterEnvDcy2Rate&quot;)&#13;&#10;fltDcy2LevelMod = panel:getModulatorByName(&quot;filterEnvDcy2Level&quot;)&#13;&#10;fltRls1RateMod &#9;= panel:getModulatorByName(&quot;filterEnvRls1Rate&quot;)&#13;&#10;fltRls1LevelMod = panel:getModulatorByName(&quot;filterEnvRls1Level&quot;)&#13;&#10;fltRls2RateMod  = panel:getModulatorByName(&quot;filterEnvRls2Rate&quot;)&#13;&#10;fltRls2LevelMod = panel:getModulatorByName(&quot;filterEnvRls2Level&quot;)&#13;&#10;&#13;&#10;&#13;&#10;--cords&#13;&#10;cord00amt &#9;&#9;= panel:getModulatorByName(&quot;cord00amt&quot;)&#13;&#10;cord00dest &#9;&#9;= panel:getModulatorByName(&quot;cord00dest&quot;)&#13;&#10;cord00source &#9;= panel:getModulatorByName(&quot;cord00source&quot;)&#13;&#10;cord01sourceMod = panel:getModulatorByName(&quot;cord01source&quot;)&#13;&#10;cord01dest &#9;&#9;= panel:getModulatorByName(&quot;cord01dest&quot;)&#13;&#10;cord01amt &#9;&#9;= panel:getModulatorByName(&quot;cord01amt&quot;)&#13;&#10;cord02sourceMod = panel:getModulatorByName(&quot;cord02source&quot;)&#13;&#10;cord02destMod &#9;= panel:getModulatorByName(&quot;cord02dest&quot;)&#13;&#10;cord02amtMod &#9;= panel:getModulatorByName(&quot;cord02amt&quot;)&#13;&#10;cord03sourceMod = panel:getModulatorByName(&quot;cord03source&quot;)&#13;&#10;cord03destMod &#9;= panel:getModulatorByName(&quot;cord03dest&quot;)&#13;&#10;cord03amtMod &#9;= panel:getModulatorByName(&quot;cord03amt&quot;)&#13;&#10;cord04sourceMod = panel:getModulatorByName(&quot;cord04source&quot;)&#13;&#10;cord04destMod &#9;= panel:getModulatorByName(&quot;cord04dest&quot;)&#13;&#10;cord04amtMod &#9;= panel:getModulatorByName(&quot;cord04amt&quot;)&#13;&#10;--lfo section&#13;&#10;&#13;&#10;lfoRateMod = panel:getModulatorByName(&quot;lfoRate&quot;)&#13;&#10;&#13;&#10;--preset&#13;&#10;presetNum = panel:getModulatorByName(&quot;presetNumber&quot;)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--COMPONENTS&#13;&#10;&#13;&#10;--displays&#13;&#10;presetLCD = panel:getModulatorByName(&quot;presetLCD&quot;):getComponent()&#13;&#10;&#13;&#10;--init display&#13;&#10;presetLCD:setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;)&#13;&#10;&#13;&#10;&#13;&#10;--filter section&#13;&#10;cutoffComp  = Cutoff:getComponent()&#13;&#10;cutoffLCD   = panel:getModulatorByName(&quot;cutoffLCD&quot;):getComponent()&#13;&#10;resComp &#9;= resonance:getComponent()&#13;&#10;resLCD &#9;&#9;= panel:getModulatorByName(&quot;resLCD&quot;):getComponent()&#13;&#10;&#13;&#10;&#13;&#10;--lfo section&#13;&#10;lfoRateComp = panel:getModulatorByName(&quot;lfoRate&quot;):getComponent()&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--arrays&#13;&#10;&#13;&#10;--for lcd readouts&#13;&#10;&#13;&#10;dbscale  = {&quot;-24.0dB&quot;,&quot;-23.7dB&quot;,&quot;-23.3dB&quot;,&quot;-22.9dB&quot;,&quot;-22.5dB&quot;,&quot;-22.2dB&quot;,&quot;-21.8dB&quot;,&quot;-21.4dB&quot;,&quot;-21.0dB&quot;,&quot;-20.7dB&quot;,&quot;-20.3dB&quot;,&quot;-19.9dB&quot;,&quot;-19.5dB&quot;,&quot;-19.2dB&quot;,&quot;-18.8dB&quot;,&quot;-18.4dB&quot;,&quot;-18.0dB&quot;,&quot;-17.7dB&quot;,&quot;-17.3dB&quot;,&quot;-16.9dB&quot;,&quot;-16.5dB&quot;,&quot;-16.2dB&quot;,&quot;-15.8dB&quot;,&quot;-15.4dB&quot;,&quot;-15.0dB&quot;,&quot;-14.7dB&quot;,&quot;-14.3dB&quot;,&quot;-13.9dB&quot;,&quot;-13.5dB&quot;,&quot;-13.2dB&quot;,&quot;-12.8dB&quot;,&quot;-12.4dB&quot;,&quot;-12.0dB&quot;,&quot;-11.7dB&quot;,&quot;-11.3dB&quot;,&quot;-10.9dB&quot;,&quot;-10.5dB&quot;,&quot;-10.2dB&quot;,&quot;-9.8dB&quot;,&quot;-9.4dB&quot;,&quot;-9.0dB&quot;,&quot;-8.7dB&quot;,&quot;-8.3dB&quot;,&quot;-7.9dB&quot;,&quot;-7.5dB&quot;,&quot;-7.2dB&quot;,&quot;-6.8dB&quot;,&quot;-6.4dB&quot;,&quot;-6.0dB&quot;,&quot;-5.7dB&quot;,&quot;-5.3dB&quot;,&quot;-4.9dB&quot;,&quot;-4.5dB&quot;,&quot;-4.2dB&quot;,&quot;-3.8dB&quot;,&quot;-3.4dB&quot;,&quot;-3.0dB&quot;,&quot;-2.7dB&quot;,&quot;-2.3dB&quot;,&quot;-1.9dB&quot;,&quot;-1.5dB&quot;,&quot;-1.2dB&quot;,&quot;-0.8dB&quot;,&quot;-0.4dB&quot;,&quot;0.0dB&quot;,&quot;+0.3dB&quot;,&quot;+0.7dB&quot;,&quot;+1.1dB&quot;,&quot;+1.5dB&quot;,&quot;+1.8dB&quot;,&quot;+2.2dB&quot;,&quot;+2.6dB&quot;,&quot;+3.0dB&quot;,&quot;+3.3dB&quot;,&quot;+3.7dB&quot;,&quot;+4.1dB&quot;,&quot;+4.5dB&quot;,&quot;+4.8dB&quot;,&quot;+5.2dB&quot;,&quot;+5.6dB&quot;,&quot;+6.0dB&quot;,&quot;+6.3dB&quot;,&quot;+6.7dB&quot;,&quot;+7.1dB&quot;,&quot;+7.5dB&quot;,&quot;+7.8dB&quot;,&quot;+8.2dB&quot;,&quot;+8.6dB&quot;,&quot;+9.0dB&quot;,&quot;+9.3dB&quot;,&quot;+9.7dB&quot;,&quot;+10.1dB&quot;,&quot;+10.5dB&quot;,&quot;+10.8dB&quot;,&quot;+11.2dB&quot;,&quot;+11.6dB&quot;,&quot;+12.0dB&quot;,&quot;+12.3dB&quot;,&quot;+12.7dB&quot;,&quot;+13.1dB&quot;,&quot;+13.5dB&quot;,&quot;+13.8dB&quot;,&quot;+14.2dB&quot;,&quot;+14.6dB&quot;,&quot;+15.0dB&quot;,&quot;+15.3dB&quot;,&quot;+15.7dB&quot;,&quot;+16.1dB&quot;,&quot;+16.5dB&quot;,&quot;+16.8dB&quot;,&quot;+17.2dB&quot;,&quot;+17.6dB&quot;,&quot;+18.0dB&quot;,&quot;+18.3dB&quot;,&quot;+18.7dB&quot;,&quot;+19.1dB&quot;,&quot;+19.5dB&quot;,&quot;+19.8dB&quot;,&quot;+20.2dB&quot;,&quot;+20.6dB&quot;,&quot;+21.0dB&quot;,&quot;+21.3dB&quot;,&quot;+21.7dB&quot;,&quot;+22.1dB&quot;,&quot;+22.5dB&quot;,&quot;+22.8dB&quot;,&quot;+23.2dB&quot;,&quot;+23.6dB&quot;}&#13;&#10;lowpass  = {&quot;57hz&quot;,&quot;59hz&quot;,&quot;61hz&quot;,&quot;63hz&quot;,&quot;65hz&quot;,&quot;67hz&quot;,&quot;69hz&quot;,&quot;71hz&quot;,&quot;73hz&quot;,&quot;75hz&quot;,&quot;77hz&quot;,&quot;79hz&quot;,&quot;81hz&quot;,&quot;83hz&quot;,&quot;85hz&quot;,&quot;87hz&quot;,&quot;89hz&quot;,&quot;91hz&quot;,&quot;93hz&quot;,&quot;96hz&quot;,&quot;99hz&quot;,&quot;102hz&quot;,&quot;105hz&quot;,&quot;108hz&quot;,&quot;111hz&quot;,&quot;114hz&quot;,&quot;117hz&quot;,&quot;120hz&quot;,&quot;123hz&quot;,&quot;126hz&quot;,&quot;129hz&quot;,&quot;132hz&quot;,&quot;135hz&quot;,&quot;138hz&quot;,&quot;142hz&quot;,&quot;146hz&quot;,&quot;150hz&quot;,&quot;154hz&quot;,&quot;158hz&quot;,&quot;162hz&quot;,&quot;166hz&quot;,&quot;170hz&quot;,&quot;174hz&quot;,&quot;178hz&quot;,&quot;182hz&quot;,&quot;186hz&quot;,&quot;191hz&quot;,&quot;196hz&quot;,&quot;201hz&quot;,&quot;206hz&quot;,&quot;211hz&quot;,&quot;216hz&quot;,&quot;221hz&quot;,&quot;226hz&quot;,&quot;231hz&quot;,&quot;237hz&quot;,&quot;243hz&quot;,&quot;249hz&quot;,&quot;255hz&quot;,&quot;261hz&quot;,&quot;267hz&quot;,&quot;273hz&quot;,&quot;280hz&quot;,&quot;287hz&quot;,&quot;294hz&quot;,&quot;301hz&quot;,&quot;308hz&quot;,&quot;315hz&quot;,&quot;322hz&quot;,&quot;330hz&quot;,&quot;338hz&quot;,&quot;346hz&quot;,&quot;354hz&quot;,&quot;362hz&quot;,&quot;370hz&quot;,&quot;379hz&quot;,&quot;388hz&quot;,&quot;397hz&quot;,&quot;406hz&quot;,&quot;415hz&quot;,&quot;425hz&quot;,&quot;435hz&quot;,&quot;445hz&quot;,&quot;455hz&quot;,&quot;466hz&quot;,&quot;477hz&quot;,&quot;488hz&quot;,&quot;499hz&quot;,&quot;510hz&quot;,&quot;522hz&quot;,&quot;534hz&quot;,&quot;546hz&quot;,&quot;558hz&quot;,&quot;571hz&quot;,&quot;584hz&quot;,&quot;597hz&quot;,&quot;611hz&quot;,&quot;625hz&quot;,&quot;639hz&quot;,&quot;654hz&quot;,&quot;669hz&quot;,&quot;684hz&quot;,&quot;700hz&quot;,&quot;716hz&quot;,&quot;732hz&quot;,&quot;749hz&quot;,&quot;766hz&quot;,&quot;783hz&quot;,&quot;801hz&quot;,&quot;819hz&quot;,&quot;837hz&quot;,&quot;856hz&quot;,&quot;875hz&quot;,&quot;895hz&quot;,&quot;915hz&quot;,&quot;936hz&quot;,&quot;957hz&quot;,&quot;979hz&quot;,&quot;1001hz&quot;,&quot;1023hz&quot;,&quot;1046hz&quot;,&quot;1069hz&quot;,&quot;1093hz&quot;,&quot;1117hz&quot;,&quot;1142hz&quot;,&quot;1168hz&quot;,&quot;1194hz&quot;,&quot;1221hz&quot;,&quot;1248hz&quot;,&quot;1276hz&quot;,&quot;1305hz&quot;,&quot;1334hz&quot;,&quot;1364hz&quot;,&quot;1394hz&quot;,&quot;1425hz&quot;,&quot;1457hz&quot;,&quot;1489hz&quot;,&quot;1522hz&quot;,&quot;1556hz&quot;,&quot;1591hz&quot;,&quot;1626hz&quot;,&quot;1662hz&quot;,&quot;1699hz&quot;,&quot;1737hz&quot;,&quot;1776hz&quot;,&quot;1815hz&quot;,&quot;1855hz&quot;,&quot;1896hz&quot;,&quot;1938hz&quot;,&quot;1981hz&quot;,&quot;2025hz&quot;,&quot;2070hz&quot;,&quot;2116hz&quot;,&quot;2163hz&quot;,&quot;2211hz&quot;,&quot;2260hz&quot;,&quot;2310hz&quot;,&quot;2361hz&quot;,&quot;2413hz&quot;,&quot;2467hz&quot;,&quot;2522hz&quot;,&quot;2578hz&quot;,&quot;2635hz&quot;,&quot;2693hz&quot;,&quot;2753hz&quot;,&quot;2814hz&quot;,&quot;2876hz&quot;,&quot;2940hz&quot;,&quot;3005hz&quot;,&quot;3071hz&quot;,&quot;3139hz&quot;,&quot;3208hz&quot;,&quot;3279hz&quot;,&quot;3352hz&quot;,&quot;3426hz&quot;,&quot;3502hz&quot;,&quot;3579hz&quot;,&quot;3658hz&quot;,&quot;3739hz&quot;,&quot;3822hz&quot;,&quot;3906hz&quot;,&quot;3992hz&quot;,&quot;4080hz&quot;,&quot;4170hz&quot;,&quot;4262hz&quot;,&quot;4356hz&quot;,&quot;4452hz&quot;,&quot;4550hz&quot;,&quot;4650hz&quot;,&quot;4753hz&quot;,&quot;4858hz&quot;,&quot;4965hz&quot;,&quot;5075hz&quot;,&quot;5187hz&quot;,&quot;5301hz&quot;,&quot;5418hz&quot;,&quot;5537hz&quot;,&quot;5659hz&quot;,&quot;5784hz&quot;,&quot;5912hz&quot;,&quot;6042hz&quot;,&quot;6175hz&quot;,&quot;6311hz&quot;,&quot;6450hz&quot;,&quot;6592hz&quot;,&quot;6737hz&quot;,&quot;6885hz&quot;,&quot;7037hz&quot;,&quot;7192hz&quot;,&quot;7350hz&quot;,&quot;7512hz&quot;,&quot;7677hz&quot;,&quot;7846hz&quot;,&quot;8019hz&quot;,&quot;8196hz&quot;,&quot;8376hz&quot;,&quot;8560hz&quot;,&quot;8748hz&quot;,&quot;8941hz&quot;,&quot;9138hz&quot;,&quot;9339hz&quot;,&quot;9545hz&quot;,&quot;9755hz&quot;,&quot;9970hz&quot;,&quot;10189hz&quot;,&quot;10413hz&quot;,&quot;10642hz&quot;,&quot;10876hz&quot;,&quot;11115hz&quot;,&quot;11360hz&quot;,&quot;11610hz&quot;,&quot;11865hz&quot;,&quot;12126hz&quot;,&quot;12393hz&quot;,&quot;12666hz&quot;,&quot;12945hz&quot;,&quot;13230hz&quot;,&quot;13521hz&quot;,&quot;13818hz&quot;,&quot;14122hz&quot;,&quot;14433hz&quot;,&quot;14750hz&quot;,&quot;15074hz&quot;,&quot;15405hz&quot;,&quot;15744hz&quot;,&quot;16090hz&quot;,&quot;16444hz&quot;,&quot;16806hz&quot;,&quot;17176hz&quot;,&quot;17554hz&quot;,&quot;17940hz&quot;,&quot;18334hz&quot;,&quot;18737hz&quot;,&quot;19149hz&quot;,&quot;19570hz&quot;,&quot;20000hz&quot;}&#13;&#10;highpass = {&quot;69hz&quot;,&quot;71hz&quot;,&quot;73hz&quot;,&quot;75hz&quot;,&quot;77hz&quot;,&quot;79hz&quot;,&quot;81hz&quot;,&quot;83hz&quot;,&quot;85hz&quot;,&quot;87hz&quot;,&quot;89hz&quot;,&quot;91hz&quot;,&quot;93hz&quot;,&quot;95hz&quot;,&quot;97hz&quot;,&quot;100hz&quot;,&quot;103hz&quot;,&quot;106hz&quot;,&quot;109hz&quot;,&quot;112hz&quot;,&quot;115hz&quot;,&quot;118hz&quot;,&quot;121hz&quot;,&quot;124hz&quot;,&quot;127hz&quot;,&quot;130hz&quot;,&quot;133hz&quot;,&quot;136hz&quot;,&quot;139hz&quot;,&quot;142hz&quot;,&quot;145hz&quot;,&quot;149hz&quot;,&quot;153hz&quot;,&quot;157hz&quot;,&quot;161hz&quot;,&quot;165hz&quot;,&quot;169hz&quot;,&quot;173hz&quot;,&quot;177hz&quot;,&quot;181hz&quot;,&quot;185hz&quot;,&quot;189hz&quot;,&quot;193hz&quot;,&quot;198hz&quot;,&quot;203hz&quot;,&quot;208hz&quot;,&quot;213hz&quot;,&quot;218hz&quot;,&quot;223hz&quot;,&quot;228hz&quot;,&quot;233hz&quot;,&quot;238hz&quot;,&quot;244hz&quot;,&quot;250hz&quot;,&quot;256hz&quot;,&quot;262hz&quot;,&quot;268hz&quot;,&quot;274hz&quot;,&quot;280hz&quot;,&quot;286hz&quot;,&quot;292hz&quot;,&quot;299hz&quot;,&quot;306hz&quot;,&quot;313hz&quot;,&quot;320hz&quot;,&quot;327hz&quot;,&quot;334hz&quot;,&quot;342hz&quot;,&quot;350hz&quot;,&quot;358hz&quot;,&quot;366hz&quot;,&quot;374hz&quot;,&quot;382hz&quot;,&quot;390hz&quot;,&quot;399hz&quot;,&quot;408hz&quot;,&quot;417hz&quot;,&quot;426hz&quot;,&quot;435hz&quot;,&quot;445hz&quot;,&quot;455hz&quot;,&quot;465hz&quot;,&quot;475hz&quot;,&quot;485hz&quot;,&quot;496hz&quot;,&quot;507hz&quot;,&quot;518hz&quot;,&quot;529hz&quot;,&quot;541hz&quot;,&quot;553hz&quot;,&quot;565hz&quot;,&quot;577hz&quot;,&quot;590hz&quot;,&quot;603hz&quot;,&quot;616hz&quot;,&quot;629hz&quot;,&quot;643hz&quot;,&quot;657hz&quot;,&quot;671hz&quot;,&quot;686hz&quot;,&quot;701hz&quot;,&quot;716hz&quot;,&quot;732hz&quot;,&quot;748hz&quot;,&quot;764hz&quot;,&quot;780hz&quot;,&quot;797hz&quot;,&quot;814hz&quot;,&quot;832hz&quot;,&quot;850hz&quot;,&quot;868hz&quot;,&quot;887hz&quot;,&quot;906hz&quot;,&quot;925hz&quot;,&quot;945hz&quot;,&quot;965hz&quot;,&quot;986hz&quot;,&quot;1007hz&quot;,&quot;1029hz&quot;,&quot;1051hz&quot;,&quot;1074hz&quot;,&quot;1097hz&quot;,&quot;1120hz&quot;,&quot;1144hz&quot;,&quot;1168hz&quot;,&quot;1193hz&quot;,&quot;1218hz&quot;,&quot;1244hz&quot;,&quot;1271hz&quot;,&quot;1298hz&quot;,&quot;1326hz&quot;,&quot;1354hz&quot;,&quot;1383hz&quot;,&quot;1412hz&quot;,&quot;1442hz&quot;,&quot;1473hz&quot;,&quot;1504hz&quot;,&quot;1536hz&quot;,&quot;1569hz&quot;,&quot;1602hz&quot;,&quot;1636hz&quot;,&quot;1671hz&quot;,&quot;1707hz&quot;,&quot;1743hz&quot;,&quot;1780hz&quot;,&quot;1818hz&quot;,&quot;1857hz&quot;,&quot;1896hz&quot;,&quot;1936hz&quot;,&quot;1977hz&quot;,&quot;2019hz&quot;,&quot;2062hz&quot;,&quot;2106hz&quot;,&quot;2151hz&quot;,&quot;2197hz&quot;,&quot;2244hz&quot;,&quot;2292hz&quot;,&quot;2341hz&quot;,&quot;2391hz&quot;,&quot;2442hz&quot;,&quot;2494hz&quot;,&quot;2547hz&quot;,&quot;2601hz&quot;,&quot;2656hz&quot;,&quot;2712hz&quot;,&quot;2769hz&quot;,&quot;2827hz&quot;,&quot;2887hz&quot;,&quot;2948hz&quot;,&quot;3010hz&quot;,&quot;3074hz&quot;,&quot;3139hz&quot;,&quot;3205hz&quot;,&quot;3273hz&quot;,&quot;3342hz&quot;,&quot;3412hz&quot;,&quot;3484hz&quot;,&quot;3557hz&quot;,&quot;3632hz&quot;,&quot;3709hz&quot;,&quot;3787hz&quot;,&quot;3867hz&quot;,&quot;3948hz&quot;,&quot;4031hz&quot;,&quot;4116hz&quot;,&quot;4203hz&quot;,&quot;4292hz&quot;,&quot;4382hz&quot;,&quot;4474hz&quot;,&quot;4568hz&quot;,&quot;4664hz&quot;,&quot;4762hz&quot;,&quot;4862hz&quot;,&quot;4964hz&quot;,&quot;5068hz&quot;,&quot;5175hz&quot;,&quot;5284hz&quot;,&quot;5395hz&quot;,&quot;5508hz&quot;,&quot;5624hz&quot;,&quot;5742hz&quot;,&quot;5863hz&quot;,&quot;5986hz&quot;,&quot;6112hz&quot;,&quot;6240hz&quot;,&quot;6371hz&quot;,&quot;6505hz&quot;,&quot;6642hz&quot;,&quot;6782hz&quot;,&quot;6925hz&quot;,&quot;7070hz&quot;,&quot;7219hz&quot;,&quot;7371hz&quot;,&quot;7526hz&quot;,&quot;7684hz&quot;,&quot;7845hz&quot;,&quot;8010hz&quot;,&quot;8178hz&quot;,&quot;8350hz&quot;,&quot;8525hz&quot;,&quot;8704hz&quot;,&quot;8887hz&quot;,&quot;9074hz&quot;,&quot;9264hz&quot;,&quot;9458hz&quot;,&quot;9657hz&quot;,&quot;9860hz&quot;,&quot;10067hz&quot;,&quot;10278hz&quot;,&quot;10494hz&quot;,&quot;10714hz&quot;,&quot;10939hz&quot;,&quot;11169hz&quot;,&quot;11403hz&quot;,&quot;11642hz&quot;,&quot;11886hz&quot;,&quot;12135hz&quot;,&quot;12390hz&quot;,&quot;12650hz&quot;,&quot;12915hz&quot;,&quot;13186hz&quot;,&quot;13463hz&quot;,&quot;13745hz&quot;,&quot;14033hz&quot;,&quot;14327hz&quot;,&quot;14627hz&quot;,&quot;14934hz&quot;,&quot;15247hz&quot;,&quot;15567hz&quot;,&quot;15893hz&quot;,&quot;16226hz&quot;,&quot;16566hz&quot;,&quot;16913hz&quot;,&quot;17268hz&quot;,&quot;17630hz&quot;,&quot;18000hz&quot;}&#13;&#10;bandpass = {&quot;57hz&quot;,&quot;59hz&quot;,&quot;61hz&quot;,&quot;63hz&quot;,&quot;65hz&quot;,&quot;67hz&quot;,&quot;69hz&quot;,&quot;71hz&quot;,&quot;73hz&quot;,&quot;75hz&quot;,&quot;77hz&quot;,&quot;79hz&quot;,&quot;81hz&quot;,&quot;83hz&quot;,&quot;85hz&quot;,&quot;87hz&quot;,&quot;89hz&quot;,&quot;91hz&quot;,&quot;93hz&quot;,&quot;95hz&quot;,&quot;97hz&quot;,&quot;99hz&quot;,&quot;101hz&quot;,&quot;103hz&quot;,&quot;105hz&quot;,&quot;107hz&quot;,&quot;110hz&quot;,&quot;113hz&quot;,&quot;116hz&quot;,&quot;119hz&quot;,&quot;122hz&quot;,&quot;125hz&quot;,&quot;128hz&quot;,&quot;131hz&quot;,&quot;134hz&quot;,&quot;137hz&quot;,&quot;140hz&quot;,&quot;143hz&quot;,&quot;146hz&quot;,&quot;149hz&quot;,&quot;152hz&quot;,&quot;155hz&quot;,&quot;158hz&quot;,&quot;162hz&quot;,&quot;166hz&quot;,&quot;170hz&quot;,&quot;174hz&quot;,&quot;178hz&quot;,&quot;182hz&quot;,&quot;186hz&quot;,&quot;190hz&quot;,&quot;194hz&quot;,&quot;198hz&quot;,&quot;202hz&quot;,&quot;206hz&quot;,&quot;210hz&quot;,&quot;214hz&quot;,&quot;219hz&quot;,&quot;224hz&quot;,&quot;229hz&quot;,&quot;234hz&quot;,&quot;239hz&quot;,&quot;244hz&quot;,&quot;249hz&quot;,&quot;254hz&quot;,&quot;259hz&quot;,&quot;264hz&quot;,&quot;269hz&quot;,&quot;275hz&quot;,&quot;281hz&quot;,&quot;287hz&quot;,&quot;293hz&quot;,&quot;299hz&quot;,&quot;305hz&quot;,&quot;311hz&quot;,&quot;317hz&quot;,&quot;323hz&quot;,&quot;330hz&quot;,&quot;337hz&quot;,&quot;344hz&quot;,&quot;351hz&quot;,&quot;358hz&quot;,&quot;365hz&quot;,&quot;372hz&quot;,&quot;380hz&quot;,&quot;388hz&quot;,&quot;396hz&quot;,&quot;404hz&quot;,&quot;412hz&quot;,&quot;420hz&quot;,&quot;428hz&quot;,&quot;437hz&quot;,&quot;446hz&quot;,&quot;455hz&quot;,&quot;464hz&quot;,&quot;473hz&quot;,&quot;482hz&quot;,&quot;492hz&quot;,&quot;502hz&quot;,&quot;512hz&quot;,&quot;522hz&quot;,&quot;532hz&quot;,&quot;543hz&quot;,&quot;554hz&quot;,&quot;565hz&quot;,&quot;576hz&quot;,&quot;587hz&quot;,&quot;599hz&quot;,&quot;611hz&quot;,&quot;623hz&quot;,&quot;635hz&quot;,&quot;648hz&quot;,&quot;661hz&quot;,&quot;674hz&quot;,&quot;687hz&quot;,&quot;700hz&quot;,&quot;714hz&quot;,&quot;728hz&quot;,&quot;742hz&quot;,&quot;757hz&quot;,&quot;772hz&quot;,&quot;787hz&quot;,&quot;802hz&quot;,&quot;818hz&quot;,&quot;834hz&quot;,&quot;850hz&quot;,&quot;867hz&quot;,&quot;884hz&quot;,&quot;901hz&quot;,&quot;919hz&quot;,&quot;937hz&quot;,&quot;955hz&quot;,&quot;974hz&quot;,&quot;993hz&quot;,&quot;1012hz&quot;,&quot;1032hz&quot;,&quot;1052hz&quot;,&quot;1072hz&quot;,&quot;1093hz&quot;,&quot;1114hz&quot;,&quot;1136hz&quot;,&quot;1158hz&quot;,&quot;1180hz&quot;,&quot;1203hz&quot;,&quot;1226hz&quot;,&quot;1250hz&quot;,&quot;1274hz&quot;,&quot;1299hz&quot;,&quot;1324hz&quot;,&quot;1350hz&quot;,&quot;1376hz&quot;,&quot;1403hz&quot;,&quot;1430hz&quot;,&quot;1458hz&quot;,&quot;1486hz&quot;,&quot;1515hz&quot;,&quot;1544hz&quot;,&quot;1574hz&quot;,&quot;1604hz&quot;,&quot;1635hz&quot;,&quot;1666hz&quot;,&quot;1698hz&quot;,&quot;1731hz&quot;,&quot;1764hz&quot;,&quot;1798hz&quot;,&quot;1833hz&quot;,&quot;1868hz&quot;,&quot;1904hz&quot;,&quot;1941hz&quot;,&quot;1978hz&quot;,&quot;2016hz&quot;,&quot;2055hz&quot;,&quot;2094hz&quot;,&quot;2134hz&quot;,&quot;2175hz&quot;,&quot;2217hz&quot;,&quot;2259hz&quot;,&quot;2302hz&quot;,&quot;2346hz&quot;,&quot;2391hz&quot;,&quot;2437hz&quot;,&quot;2484hz&quot;,&quot;2531hz&quot;,&quot;2579hz&quot;,&quot;2628hz&quot;,&quot;2678hz&quot;,&quot;1729hz&quot;,&quot;2781hz&quot;,&quot;2834hz&quot;,&quot;2888hz&quot;,&quot;2943hz&quot;,&quot;2999hz&quot;,&quot;3056hz&quot;,&quot;3114hz&quot;,&quot;3173hz&quot;,&quot;3233hz&quot;,&quot;3295hz&quot;,&quot;3358hz&quot;,&quot;3422hz&quot;,&quot;3487hz&quot;,&quot;3553hz&quot;,&quot;3621hz&quot;,&quot;3690hz&quot;,&quot;3760hz&quot;,&quot;3832hz&quot;,&quot;3905hz&quot;,&quot;3979hz&quot;,&quot;4055hz&quot;,&quot;4132hz&quot;,&quot;4211hz&quot;,&quot;4291hz&quot;,&quot;4373hz&quot;,&quot;4456hz&quot;,&quot;4541hz&quot;,&quot;4627hz&quot;,&quot;4715hz&quot;,&quot;4805hz&quot;,&quot;4896hz&quot;,&quot;4989hz&quot;,&quot;5084hz&quot;,&quot;5181hz&quot;,&quot;5279hz&quot;,&quot;5379hz&quot;,&quot;5481hz&quot;,&quot;5585hz&quot;,&quot;5691hz&quot;,&quot;5799hz&quot;,&quot;5909hz&quot;,&quot;6021hz&quot;,&quot;6135hz&quot;,&quot;6252hz&quot;,&quot;6371hz&quot;,&quot;6492hz&quot;,&quot;6615hz&quot;,&quot;6741hz&quot;,&quot;6869hz&quot;,&quot;6999hz&quot;,&quot;7132hz&quot;,&quot;7267hz&quot;,&quot;7405hz&quot;,&quot;7545hz&quot;,&quot;7688hz&quot;,&quot;7834hz&quot;,&quot;7983hz&quot;,&quot;8134hz&quot;,&quot;8288hz&quot;,&quot;8445hz&quot;,&quot;8605hz&quot;,&quot;8768hz&quot;,&quot;8934hz&quot;,&quot;9103hz&quot;,&quot;9276hz&quot;,&quot;9452hz&quot;,&quot;9631hz&quot;,&quot;9814hz&quot;,&quot;10000hz&quot;}&#13;&#10;swept    = {&quot;83hz&quot;,&quot;85hz&quot;,&quot;87hz&quot;,&quot;89hz&quot;,&quot;91hz&quot;,&quot;93hz&quot;,&quot;95hz&quot;,&quot;97hz&quot;,&quot;99hz&quot;,&quot;101hz&quot;,&quot;103hz&quot;,&quot;105hz&quot;,&quot;107hz&quot;,&quot;109hz&quot;,&quot;111hz&quot;,&quot;113hz&quot;,&quot;116hz&quot;,&quot;119hz&quot;,&quot;122hz&quot;,&quot;125hz&quot;,&quot;128hz&quot;,&quot;131hz&quot;,&quot;134hz&quot;,&quot;137hz&quot;,&quot;140hz&quot;,&quot;143hz&quot;,&quot;146hz&quot;,&quot;149hz&quot;,&quot;152hz&quot;,&quot;155hz&quot;,&quot;158hz&quot;,&quot;161hz&quot;,&quot;164hz&quot;,&quot;167hz&quot;,&quot;170hz&quot;,&quot;174hz&quot;,&quot;178hz&quot;,&quot;182hz&quot;,&quot;186hz&quot;,&quot;190hz&quot;,&quot;194hz&quot;,&quot;198hz&quot;,&quot;202hz&quot;,&quot;206hz&quot;,&quot;210hz&quot;,&quot;214hz&quot;,&quot;218hz&quot;,&quot;222hz&quot;,&quot;226hz&quot;,&quot;231hz&quot;,&quot;236hz&quot;,&quot;241hz&quot;,&quot;246hz&quot;,&quot;251hz&quot;,&quot;256hz&quot;,&quot;261hz&quot;,&quot;266hz&quot;,&quot;271hz&quot;,&quot;276hz&quot;,&quot;281hz&quot;,&quot;287hz&quot;,&quot;293hz&quot;,&quot;299hz&quot;,&quot;305hz&quot;,&quot;311hz&quot;,&quot;317hz&quot;,&quot;323hz&quot;,&quot;329hz&quot;,&quot;335hz&quot;,&quot;342hz&quot;,&quot;349hz&quot;,&quot;356hz&quot;,&quot;363hz&quot;,&quot;370hz&quot;,&quot;377hz&quot;,&quot;384hz&quot;,&quot;391hz&quot;,&quot;399hz&quot;,&quot;407hz&quot;,&quot;415hz&quot;,&quot;423hz&quot;,&quot;431hz&quot;,&quot;439hz&quot;,&quot;447hz&quot;,&quot;455hz&quot;,&quot;464hz&quot;,&quot;473hz&quot;,&quot;482hz&quot;,&quot;491hz&quot;,&quot;500hz&quot;,&quot;509hz&quot;,&quot;519hz&quot;,&quot;529hz&quot;,&quot;539hz&quot;,&quot;549hz&quot;,&quot;559hz&quot;,&quot;570hz&quot;,&quot;581hz&quot;,&quot;592hz&quot;,&quot;603hz&quot;,&quot;614hz&quot;,&quot;625hz&quot;,&quot;637hz&quot;,&quot;649hz&quot;,&quot;661hz&quot;,&quot;673hz&quot;,&quot;686hz&quot;,&quot;699hz&quot;,&quot;712hz&quot;,&quot;725hz&quot;,&quot;738hz&quot;,&quot;752hz&quot;,&quot;766hz&quot;,&quot;780hz&quot;,&quot;794hz&quot;,&quot;809hz&quot;,&quot;824hz&quot;,&quot;839hz&quot;,&quot;855hz&quot;,&quot;871hz&quot;,&quot;887hz&quot;,&quot;903hz&quot;,&quot;920hz&quot;,&quot;937hz&quot;,&quot;954hz&quot;,&quot;972hz&quot;,&quot;990hz&quot;,&quot;1008hz&quot;,&quot;1027hz&quot;,&quot;1046hz&quot;,&quot;1065hz&quot;,&quot;1085hz&quot;,&quot;1105hz&quot;,&quot;1125hz&quot;,&quot;1146hz&quot;,&quot;1167hz&quot;,&quot;1183hz&quot;,&quot;1210hz&quot;,&quot;1232hz&quot;,&quot;1255hz&quot;,&quot;1278hz&quot;,&quot;1301hz&quot;,&quot;1325hz&quot;,&quot;1349hz&quot;,&quot;1374hz&quot;,&quot;1399hz&quot;,&quot;1425hz&quot;,&quot;1451hz&quot;,&quot;1477hz&quot;,&quot;1504hz&quot;,&quot;1531hz&quot;,&quot;1559hz&quot;,&quot;1587hz&quot;,&quot;1616hz&quot;,&quot;1645hz&quot;,&quot;1675hz&quot;,&quot;1705hz&quot;,&quot;1736hz&quot;,&quot;1768hz&quot;,&quot;1800hz&quot;,&quot;1833hz&quot;,&quot;1866hz&quot;,&quot;1900hz&quot;,&quot;1934hz&quot;,&quot;1969hz&quot;,&quot;2005hz&quot;,&quot;2041hz&quot;,&quot;2078hz&quot;,&quot;2116hz&quot;,&quot;2154hz&quot;,&quot;2193hz&quot;,&quot;2233hz&quot;,&quot;2273hz&quot;,&quot;2314hz&quot;,&quot;2356hz&quot;,&quot;2399hz&quot;,&quot;2442hz&quot;,&quot;2486hz&quot;,&quot;2531hz&quot;,&quot;2577hz&quot;,&quot;2624hz&quot;,&quot;2671hz&quot;,&quot;2719hz&quot;,&quot;2768hz&quot;,&quot;2818hz&quot;,&quot;2869hz&quot;,&quot;2921hz&quot;,&quot;2974hz&quot;,&quot;3028hz&quot;,&quot;3083hz&quot;,&quot;3139hz&quot;,&quot;3196hz&quot;,&quot;3254hz&quot;,&quot;3313hz&quot;,&quot;3373hz&quot;,&quot;3434hz&quot;,&quot;3496hz&quot;,&quot;3559hz&quot;,&quot;3623hz&quot;,&quot;3688hz&quot;,&quot;3754hz&quot;,&quot;3822hz&quot;,&quot;3891hz&quot;,&quot;3961hz&quot;,&quot;4032hz&quot;,&quot;4105hz&quot;,&quot;4179hz&quot;,&quot;4254hz&quot;,&quot;4331hz&quot;,&quot;4409hz&quot;,&quot;4488hz&quot;,&quot;4569hz&quot;,&quot;4651hz&quot;,&quot;4735hz&quot;,&quot;4820hz&quot;,&quot;4907hz&quot;,&quot;4995hz&quot;,&quot;5085hz&quot;,&quot;5177hz&quot;,&quot;5270hz&quot;,&quot;5365hz&quot;,&quot;5461hz&quot;,&quot;5559hz&quot;,&quot;5659hz&quot;,&quot;5761hz&quot;,&quot;5865hz&quot;,&quot;5970hz&quot;,&quot;6077hz&quot;,&quot;6186hz&quot;,&quot;6297hz&quot;,&quot;6410hz&quot;,&quot;6525hz&quot;,&quot;6642hz&quot;,&quot;6761hz&quot;,&quot;6882hz&quot;,&quot;7006hz&quot;,&quot;7132hz&quot;,&quot;7260hz&quot;,&quot;7390hz&quot;,&quot;7523hz&quot;,&quot;7658hz&quot;,&quot;7796hz&quot;,&quot;7936hz&quot;,&quot;8078hz&quot;,&quot;8223hz&quot;,&quot;8371hz&quot;,&quot;8521hz&quot;,&quot;8674hz&quot;,&quot;8830hz&quot;,&quot;8989hz&quot;,&quot;9150hz&quot;,&quot;9314hz&quot;,&quot;9481hz&quot;,&quot;9651hz&quot;,&quot;9824hz&quot;,&quot;10000hz&quot;}&#13;&#10;&#13;&#10;-- for custom value component contents&#13;&#10;&#13;&#10;lpCompArray = &quot;57hz=0\n59hz=1\n61hz=2\n63hz=3\n65hz=4\n67hz=5\n69hz=6\n71hz=7\n73hz=8\n75hz=9\n77hz=10\n79hz=11\n81hz=12\n83hz=13\n85hz=14\n87hz=15\n89hz=16\n91hz=17\n93hz=18\n96hz=19\n99hz=20\n102hz=21\n105hz=22\n108hz=23\n111hz=24\n114hz=25\n117hz=26\n120hz=27\n123hz=28\n126hz=29\n129hz=30\n132hz=31\n135hz=32\n138hz=33\n142hz=34\n146hz=35\n150hz=36\n154hz=37\n158hz=38\n162hz=39\n166hz=40\n170hz=41\n174hz=42\n178hz=43\n182hz=44\n186hz=45\n191hz=46\n196hz=47\n201hz=48\n206hz=49\n211hz=50\n216hz=51\n221hz=52\n226hz=53\n231hz=54\n237hz=55\n243hz=56\n249hz=57\n255hz=58\n261hz=59\n267hz=60\n273hz=61\n280hz=62\n287hz=63\n294hz=64\n301hz=65\n308hz=66\n315hz=67\n322hz=68\n330hz=69\n338hz=70\n346hz=71\n354hz=72\n362hz=73\n370hz=74\n379hz=75\n388hz=76\n397hz=77\n406hz=78\n415hz=79\n425hz=80\n435hz=81\n445hz=82\n455hz=83\n466hz=84\n477hz=85\n488hz=86\n499hz=87\n510hz=88\n522hz=89\n534hz=90\n546hz=91\n558hz=92\n571hz=93\n584hz=94\n597hz=95\n611hz=96\n625hz=97\n639hz=98\n654hz=99\n669hz=100\n684hz=101\n700hz=102\n716hz=103\n732hz=104\n749hz=105\n766hz=106\n783hz=107\n801hz=108\n819hz=109\n837hz=110\n856hz=111\n875hz=112\n895hz=113\n915hz=114\n936hz=115\n957hz=116\n979hz=117\n1001hz=118\n1023hz=119\n1046hz=120\n1069hz=121\n1093hz=122\n1117hz=123\n1142hz=124\n1168hz=125\n1194hz=126\n1221hz=127\n1248hz=128\n1276hz=129\n1305hz=130\n1334hz=131\n1364hz=132\n1394hz=133\n1425hz=134\n1457hz=135\n1489hz=136\n1522hz=137\n1556hz=138\n1591hz=139\n1626hz=140\n1662hz=141\n1699hz=142\n1737hz=143\n1776hz=144\n1815hz=145\n1855hz=146\n1896hz=147\n1938hz=148\n1981hz=149\n2025hz=150\n2070hz=151\n2116hz=152\n2163hz=153\n2211hz=154\n2260hz=155\n2310hz=156\n2361hz=157\n2413hz=158\n2467hz=159\n2522hz=160\n2578hz=161\n2635hz=162\n2693hz=163\n2753hz=164\n2814hz=165\n2876hz=166\n2940hz=167\n3005hz=168\n3071hz=169\n3139hz=170\n3208hz=171\n3279hz=172\n3352hz=173\n3426hz=174\n3502hz=175\n3579hz=176\n3658hz=177\n3739hz=178\n3822hz=179\n3906hz=180\n3992hz=181\n4080hz=182\n4170hz=183\n4262hz=184\n4356hz=185\n4452hz=186\n4550hz=187\n4650hz=188\n4753hz=189\n4858hz=190\n4965hz=191\n5075hz=192\n5187hz=193\n5301hz=194\n5418hz=195\n5537hz=196\n5659hz=197\n5784hz=198\n5912hz=199\n6042hz=200\n6175hz=201\n6311hz=202\n6450hz=203\n6592hz=204\n6737hz=205\n6885hz=206\n7037hz=207\n7192hz=208\n7350hz=209\n7512hz=210\n7677hz=211\n7846hz=212\n8019hz=213\n8196hz=214\n8376hz=215\n8560hz=216\n8748hz=217\n8941hz=218\n9138hz=219\n9339hz=220\n9545hz=221\n9755hz=222\n9970hz=223\n10189hz=224\n10413hz=225\n10642hz=226\n10876hz=227\n11115hz=228\n11360hz=229\n11610hz=230\n11865hz=231\n12126hz=232\n12393hz=233\n12666hz=234\n12945hz=235\n13230hz=236\n13521hz=237\n13818hz=238\n14122hz=239\n14433hz=240\n14750hz=241\n15074hz=242\n15405hz=243\n15744hz=244\n16090hz=245\n16444hz=246\n16806hz=247\n17176hz=248\n17554hz=249\n17940hz=250\n18334hz=251\n18737hz=252\n19149hz=253\n19570hz=254\n20000hz=255&quot;&#13;&#10;resArray    = &quot;0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127&quot;&#13;&#10;dbArray     = &quot;-24dB=0\n-23.7dB=1\n-23.3dB=2\n-22.9dB=3\n-22.5dB=4\n-22.2dB=5\n-21.8dB=6\n-21.4dB=7\n-21.0dB=8\n-20.7dB=9\n-20.3dB=10\n-19.9dB=11\n-19.5dB=12\n-19.2dB=13\n-18.8dB=14\n-18.4dB=15\n-18.0dB=16\n-17.7dB=17\n-17.3dB=18\n-16.9dB=19\n-16.5dB=20\n-16.2dB=21\n-15.8dB=22\n-15.4dB=23\n-15.0dB=24\n-14.7dB=25\n-14.3dB=26\n-13.9dB=27\n-13.5dB=28\n-13.2dB=29\n-12.8dB=30\n-12.4dB=31\n-12.0dB=32\n-11.7dB=33\n-11.3dB=34\n-10.9dB=35\n-10.5dB=36\n-10.2dB=37\n-9.8dB=38\n-9.4dB=39\n-9.0dB=40\n-8.7dB=41\n-8.3dB=42\n-7.9dB=43\n-7.5dB=44\n-7.2dB=45\n-6.8dB=46\n-6.4dB=47\n-6.0dB=48\n-5.7dB=49\n-5.3dB=50\n-4.9dB=51\n-4.5dB=52\n-4.2dB=53\n-3.8dB=54\n-3.4dB=55\n-3.0dB=56\n-2.7dB=57\n-2.3dB=58\n-1.9dB=59\n-1.5dB=60\n-1.2dB=61\n-0.8dB=62\n-0.4dB=63\n0.0dB=64\n+0.3dB=65\n+0.7dB=66\n+1.1dB=67\n+1.5dB=68\n+1.8dB=69\n+2.2dB=70\n+2.6dB=71\n+3.0dB=72\n+3.3dB=73\n+3.7dB=74\n+4.1dB=75\n+4.5dB=76\n+4.8dB=77\n+5.2dB=78\n+5.6dB=79\n+6.0dB=80\n+6.3dB=81\n+6.7dB=82\n+7.1dB=83\n+7.5dB=84\n+7.8dB=85\n+8.2dB=86\n+8.6dB=87\n+9.0dB=88\n+9.3dB=89\n+9.7dB=90\n+10.1dB=91\n+10.5dB=92\n+10.8dB=93\n+11.2dB=94\n+11.6dB=95\n+12.0dB=96\n+12.3dB=97\n+12.7dB=98\n+13.1dB=99\n+13.5dB=100\n+13.8dB=101\n+14.2dB=102\n+14.6dB=103\n+15.0dB=104\n+15.3dB=105\n+15.7dB=106\n+16.1dB=107\n+16.5dB=108\n+16.8dB=109\n+17.2dB=110\n+17.6dB=111\n+18.0dB=112\n+18.3dB=113\n+18.7dB=114\n+19.1dB=115\n+19.5dB=116\n+19.8dB=117\n+20.2dB=118\n+20.6dB=119\n+21.0dB=120\n+21.3dB=121\n+21.7dB=122\n+22.1dB=123\n+22.5dB=124\n+22.8dB=125\n+23.2dB=126\n+23.6dB=127&quot;&#13;&#10;lfoArray&#9;= &quot;0.8=1\n0.11=2\n0.15=3\n0.18=4\n0.21=5\n0.25=6\n0.28=7\n0.32=8\n0.35=9\n0.39=10\n0.42=11\n0.46=12\n0.50=13\n0.54=14\n0.58=15\n0.63=16\n0.67=17\n0.71=18\n0.76=19\n0.80=20\n0.85=21\n0.90=22\n0.94=23\n0.99=24\n1.4=25\n1.10=26\n1.15=27\n1.20=28\n1.25=29\n1.31=30\n1.37=31\n1.42=32\n1.48=33\n1.54=34\n1.60=35\n1.67=36\n1.73=37\n1.79=38\n1.86=39\n1.93=40\n2.0=41\n2.7=42\n2.14=43\n2.21=44\n2.29=45\n2.36=46\n2.44=47\n2.52=48\n2.60=49\n2.68=50\n2.77=51\n2.85=52\n2.94=53\n3.3=54\n3.12=55\n3.21=56\n3.31=57\n3.40=58\n3.50=59\n3.60=60\n3.70=61\n3.81=62\n3.91=63\n4.2=64\n4.13=65\n4.25=66\n4.36=67\n4.48=68\n4.60=69\n4.72=70\n4.84=71\n4.97=72\n5.10=73\n5.23=74\n5.37=75\n5.51=76\n5.65=77\n5.79=78\n5.94=79\n6.8=80\n6.24=81\n6.39=82\n6.55=83\n6.71=84\n6.88=85\n7.4=86\n7.21=87\n7.39=88\n7.57=89\n7.75=90\n7.93=91\n8.12=92\n8.32=93\n8.51=94\n8.71=95\n8.92=96\n9.13=97\n9.34=98\n9.56=99\n9.78=100\n10.=101\n10.23=102\n10.47=103\n10.71=104\n10.95=105\n11.20=106\n11.46=107\n11.71=108\n11.98=109\n12.25=110\n12.52=111\n12.80=112\n13.9=113\n13.38=114\n13.68=115\n13.99=116\n14.30=117\n14.61=118\n14.93=119\n15.26=120\n15.60=121\n15.94=122\n16.29=123\n16.65=124\n17.1=125\n17.38=126\n17.76=127\n18.14=128\n\n&quot;&#13;&#10;&#13;&#10;&#13;&#10;--modulator values -- to be moved to needed scripts&#13;&#10;&#13;&#10;--filter&#13;&#10;&#13;&#10;cutoff = Cutoff:getValue()&#13;&#10;res&#9;   = resonance:getValue()&#13;&#10;&#13;&#10;--preset&#13;&#10;&#13;&#10;&#13;&#10;--populate slider contents functions&#13;&#10;lfoValues()&#13;&#10;FilterGainValues()&#13;&#10;MorphFreqArray()&#13;&#10;&#13;&#10;--init modulators&#13;&#10;--panel:getModulatorByName(&quot;listbox&quot;):getComponent():setProperty(&quot;uiListBoxContent&quot;, &quot;&quot;, true)&#13;&#10;panel:getModulatorByName(&quot;sampleNameLCD&quot;):getComponent():setPropertyString(&quot;uiLabelText&quot;, &quot;&quot;)&#13;&#10;panel:getModulatorByName(&quot;sampleZoneList&quot;):getComponent():setProperty(&quot;uiListBoxContent&quot;, &quot;&quot;, true)&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelLoaded" luaMethodSource="0"
                   uuid="9abd5f1d4672a1515f2ca7aafa0a8ff8" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethod luaMethodName="CopyVoice" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;CopyVoice = function(mod, value)&#13;&#10;&#13;&#10;--Copy a Voice to a new Voice in the Current Preset.&#13;&#10;&#13;&#10;if loaded then&#13;&#10;--EXAMPLE:&gt; {F0h,18h,21h,ddh,55h,22h,xxh,xxh,yyh,yyh,zzh,zzh,ggh,F7h}&#13;&#10;--xxh,xxh = Source Preset (000 -&gt; 999) LSB first&#13;&#10;--yyh,yyh = Source Voice  (0 -&gt; 255) LSB first&#13;&#10;--zzh,zzh = Destination Preset (000 -&gt; 999) LSB first&#13;&#10;--ggh     = Group Number (0 -&gt; 31)&#13;&#10;&#13;&#10;&#13;&#10;local voice = panel:getModulatorByName(&quot;listbox&quot;):getValue()&#13;&#10;local presetNum = panel:getModulatorByName(&quot;presetNumber&quot;):getValue()&#13;&#10;&#13;&#10;local sourceLSB = lsb(presetNum)&#13;&#10;local sourceMSB = msb(presetNum)&#13;&#10;&#13;&#10;local copy = string.format(&quot;f0 18 21 %.2x 55 22 %.2x %.2x %.2x %.2x %.2x %.2x %.2x f7&quot;, devID,sourceLSB,sourceMSB,lsb(voice),msb(voice),sourceLSB,sourceMSB,0 )&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(copy))&#13;&#10;&#13;&#10;-- request preset again to update panel state&#13;&#10;--presetDumpRequest()&#13;end&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="08ef1ad9fd5eee372cd955e4bc967e02" luaMethodValid="1"/>
      <luaMethod luaMethodName="changeSampleName" luaMethodCode="--&#13;-- Called when a modulator value changes&#13;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;-- @value    new numeric value of the modulator&#13;--&#13;changeSampleName = function(mod, value)&#13;&#10;&#13;&#10;--make a dialogwindow to enter a samplename&#13;&#10;&#9;if loaded == true then&#13;&#10;&#13;&#10;&#9;c = panel:getComponent(&quot;sampleNameLCD&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if c ~= nil then&#13;&#10;&#13;&#10;&#9;&#9;textwindow = utils.askForTextInputWindow(&quot;enter sample name&quot;, &quot;Maximum 16 characters,\nextra ones will be discarded.&quot;, &quot;please enter a name&quot;, &quot;&quot;, false, &quot;ok&quot;, &quot;cancel&quot;)&#13;&#10;&#9;&#9;c:setPropertyString(&quot;uiLabelText&quot;, textwindow)&#13;&#10;&#13;&#10;&#13;&#10;console(string.format(&quot;This was typed in the set samplename inputwindow&quot;))&#13;&#10;console(string.format(textwindow))&#13;&#10;--grab characters from texwindow's output (as dec)&#13;&#10;&#13;&#10;&#9;&#9;ch1 = string.byte(textwindow, 1)&#13;&#10;&#9;&#9;ch2 = string.byte(textwindow, 2)&#13;&#10;&#9;&#9;ch3 = string.byte(textwindow, 3)&#13;&#10;&#9;&#9;ch4 = string.byte(textwindow, 4)&#13;&#10;&#9;&#9;ch5 = string.byte(textwindow, 5)&#13;&#10;&#9;&#9;ch6 = string.byte(textwindow, 6)&#13;&#10;&#9;&#9;ch7 = string.byte(textwindow, 7)&#13;&#10;&#9;&#9;ch8 = string.byte(textwindow, 8)&#13;&#10;&#9;&#9;ch9 = string.byte(textwindow, 9)&#13;&#10;&#9;&#9;ch10 = string.byte(textwindow, 10)&#13;&#10;&#9;&#9;ch11 = string.byte(textwindow, 11)&#13;&#10;&#9;&#9;ch12 = string.byte(textwindow, 12)&#13;&#10;&#9;&#9;ch13 = string.byte(textwindow, 13)&#13;&#10;&#9;&#9;ch14 = string.byte(textwindow, 14)&#13;&#10;&#9;&#9;ch15 = string.byte(textwindow, 15)&#13;&#10;&#9;&#9;ch16 = string.byte(textwindow, 16)&#13;&#10;&#13;&#10;--console(string.format(KeyPress()))&#13;&#10;&#13;&#10;--fill empty values with space value to avoid nil value errors = ascii 32 //working&#13;&#10;&#13;&#10;&#9;&#9;&#9;if ch1 == nil then ch1 = 32 end&#13;&#10;&#9;&#9;&#9;if ch2 == nil then ch2 = 32 end&#13;&#10;&#9;&#9;&#9;if ch3 == nil then ch3 = 32 end&#13;&#10;&#9;&#9;&#9;if ch4 == nil then ch4 = 32 end&#13;&#10;&#9;&#9;&#9;if ch5 == nil then ch5 = 32 end&#13;&#10;&#9;&#9;&#9;if ch6 == nil then ch6 = 32 end&#13;&#10;&#9;&#9;&#9;if ch7 == nil then ch7 = 32 end&#13;&#10;&#9;&#9;&#9;if ch8 == nil then ch8 = 32 end&#13;&#10;&#9;&#9;&#9;if ch9 == nil then ch9 = 32 end&#13;&#10;&#9;&#9;&#9;if ch10 == nil then ch10 = 32 end&#13;&#10;&#9;&#9;&#9;if ch11 == nil then ch11 = 32 end&#13;&#10;&#9;&#9;&#9;if ch12 == nil then ch12 = 32 end&#13;&#10;&#9;&#9;&#9;if ch13 == nil then ch13 = 32 end&#13;&#10;&#9;&#9;&#9;if ch14 == nil then ch14 = 32 end&#13;&#10;&#9;&#9;&#9;if ch15 == nil then ch15 = 32 end&#13;&#10;&#9;&#9;&#9;if ch16 == nil then ch16 = 32 end&#13;&#10;--send name command bit = 09 // TODO tie two bits following 09 to sample number selection&#13;&#10;&#9;&#9;&#9;namestr = string.format(&quot;f0 18 21 01 55 09 %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x F7&quot;,sampleNumberMemLSB, sampleNumberMemMSB, ch1,ch2, ch3, ch4, ch5, ch6, ch7, ch8, ch9, ch10, ch11, ch12, ch13, ch14, ch15, ch16)&#13;&#10;&#9;&#9;&#9;console(string.format(namestr))&#13;&#10;&#13;&#10; &#9;&#9;--&#9;&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(namestr))&#13;&#10;&#9;&#9;--&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;--&#9;end&#13;&#10;end&#13;&#10;"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="bae27592fd585aa279dc05ac115c3016" luaMethodValid="1"/>
      <luaMethod luaMethodName="FilterEnvMouseMove" luaMethodCode="--&#13;-- Called when the mouse moves over a component&#13;--&#13;FilterEnvMouseMove = function(comp, event)&#13;&#10;&#13;&#10;--console(string.format(&quot;x=%d y=%d &quot;,event:getScreenX(),event:getScreenY()))&#13;&#10;--what(event)&#13;&#10;&#13;end"
                 luaMethodLinkedProperty="uiCustomMouseMoveCallback" luaMethodSource="0"
                 uuid="8199f77f0bcff29e6ce5d77d87035ba1" luaMethodValid="1"/>
      <luaMethod luaMethodName="sampleLcdEdit" luaMethodCode="--&#13;-- Called when the contents of a Label are changed&#13;-- @label&#13;-- @newContent    a string that the label now contains&#13;--&#13;sampleLcdEdit = function(label, newContent)&#13;&#10;&#13;&#10;textwindow = panel:getModulatorByName(&quot;sampleNameLCD&quot;):getComponent():getComponentProperty(&quot;uiLabelText&quot;)&#13;&#10;&#13;&#10;&#13;&#10;ch1 = string.byte(textwindow, 1)&#13;&#10;ch2 = string.byte(textwindow, 2)&#13;&#10;ch3 = string.byte(textwindow, 3)&#13;&#10;ch4 = string.byte(textwindow, 4)&#13;&#10;ch5 = string.byte(textwindow, 5)&#13;&#10;ch6 = string.byte(textwindow, 6)&#13;&#10;ch7 = string.byte(textwindow, 7)&#13;&#10;ch8 = string.byte(textwindow, 8)&#13;&#10;ch9 = string.byte(textwindow, 9)&#13;&#10;ch10 = string.byte(textwindow, 10)&#13;&#10;ch11 = string.byte(textwindow, 11)&#13;&#10;ch12 = string.byte(textwindow, 12)&#13;&#10;ch13 = string.byte(textwindow, 13)&#13;&#10;ch14 = string.byte(textwindow, 14)&#13;&#10;ch15 = string.byte(textwindow, 15)&#13;&#10;ch16 = string.byte(textwindow, 16)&#13;&#10;&#13;&#10;&#9;if ch1 == nil then ch1 = 32 end&#13;&#10;&#9;if ch2 == nil then ch2 = 32 end&#13;&#10;&#9;if ch3 == nil then ch3 = 32 end&#13;&#10;&#9;if ch4 == nil then ch4 = 32 end&#13;&#10;&#9;if ch5 == nil then ch5 = 32 end&#13;&#10;&#9;if ch6 == nil then ch6 = 32 end&#13;&#10;&#9;if ch7 == nil then ch7 = 32 end&#13;&#10;&#9;if ch8 == nil then ch8 = 32 end&#13;&#10;&#9;if ch9 == nil then ch9 = 32 end&#13;&#10;&#9;if ch10 == nil then ch10 = 32 end&#13;&#10;&#9;if ch11 == nil then ch11 = 32 end&#13;&#10;&#9;if ch12 == nil then ch12 = 32 end&#13;&#10;&#9;if ch13 == nil then ch13 = 32 end&#13;&#10;&#9;if ch14 == nil then ch14 = 32 end&#13;&#10;&#9;if ch15 == nil then ch15 = 32 end&#13;&#10;&#9;if ch16 == nil then ch16 = 32 end&#13;&#10;&#13;&#10;&#13;&#10;--send name command bit = 09 // TODO tie two bits following 09 to sample number selection&#13;&#10;&#9;&#9;&#9;namestr = string.format(&quot;f0 18 21 01 55 09 %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x F7&quot;,sampleNumberMemLSB, sampleNumberMemMSB, ch1,ch2, ch3, ch4, ch5, ch6, ch7, ch8, ch9, ch10, ch11, ch12, ch13, ch14, ch15, ch16)&#13;&#10;&#9;&#9;&#9;console(string.format(namestr))&#13;&#10;&#13;&#10;--panel:sendMidiMessageNow(CtrlrMidiMessage(namestr))&#13;&#10;&#9;&#13;&#10;end&#13;&#10;"
                 luaMethodLinkedProperty="uiLabelChangedCbk" luaMethodSource="0"
                 uuid="fcf28f883650d961f5a8c4bf47443b9e" luaMethodValid="1"/>
    </luaManagerMethods>
  </luaManager>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 976 749" uiPanelSnapSize="4" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="0xffffffff" uiPanelBackgroundColour2="0xffffffff"
                 uiPanelBackgroundGradientType="1" uiPanelImageResource="" uiPanelEditMode="0"
                 uiPanelViewPortSize="832" uiPanelPropertiesSize="207" uiPanelLock="0"
                 uiPanelDisabledOnEdit="0" uiPanelWidth="400" uiPanelHeight="400"
                 name="Ctrlr Panel" uiPanelImageAlpha="255" uiPanelImageLayout="64"
                 uiPanelSnapActive="1" uiPanelPropertiesOnRight="0" luaPanelPaintBackground=""
                 luaPanelResized="" luaPanelFileDragDropHandler="-- None" luaPanelFileDragEnterHandler="-- None"
                 luaPanelFileDragExitHandler="-- None" uiPanelInvisibleComponentAlpha="0.5"
                 uiPanelMidiToolbarVisible="0">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="background" uiPanelCanvasLayerUid="77b1a64e8a000000292406b83d010000"
                        uiPanelCanvasLayerColour="5b000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="0"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="filterLayer" uiPanelCanvasLayerUid="7cf529518a000000d05806b83d010000"
                        uiPanelCanvasLayerColour="10000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="3"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="midiSelectionLayer" uiPanelCanvasLayerUid="84c9bdb9050000001f1c4ec53d010000"
                        uiPanelCanvasLayerColour="0" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="2"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="guiSelectionLayer" uiPanelCanvasLayerUid="f6d45c1d2100000041788cc73d010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="1"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="infoLayer" uiPanelCanvasLayerUid="e99165130600000058c3fa503e010000"
                        uiPanelCanvasLayerColour="50000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="8"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="groupLinkLayer" uiPanelCanvasLayerUid="4cc086dd12000000d73967a33e010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="4"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="TuningLayer" uiPanelCanvasLayerUid="df67ac3415000000794d98a33e010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="6"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="cordsLayer" uiPanelCanvasLayerUid="eb6ee9bb26000000ced77ac13e010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="5"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="lfoAuxLayer" uiPanelCanvasLayerUid="e4586fb80b00000096cb72423f010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="7"/>
  </uiPanelEditor>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="0" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cutoffChanged"
             name="cutoff" modulatorMin="0" modulatorValue="255">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="horizontallyCentred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ff000000"
               componentLabelFont="Aharoni;14;0;0;0;0;1" componentVisibleName="Cutoff"
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="143.3" componentEffectColour="ffff0000"
               componentEffectOffsetX="9" componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="blackAngel127x4"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="b000000" uiSliderValueBgColour="4ffffff"
               uiSliderRotaryOutlineColour="ff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiFixedSliderContent="57hz=0&#10;59hz=1&#10;61hz=2&#10;63hz=3&#10;65hz=4&#10;67hz=5&#10;69hz=6&#10;71hz=7&#10;73hz=8&#10;75hz=9&#10;77hz=10&#10;79hz=11&#10;81hz=12&#10;83hz=13&#10;85hz=14&#10;87hz=15&#10;89hz=16&#10;91hz=17&#10;93hz=18&#10;96hz=19&#10;99hz=20&#10;102hz=21&#10;105hz=22&#10;108hz=23&#10;111hz=24&#10;114hz=25&#10;117hz=26&#10;120hz=27&#10;123hz=28&#10;126hz=29&#10;129hz=30&#10;132hz=31&#10;135hz=32&#10;138hz=33&#10;142hz=34&#10;146hz=35&#10;150hz=36&#10;154hz=37&#10;158hz=38&#10;162hz=39&#10;166hz=40&#10;170hz=41&#10;174hz=42&#10;178hz=43&#10;182hz=44&#10;186hz=45&#10;191hz=46&#10;196hz=47&#10;201hz=48&#10;206hz=49&#10;211hz=50&#10;216hz=51&#10;221hz=52&#10;226hz=53&#10;231hz=54&#10;237hz=55&#10;243hz=56&#10;249hz=57&#10;255hz=58&#10;261hz=59&#10;267hz=60&#10;273hz=61&#10;280hz=62&#10;287hz=63&#10;294hz=64&#10;301hz=65&#10;308hz=66&#10;315hz=67&#10;322hz=68&#10;330hz=69&#10;338hz=70&#10;346hz=71&#10;354hz=72&#10;362hz=73&#10;370hz=74&#10;379hz=75&#10;388hz=76&#10;397hz=77&#10;406hz=78&#10;415hz=79&#10;425hz=80&#10;435hz=81&#10;445hz=82&#10;455hz=83&#10;466hz=84&#10;477hz=85&#10;488hz=86&#10;499hz=87&#10;510hz=88&#10;522hz=89&#10;534hz=90&#10;546hz=91&#10;558hz=92&#10;571hz=93&#10;584hz=94&#10;597hz=95&#10;611hz=96&#10;625hz=97&#10;639hz=98&#10;654hz=99&#10;669hz=100&#10;684hz=101&#10;700hz=102&#10;716hz=103&#10;732hz=104&#10;749hz=105&#10;766hz=106&#10;783hz=107&#10;801hz=108&#10;819hz=109&#10;837hz=110&#10;856hz=111&#10;875hz=112&#10;895hz=113&#10;915hz=114&#10;936hz=115&#10;957hz=116&#10;979hz=117&#10;1001hz=118&#10;1023hz=119&#10;1046hz=120&#10;1069hz=121&#10;1093hz=122&#10;1117hz=123&#10;1142hz=124&#10;1168hz=125&#10;1194hz=126&#10;1221hz=127&#10;1248hz=128&#10;1276hz=129&#10;1305hz=130&#10;1334hz=131&#10;1364hz=132&#10;1394hz=133&#10;1425hz=134&#10;1457hz=135&#10;1489hz=136&#10;1522hz=137&#10;1556hz=138&#10;1591hz=139&#10;1626hz=140&#10;1662hz=141&#10;1699hz=142&#10;1737hz=143&#10;1776hz=144&#10;1815hz=145&#10;1855hz=146&#10;1896hz=147&#10;1938hz=148&#10;1981hz=149&#10;2025hz=150&#10;2070hz=151&#10;2116hz=152&#10;2163hz=153&#10;2211hz=154&#10;2260hz=155&#10;2310hz=156&#10;2361hz=157&#10;2413hz=158&#10;2467hz=159&#10;2522hz=160&#10;2578hz=161&#10;2635hz=162&#10;2693hz=163&#10;2753hz=164&#10;2814hz=165&#10;2876hz=166&#10;2940hz=167&#10;3005hz=168&#10;3071hz=169&#10;3139hz=170&#10;3208hz=171&#10;3279hz=172&#10;3352hz=173&#10;3426hz=174&#10;3502hz=175&#10;3579hz=176&#10;3658hz=177&#10;3739hz=178&#10;3822hz=179&#10;3906hz=180&#10;3992hz=181&#10;4080hz=182&#10;4170hz=183&#10;4262hz=184&#10;4356hz=185&#10;4452hz=186&#10;4550hz=187&#10;4650hz=188&#10;4753hz=189&#10;4858hz=190&#10;4965hz=191&#10;5075hz=192&#10;5187hz=193&#10;5301hz=194&#10;5418hz=195&#10;5537hz=196&#10;5659hz=197&#10;5784hz=198&#10;5912hz=199&#10;6042hz=200&#10;6175hz=201&#10;6311hz=202&#10;6450hz=203&#10;6592hz=204&#10;6737hz=205&#10;6885hz=206&#10;7037hz=207&#10;7192hz=208&#10;7350hz=209&#10;7512hz=210&#10;7677hz=211&#10;7846hz=212&#10;8019hz=213&#10;8196hz=214&#10;8376hz=215&#10;8560hz=216&#10;8748hz=217&#10;8941hz=218&#10;9138hz=219&#10;9339hz=220&#10;9545hz=221&#10;9755hz=222&#10;9970hz=223&#10;10189hz=224&#10;10413hz=225&#10;10642hz=226&#10;10876hz=227&#10;11115hz=228&#10;11360hz=229&#10;11610hz=230&#10;11865hz=231&#10;12126hz=232&#10;12393hz=233&#10;12666hz=234&#10;12945hz=235&#10;13230hz=236&#10;13521hz=237&#10;13818hz=238&#10;14122hz=239&#10;14433hz=240&#10;14750hz=241&#10;15074hz=242&#10;15405hz=243&#10;15744hz=244&#10;16090hz=245&#10;16444hz=246&#10;16806hz=247&#10;17176hz=248&#10;17554hz=249&#10;17940hz=250&#10;18334hz=251&#10;18737hz=252&#10;19149hz=253&#10;19570hz=254&#10;20000hz=255"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="36 176 100 100" uiType="uiFixedImageSlider"
               componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="cutoffLCD" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="0" uiLabelTextColour="ff000000"
               uiLabelOutline="0" uiLabelOutlineColour="ff000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLCDLabelFont="5" uiLCDLabelFontHeight="20"
               uiLabelText="20000hz" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat=""
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="40 272 87 27" uiType="uiLCDLabel" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="20" vstIndex="3" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="filterType"
             name="filterType" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiListBoxContent="2 pole lp=0&#10;4 pole lp=1&#10;6 pole lp=2&#10;2nd order hp=3&#10;4th order hp=4&#10;2nd order bp=5&#10;4th order bp=6&#10;contrary bp=7&#10;swept eq 1 oct=8&#10;swept eq 2-&gt;1oct=9&#10;swept eq 3-&gt;1oct=10&#10;phaser 1=11&#10;phaser 2=12&#10;bat-phaser=13&#10;flanger lite=14&#10;vocal AhAyEe=15&#10;vocal OoAh=16&#10;dual eq morph=17&#10;2eq+lp morph=18&#10;2eq morph+exprssn=19&#10;peak/shelf morph=20"
               uiListBoxRowHeight="16" uiListBoxBackgroundColour="ffffff" uiListBoxHighlightBgColour="75a6a6ff"
               uiListBoxHighlightFgColour="0xff000000" uiListBoxTextColour="0xff000000"
               uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiListBoxOutline="2" uiListBoxOutlineColour="5d362020" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="left"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentRectangle="452 60 128 370"
               uiType="uiListBox" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="4" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="resAndGainChanged"
             name="resAndGain" modulatorMin="0" uiFixedSliderContent="" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="Aharoni;14;0;0;0;0;1" componentVisibleName="Resonance"
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="blackAngel127x4"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="8c3030" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiFixedSliderContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16&#10;17&#10;18&#10;19&#10;20&#10;21&#10;22&#10;23&#10;24&#10;25&#10;26&#10;27&#10;28&#10;29&#10;30&#10;31&#10;32&#10;33&#10;34&#10;35&#10;36&#10;37&#10;38&#10;39&#10;40&#10;41&#10;42&#10;43&#10;44&#10;45&#10;46&#10;47&#10;48&#10;49&#10;50&#10;51&#10;52&#10;53&#10;54&#10;55&#10;56&#10;57&#10;58&#10;59&#10;60&#10;61&#10;62&#10;63&#10;64&#10;65&#10;66&#10;67&#10;68&#10;69&#10;70&#10;71&#10;72&#10;73&#10;74&#10;75&#10;76&#10;77&#10;78&#10;79&#10;80&#10;81&#10;82&#10;83&#10;84&#10;85&#10;86&#10;87&#10;88&#10;89&#10;90&#10;91&#10;92&#10;93&#10;94&#10;95&#10;96&#10;97&#10;98&#10;99&#10;100&#10;101&#10;102&#10;103&#10;104&#10;105&#10;106&#10;107&#10;108&#10;109&#10;110&#10;111&#10;112&#10;113&#10;114&#10;115&#10;116&#10;117&#10;118&#10;119&#10;120&#10;121&#10;122&#10;123&#10;124&#10;125&#10;126&#10;127"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="164 176 100 100"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="resLCD" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="left"
               componentValueDecimalPlaces="0" uiLabelBgColour="0" uiLabelTextColour="ff000000"
               uiLabelOutline="0" uiLabelOutlineColour="ff000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLCDLabelFont="5" uiLCDLabelFontHeight="20"
               uiLabelText="0" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat=""
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="168 272 87 27" uiType="uiLCDLabel" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="5" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="selectedVoice"
             name="listbox" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Voices"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiListBoxContent="Voice 1=1&#10;"
               uiListBoxRowHeight="16" uiListBoxBackgroundColour="ffffff" uiListBoxHighlightBgColour="8cffffff"
               uiListBoxHighlightFgColour="0xff000000" uiListBoxTextColour="0xff000000"
               uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiListBoxOutline="2" uiListBoxOutlineColour="5b000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="49000000" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="left"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentRectangle="28 48 101 179"
               uiType="uiListBox" componentLayerUid="84c9bdb9050000001f1c4ec53d010000"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="6" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="presetDumpRequest"
             name="dumpRequest" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="request dump"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiButtonTrueValue="1" uiButtonFalseValue="0"
               uiButtonIsToggle="0" uiButtonColourOn="ff37ceff" uiButtonColourOff="ff37ceff"
               uiButtonTextColourOn="ffffffff" uiButtonTextColourOff="ffffffff"
               uiButtonContent="request dump" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="28 496 88 39"
               uiType="uiButton" componentLayerUid="f6d45c1d2100000041788cc73d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="7" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="selectedPreset"
             name="presetNumber" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="preset"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="IncDecButtons"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="32 404 82 46" uiType="uiSlider"
               componentLayerUid="f6d45c1d2100000041788cc73d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="20" vstIndex="8" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="switchFilter"
             name="filtertype" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="filtertype helper"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="2 pole lp=0&#10;4 pole lp=1&#10;6 pole lp=2&#10;2nd order hp=3&#10;4th order hp=4&#10;2nd order bp=5&#10;4th order bp=6&#10;contrary bp=7&#10;swept eq 1 oct=8&#10;swept eq 2-&gt;1oct=9&#10;swept eq 3-&gt;1oct=10&#10;phaser 1=11&#10;phaser 2=12&#10;bat-phaser=13&#10;flanger lite=14&#10;vocal AhAyEe=15&#10;vocal OoAh=16&#10;dual eq morph=17&#10;2eq+lp morph=18&#10;2eq morph+exprssn=19&#10;peak/shelf morph=20"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="340 468 100 64" uiType="uiFixedSlider"
               componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ff730e0e"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="24.2" componentEffectColour="ffd32222"
               componentEffectOffsetX="27" componentEffectOffsetY="36" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="63a20d0d" uiLabelTextColour="ffffffff"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiLabelText="Please wait while the preset is being updated" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="224 188 323 124" uiType="uiLabel" componentLayerUid="e99165130600000058c3fa503e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="presetLCD" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="ff000000" uiLabelTextColour="ff00de1e"
               uiLabelOutline="0" uiLabelOutlineColour="ff000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLCDLabelFont="5" uiLCDLabelFontHeight="18"
               uiLabelText="Untitled Preset " uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="28 8 236 34" uiType="uiLCDLabel" componentLayerUid="77b1a64e8a000000292406b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="9" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="editorPageSelect"
             name="modulator-2" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Editor page"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiListBoxContent="Main=0&#10;Tuning=1&#10;Amp=2&#10;Filter=3&#10;Lfo &amp; aux=4&#10;Cords=5"
               uiListBoxRowHeight="16" uiListBoxBackgroundColour="ff1515" uiListBoxHighlightBgColour="ffc8c8e9"
               uiListBoxHighlightFgColour="0xff000000" uiListBoxTextColour="0xff000000"
               uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiListBoxOutline="2" uiListBoxOutlineColour="5b000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentRectangle="28 228 101 171"
               uiType="uiListBox" componentLayerUid="f6d45c1d2100000041788cc73d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="96" vstIndex="10" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="" modulatorValueExpressionReverse=""
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="coarseTune"
             name="coarseTune" modulatorMin="0" modulatorValue="72">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Coarse tune"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="blackAngel97x4"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-72=-72&#10;-71=-71&#10;-70=-70&#10;-69=-69&#10;-68=-68&#10;-67=-67&#10;-66=-66&#10;-65=-65&#10;-64=-64&#10;-63=-63&#10;-62=-62&#10;-61=-61&#10;-60=-60&#10;-59=-59&#10;-58=-58&#10;-57=-57&#10;-56=-56&#10;-55=-55&#10;-54=-54&#10;-53=-53&#10;-52=-52&#10;-51=-51&#10;-50=-50&#10;-49=-49&#10;-48=-48&#10;-47=-47&#10;-46=-46&#10;-45=-45&#10;-44=-44&#10;-43=-43&#10;-42=-42&#10;-41=-41&#10;-40=-40&#10;-39=-39&#10;-38=-38&#10;-37=-37&#10;-36=-36&#10;-35=-35&#10;-34=-34&#10;-33=-33&#10;-32=-32&#10;-31=-31&#10;-30=-30&#10;-29=-29&#10;-28=-28&#10;-27=-27&#10;-26=-26&#10;-25=-25&#10;-24=-24&#10;-23=-23&#10;-22=-22&#10;-21=-21&#10;-20=-20&#10;-19=-19&#10;-18=-18&#10;-17=-17&#10;-16=-16&#10;-15=-15&#10;-14=-14&#10;-13=-13&#10;-12=-12&#10;-11=-11&#10;-10=-10&#10;-9=-9&#10;-8=-8&#10;-7=-7&#10;-6=-6&#10;-5=-5&#10;-4=-4&#10;-3=-3&#10;-2=-2&#10;-1=-1&#10;0&#10;1=1&#10;2=2&#10;3=3&#10;4=4&#10;5=5&#10;6=6&#10;7=7&#10;8=8&#10;9=9&#10;10=10&#10;11=11&#10;12=12&#10;13=13&#10;14=14&#10;15=15&#10;16=16&#10;17=17&#10;18=18&#10;19=19&#10;20=20&#10;21=21&#10;22=22&#10;23=23&#10;24=24"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="20 116 64 64" uiType="uiFixedImageSlider"
               componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="64" vstIndex="11" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord00source"
             name="cord00source" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 00 source"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="12 16 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;XfdRnd=1&#10;Key+=5&#10;Key~=9&#10;Vel+=10&#10;Vel~=11&#10;Vel&lt;=12&#10;RlsVel=13&#10;Gate=14&#10;PitchWhl=15&#10;ModWhl=17&#10;Press=18&#10;Pedal=19&#10;MidiA=20&#10;MidiB=21&#10;FtSw1=22&#10;FtSw2=23&#10;Ft1FF=24&#10;Ft2FF=25&#10;MidiVl=26&#10;MidiPn=27&#10;MidiC=28&#10;MidiD=33&#10;MidiE=34&#10;MidiF=35&#10;MidiG=36&#10;MidiH=37&#10;Thumb=38&#10;ThmFF=39&#10;KeyGld=40&#10;VEnv+=60&#10;VEnv~=73&#10;VEnv&lt;=74&#10;FEnv+=80&#10;FEnv~=81&#10;FEnv&lt;=82&#10;AEnv+=83&#10;AEnv~=89&#10;AEnv&lt;=90&#10;Lfo1~=91&#10;Lfo1+=97&#10;White=98&#10;Pink=99&#10;kRand1=100&#10;kRand2=101&#10;Lfo2~=102&#10;Lfo2+=105&#10;Lag0in=106&#10;Lag0=107&#10;Lag1in=108&#10;Lag1=109&#10;CkDwhl=110&#10;CkWhl=145&#10;CkHalf=146&#10;CkQtr=147&#10;Ck8th=148&#10;Ck16th=149&#10;DC=150&#10;Sum=161&#10;Switch=162&#10;Abs=163&#10;Diode=164&#10;FlipFlop=165&#10;Quantize=166&#10;Gainx4=167"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="cordtabs" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiTabsCurrentTabChanged="" uiTabsDepth="24"
               uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1" uiTabsTabOutline="1"
               uiTabsIndentThickness="0" uiTabsOrientation="0" uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1" uiTabsOutlineGlobalColour="0x00000000"
               uiTabsOutlineGlobalBackgroundColour="0x67000000" uiTabsOutlineTabColour="0xff303030"
               uiTabsTextTabColour="0xff909090" uiTabsFrontTabOutlineColour="0xff000000"
               uiTabsFrontTabTextColour="0xff000000" uiTabsAddTab="0" uiTabsRemoveTab="0"
               componentRectangle="136 48 629 349" uiType="uiTabs" componentLayerUid="eb6ee9bb26000000ced77ac13e010000"
               uiTabsCurrentTab="0">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="Tab 0" uiTabsTabContentBackgroundColour="ffff00"
                 uiTabsTabBackgroundColour="ff8c8c8c" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Tab 1" uiTabsTabContentBackgroundColour="ffff00"
                 uiTabsTabBackgroundColour="ff8c8c8c" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="59" vstIndex="12" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord00dest"
             name="cord00dest" modulatorMin="0" modulatorValue="58">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 00 dest"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="112 16 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;Keysust=1&#10;FinePitch=2&#10;Pitch=3&#10;Glide=4&#10;ChrsAmt=5&#10;ChrsITD=6&#10;SStart=7&#10;SLoop=8&#10;SRetrig=9&#10;FilFreq=10&#10;FilRes=11&#10;AmpVol=12&#10;AmpPan=13&#10;AmpXfd=14&#10;VenvRts=15&#10;VenvAtk=16&#10;VenvDcy=17&#10;VenvRls=18&#10;FenvRts=19&#10;FenvAtk=20&#10;FenvDcy=21&#10;FenvRls=22&#10;FenvTrg=23&#10;AEnvRts=24&#10;AEnvAtk=25&#10;AEnvDcy=26&#10;AEnvRls=27&#10;AEnvTrg=28&#10;Lfo1Rate=29&#10;Lfo1Trg=30&#10;Lfo2rate=31&#10;Lfo2Trg=32&#10;Lag0in=33&#10;Lag1in=34&#10;Sum=35&#10;Switch=36&#10;Abs=37&#10;Diode=38&#10;FlipFlop=39&#10;Quantize=40&#10;Gainx4=41&#10;C00Amt=42&#10;C01Amt=43&#10;C02Amt=44&#10;C03Amt=45&#10;C04Amt=46&#10;C05Amt=47&#10;C06Amt=48&#10;C07Amt=49&#10;C08Amt=50&#10;C09Amt=51&#10;C10Amt=52&#10;C11Amt=53&#10;C12Amt=54&#10;C13Amt=55&#10;C14Amt=56&#10;C15Amt=57&#10;C16Amt=58&#10;C17Amt=59"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="13" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord00amt"
             name="cord00amt" modulatorMin="-100" modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 00 amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="LinearBar" uiSliderMin="-100"
               uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="216 16 392 32" uiType="uiSlider"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="19" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="SampleZoneSelected"
             name="sampleZoneList" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Samplezones"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiListBoxContent="zone 1=1&#10;zone 2=2&#10;"
               uiListBoxRowHeight="16" uiListBoxBackgroundColour="ffffff" uiListBoxHighlightBgColour="49f1f1ff"
               uiListBoxHighlightFgColour="0xff000000" uiListBoxTextColour="0xff000000"
               uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiListBoxOutline="2" uiListBoxOutlineColour="75000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentRectangle="12 84 95 365"
               uiType="uiListBox" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="20" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="fineTune"
             name="voiceFineTune" modulatorMin="0" modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Fine tune"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="blackAngel97x4"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-64/64ths=-64&#10;-63/64ths=-63&#10;-62/64ths=-62&#10;-61/64ths=-61&#10;-60/64ths=-60&#10;-59/64ths=-59&#10;-58/64ths=-58&#10;-57/64ths=-57&#10;-56/64ths=-56&#10;-55/64ths=-55&#10;-54/64ths=-54&#10;-53/64ths=-53&#10;-52/64ths=-52&#10;-51/64ths=-51&#10;-50/64ths=-50&#10;-49/64ths=-49&#10;-48/64ths=-48&#10;-47/64ths=-47&#10;-46/64ths=-46&#10;-45/64ths=-45&#10;-44/64ths=-44&#10;-43/64ths=-43&#10;-42/64ths=-42&#10;-41/64ths=-41&#10;-40/64ths=-40&#10;-39/64ths=-39&#10;-38/64ths=-38&#10;-37/64ths=-37&#10;-36/64ths=-36&#10;-35/64ths=-35&#10;-34/64ths=-34&#10;-33/64ths=-33&#10;-32/64ths=-32&#10;-31/64ths=-31&#10;-30/64ths=-30&#10;-29/64ths=-29&#10;-28/64ths=-28&#10;-27/64ths=-27&#10;-26/64ths=-26&#10;-25/64ths=-25&#10;-24/64ths=-24&#10;-23/64ths=-23&#10;-22/64ths=-22&#10;-21/64ths=-21&#10;-20/64ths=-20&#10;-19/64ths=-19&#10;-18/64ths=-18&#10;-17/64ths=-17&#10;-16/64ths=-16&#10;-15/64ths=-15&#10;-14/64ths=-14&#10;-13/64ths=-13&#10;-12/64ths=-12&#10;-11/64ths=-11&#10;-10/64ths=-10&#10;-9/64ths=-9&#10;-8/64ths=-8&#10;-7/64ths=-7&#10;-6/64ths=-6&#10;-5/64ths=-5&#10;-4/64ths=-4&#10;-3/64ths=-3&#10;-2/64ths=-2&#10;-1/64ths=-1&#10;0/64ths=0&#10;1/64ths=1&#10;2/64ths=2&#10;3/64ths=3&#10;4/64ths=4&#10;5/64ths=5&#10;6/64ths=6&#10;7/64ths=7&#10;8/64ths=8&#10;9/64ths=9&#10;10/64ths=10&#10;11/64ths=11&#10;12/64ths=12&#10;13/64ths=13&#10;14/64ths=14&#10;15/64ths=15&#10;16/64ths=16&#10;17/64ths=17&#10;18/64ths=18&#10;19/64ths=19&#10;20/64ths=20&#10;21/64ths=21&#10;22/64ths=22&#10;23/64ths=23&#10;24/64ths=24&#10;25/64ths=25&#10;26/64ths=26&#10;27/64ths=27&#10;28/64ths=28&#10;29/64ths=29&#10;30/64ths=30&#10;31/64ths=31&#10;32/64ths=32&#10;33/64ths=33&#10;34/64ths=34&#10;35/64ths=35&#10;36/64ths=36&#10;37/64ths=37&#10;38/64ths=38&#10;39/64ths=39&#10;40/64ths=40&#10;41/64ths=41&#10;42/64ths=42&#10;43/64ths=43&#10;44/64ths=44&#10;45/64ths=45&#10;46/64ths=46&#10;47/64ths=47&#10;48/64ths=48&#10;49/64ths=49&#10;50/64ths=50&#10;51/64ths=51&#10;52/64ths=52&#10;53/64ths=53&#10;54/64ths=54&#10;55/64ths=55&#10;56/64ths=56&#10;57/64ths=57&#10;58/64ths=58&#10;59/64ths=59&#10;60/64ths=60&#10;61/64ths=61&#10;62/64ths=62&#10;63/64ths=63&#10;64/64ths=64"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="20 180 64 64" uiType="uiFixedImageSlider"
               componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="48" vstIndex="27" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="keyTranspose"
             name="keyTranspose" modulatorMin="0" modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1" componentVisibleName="Key transpose"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="1" uiImageSliderResource="blackAngel97x4"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-24=0&#10;-23=1&#10;-22=2&#10;-21=3&#10;-20=4&#10;-19=5&#10;-18=6&#10;-17=7&#10;-16=8&#10;-15=9&#10;-14=10&#10;-13=11&#10;-12=12&#10;-11=13&#10;-10=14&#10;-9=15&#10;-8=16&#10;-7=17&#10;-6=18&#10;-5=19&#10;-4=20&#10;-3=21&#10;-2=22&#10;-1=23&#10;0=24&#10;1=25&#10;2=26&#10;3=27&#10;4=28&#10;5=29&#10;6=30&#10;7=31&#10;8=32&#10;9=33&#10;10=34&#10;11=35&#10;12=36&#10;13=37&#10;14=38&#10;15=39&#10;16=40&#10;17=41&#10;18=42&#10;19=43&#10;20=44&#10;21=45&#10;22=46&#10;23=47&#10;24=48"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="20 52 64 64" uiType="uiFixedImageSlider"
               componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="64" vstIndex="28" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord01source"
             name="cord01source" modulatorMin="0" modulatorValue="16">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 01 source"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="12 48 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;XfdRnd=1&#10;Key+=5&#10;Key~=9&#10;Vel+=10&#10;Vel~=11&#10;Vel&lt;=12&#10;RlsVel=13&#10;Gate=14&#10;PitchWhl=15&#10;ModWhl=17&#10;Press=18&#10;Pedal=19&#10;MidiA=20&#10;MidiB=21&#10;FtSw1=22&#10;FtSw2=23&#10;Ft1FF=24&#10;Ft2FF=25&#10;MidiVl=26&#10;MidiPn=27&#10;MidiC=28&#10;MidiD=33&#10;MidiE=34&#10;MidiF=35&#10;MidiG=36&#10;MidiH=37&#10;Thumb=38&#10;ThmFF=39&#10;KeyGld=40&#10;VEnv+=60&#10;VEnv~=73&#10;VEnv&lt;=74&#10;FEnv+=80&#10;FEnv~=81&#10;FEnv&lt;=82&#10;AEnv+=83&#10;AEnv~=89&#10;AEnv&lt;=90&#10;Lfo1~=91&#10;Lfo1+=97&#10;White=98&#10;Pink=99&#10;kRand1=100&#10;kRand2=101&#10;Lfo2~=102&#10;Lfo2+=105&#10;Lag0in=106&#10;Lag0=107&#10;Lag1in=108&#10;Lag1=109&#10;CkDwhl=110&#10;CkWhl=145&#10;CkHalf=146&#10;CkQtr=147&#10;Ck8th=148&#10;Ck16th=149&#10;DC=150&#10;Sum=161&#10;Switch=162&#10;Abs=163&#10;Diode=164&#10;FlipFlop=165&#10;Quantize=166&#10;Gainx4=167"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="59" vstIndex="29" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord01dest"
             name="cord01dest" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 01 dest"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="112 48 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;Keysust=1&#10;FinePitch=2&#10;Pitch=3&#10;Glide=4&#10;ChrsAmt=5&#10;ChrsITD=6&#10;SStart=7&#10;SLoop=8&#10;SRetrig=9&#10;FilFreq=10&#10;FilRes=11&#10;AmpVol=12&#10;AmpPan=13&#10;AmpXfd=14&#10;VenvRts=15&#10;VenvAtk=16&#10;VenvDcy=17&#10;VenvRls=18&#10;FenvRts=19&#10;FenvAtk=20&#10;FenvDcy=21&#10;FenvRls=22&#10;FenvTrg=23&#10;AEnvRts=24&#10;AEnvAtk=25&#10;AEnvDcy=26&#10;AEnvRls=27&#10;AEnvTrg=28&#10;Lfo1Rate=29&#10;Lfo1Trg=30&#10;Lfo2rate=31&#10;Lfo2Trg=32&#10;Lag0in=33&#10;Lag1in=34&#10;Sum=35&#10;Switch=36&#10;Abs=37&#10;Diode=38&#10;FlipFlop=39&#10;Quantize=40&#10;Gainx4=41&#10;C00Amt=42&#10;C01Amt=43&#10;C02Amt=44&#10;C03Amt=45&#10;C04Amt=46&#10;C05Amt=47&#10;C06Amt=48&#10;C07Amt=49&#10;C08Amt=50&#10;C09Amt=51&#10;C10Amt=52&#10;C11Amt=53&#10;C12Amt=54&#10;C13Amt=55&#10;C14Amt=56&#10;C15Amt=57&#10;C16Amt=58&#10;C17Amt=59"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="30" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord01amount"
             name="cord01amt" modulatorMin="-100" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 01 amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="LinearBar" uiSliderMin="-100"
               uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="216 48 392 32" uiType="uiSlider"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="64" vstIndex="66" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord02source"
             name="cord02source" modulatorMin="0" modulatorValue="39">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 02 source"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="12 78 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;XfdRnd=1&#10;Key+=5&#10;Key~=9&#10;Vel+=10&#10;Vel~=11&#10;Vel&lt;=12&#10;RlsVel=13&#10;Gate=14&#10;PitchWhl=15&#10;ModWhl=17&#10;Press=18&#10;Pedal=19&#10;MidiA=20&#10;MidiB=21&#10;FtSw1=22&#10;FtSw2=23&#10;Ft1FF=24&#10;Ft2FF=25&#10;MidiVl=26&#10;MidiPn=27&#10;MidiC=28&#10;MidiD=33&#10;MidiE=34&#10;MidiF=35&#10;MidiG=36&#10;MidiH=37&#10;Thumb=38&#10;ThmFF=39&#10;KeyGld=40&#10;VEnv+=60&#10;VEnv~=73&#10;VEnv&lt;=74&#10;FEnv+=80&#10;FEnv~=81&#10;FEnv&lt;=82&#10;AEnv+=83&#10;AEnv~=89&#10;AEnv&lt;=90&#10;Lfo1~=91&#10;Lfo1+=97&#10;White=98&#10;Pink=99&#10;kRand1=100&#10;kRand2=101&#10;Lfo2~=102&#10;Lfo2+=105&#10;Lag0in=106&#10;Lag0=107&#10;Lag1in=108&#10;Lag1=109&#10;CkDwhl=110&#10;CkWhl=145&#10;CkHalf=146&#10;CkQtr=147&#10;Ck8th=148&#10;Ck16th=149&#10;DC=150&#10;Sum=161&#10;Switch=162&#10;Abs=163&#10;Diode=164&#10;FlipFlop=165&#10;Quantize=166&#10;Gainx4=167"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="59" vstIndex="67" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord02dest"
             name="cord02dest" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 02 dest"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="112 78 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;Keysust=1&#10;FinePitch=2&#10;Pitch=3&#10;Glide=4&#10;ChrsAmt=5&#10;ChrsITD=6&#10;SStart=7&#10;SLoop=8&#10;SRetrig=9&#10;FilFreq=10&#10;FilRes=11&#10;AmpVol=12&#10;AmpPan=13&#10;AmpXfd=14&#10;VenvRts=15&#10;VenvAtk=16&#10;VenvDcy=17&#10;VenvRls=18&#10;FenvRts=19&#10;FenvAtk=20&#10;FenvDcy=21&#10;FenvRls=22&#10;FenvTrg=23&#10;AEnvRts=24&#10;AEnvAtk=25&#10;AEnvDcy=26&#10;AEnvRls=27&#10;AEnvTrg=28&#10;Lfo1Rate=29&#10;Lfo1Trg=30&#10;Lfo2rate=31&#10;Lfo2Trg=32&#10;Lag0in=33&#10;Lag1in=34&#10;Sum=35&#10;Switch=36&#10;Abs=37&#10;Diode=38&#10;FlipFlop=39&#10;Quantize=40&#10;Gainx4=41&#10;C00Amt=42&#10;C01Amt=43&#10;C02Amt=44&#10;C03Amt=45&#10;C04Amt=46&#10;C05Amt=47&#10;C06Amt=48&#10;C07Amt=49&#10;C08Amt=50&#10;C09Amt=51&#10;C10Amt=52&#10;C11Amt=53&#10;C12Amt=54&#10;C13Amt=55&#10;C14Amt=56&#10;C15Amt=57&#10;C16Amt=58&#10;C17Amt=59"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="68" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord02amount"
             name="cord02amt" modulatorMin="-100" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 02 amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="LinearBar" uiSliderMin="-100"
               uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="216 78 392 32" uiType="uiSlider"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="69" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="refreshPreset"
             name="modulator-3" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="refresh preset"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiButtonTrueValue="1" uiButtonFalseValue="0"
               uiButtonIsToggle="1" uiButtonColourOn="0xff0000ff" uiButtonColourOff="0xff4364ff"
               uiButtonTextColourOn="0xff000000" uiButtonTextColourOff="0xff454545"
               uiButtonContent="refresh=1&#10;Refresh=2" uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0" uiButtonConnectedTop="0" uiButtonConnectedBottom="0"
               uiButtonRepeat="0" uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0"
               componentRectangle="28 456 88 32" uiType="uiButton" componentLayerUid="f6d45c1d2100000041788cc73d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="64" vstIndex="70" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord03source"
             name="cord03source" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 03 source"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="12 108 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;XfdRnd=1&#10;Key+=5&#10;Key~=9&#10;Vel+=10&#10;Vel~=11&#10;Vel&lt;=12&#10;RlsVel=13&#10;Gate=14&#10;PitchWhl=15&#10;ModWhl=17&#10;Press=18&#10;Pedal=19&#10;MidiA=20&#10;MidiB=21&#10;FtSw1=22&#10;FtSw2=23&#10;Ft1FF=24&#10;Ft2FF=25&#10;MidiVl=26&#10;MidiPn=27&#10;MidiC=28&#10;MidiD=33&#10;MidiE=34&#10;MidiF=35&#10;MidiG=36&#10;MidiH=37&#10;Thumb=38&#10;ThmFF=39&#10;KeyGld=40&#10;VEnv+=60&#10;VEnv~=73&#10;VEnv&lt;=74&#10;FEnv+=80&#10;FEnv~=81&#10;FEnv&lt;=82&#10;AEnv+=83&#10;AEnv~=89&#10;AEnv&lt;=90&#10;Lfo1~=91&#10;Lfo1+=97&#10;White=98&#10;Pink=99&#10;kRand1=100&#10;kRand2=101&#10;Lfo2~=102&#10;Lfo2+=105&#10;Lag0in=106&#10;Lag0=107&#10;Lag1in=108&#10;Lag1=109&#10;CkDwhl=110&#10;CkWhl=145&#10;CkHalf=146&#10;CkQtr=147&#10;Ck8th=148&#10;Ck16th=149&#10;DC=150&#10;Sum=161&#10;Switch=162&#10;Abs=163&#10;Diode=164&#10;FlipFlop=165&#10;Quantize=166&#10;Gainx4=167"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="59" vstIndex="71" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord03dest"
             name="cord03dest" modulatorMin="0" modulatorValue="44">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 03 dest"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="112 108 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;Keysust=1&#10;FinePitch=2&#10;Pitch=3&#10;Glide=4&#10;ChrsAmt=5&#10;ChrsITD=6&#10;SStart=7&#10;SLoop=8&#10;SRetrig=9&#10;FilFreq=10&#10;FilRes=11&#10;AmpVol=12&#10;AmpPan=13&#10;AmpXfd=14&#10;VenvRts=15&#10;VenvAtk=16&#10;VenvDcy=17&#10;VenvRls=18&#10;FenvRts=19&#10;FenvAtk=20&#10;FenvDcy=21&#10;FenvRls=22&#10;FenvTrg=23&#10;AEnvRts=24&#10;AEnvAtk=25&#10;AEnvDcy=26&#10;AEnvRls=27&#10;AEnvTrg=28&#10;Lfo1Rate=29&#10;Lfo1Trg=30&#10;Lfo2rate=31&#10;Lfo2Trg=32&#10;Lag0in=33&#10;Lag1in=34&#10;Sum=35&#10;Switch=36&#10;Abs=37&#10;Diode=38&#10;FlipFlop=39&#10;Quantize=40&#10;Gainx4=41&#10;C00Amt=42&#10;C01Amt=43&#10;C02Amt=44&#10;C03Amt=45&#10;C04Amt=46&#10;C05Amt=47&#10;C06Amt=48&#10;C07Amt=49&#10;C08Amt=50&#10;C09Amt=51&#10;C10Amt=52&#10;C11Amt=53&#10;C12Amt=54&#10;C13Amt=55&#10;C14Amt=56&#10;C15Amt=57&#10;C16Amt=58&#10;C17Amt=59"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="72" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord03amount"
             name="cord03amt" modulatorMin="-100" modulatorValue="13">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 03 amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="LinearBar" uiSliderMin="-100"
               uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="216 108 392 32" uiType="uiSlider"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="73" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="lfoRate"
             name="lfoRate" modulatorMin="0" modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Lfo 1 rate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="blackAngel97x4"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0.8=1&#10;0.11=2&#10;0.15=3&#10;0.18=4&#10;0.21=5&#10;0.25=6&#10;0.28=7&#10;0.32=8&#10;0.35=9&#10;0.39=10&#10;0.42=11&#10;0.46=12&#10;0.50=13&#10;0.54=14&#10;0.58=15&#10;0.63=16&#10;0.67=17&#10;0.71=18&#10;0.76=19&#10;0.80=20&#10;0.85=21&#10;0.90=22&#10;0.94=23&#10;0.99=24&#10;1.4=25&#10;1.10=26&#10;1.15=27&#10;1.20=28&#10;1.25=29&#10;1.31=30&#10;1.37=31&#10;1.42=32&#10;1.48=33&#10;1.54=34&#10;1.60=35&#10;1.67=36&#10;1.73=37&#10;1.79=38&#10;1.86=39&#10;1.93=40&#10;2.0=41&#10;2.7=42&#10;2.14=43&#10;2.21=44&#10;2.29=45&#10;2.36=46&#10;2.44=47&#10;2.52=48&#10;2.60=49&#10;2.68=50&#10;2.77=51&#10;2.85=52&#10;2.94=53&#10;3.3=54&#10;3.12=55&#10;3.21=56&#10;3.31=57&#10;3.40=58&#10;3.50=59&#10;3.60=60&#10;3.70=61&#10;3.81=62&#10;3.91=63&#10;4.2=64&#10;4.13=65&#10;4.25=66&#10;4.36=67&#10;4.48=68&#10;4.60=69&#10;4.72=70&#10;4.84=71&#10;4.97=72&#10;5.10=73&#10;5.23=74&#10;5.37=75&#10;5.51=76&#10;5.65=77&#10;5.79=78&#10;5.94=79&#10;6.8=80&#10;6.24=81&#10;6.39=82&#10;6.55=83&#10;6.71=84&#10;6.88=85&#10;7.4=86&#10;7.21=87&#10;7.39=88&#10;7.57=89&#10;7.75=90&#10;7.93=91&#10;8.12=92&#10;8.32=93&#10;8.51=94&#10;8.71=95&#10;8.92=96&#10;9.13=97&#10;9.34=98&#10;9.56=99&#10;9.78=100&#10;10.=101&#10;10.23=102&#10;10.47=103&#10;10.71=104&#10;10.95=105&#10;11.20=106&#10;11.46=107&#10;11.71=108&#10;11.98=109&#10;12.25=110&#10;12.52=111&#10;12.80=112&#10;13.9=113&#10;13.38=114&#10;13.68=115&#10;13.99=116&#10;14.30=117&#10;14.61=118&#10;14.93=119&#10;15.26=120&#10;15.60=121&#10;15.94=122&#10;16.29=123&#10;16.65=124&#10;17.1=125&#10;17.38=126&#10;17.76=127&#10;18.14=128&#10;&#10;"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="172 76 64 64" uiType="uiFixedImageSlider"
               componentLayerUid="e4586fb80b00000096cb72423f010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="64" vstIndex="74" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord04source"
             name="cord04source" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 04 source"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="12 140 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;XfdRnd=1&#10;Key+=5&#10;Key~=9&#10;Vel+=10&#10;Vel~=11&#10;Vel&lt;=12&#10;RlsVel=13&#10;Gate=14&#10;PitchWhl=15&#10;ModWhl=17&#10;Press=18&#10;Pedal=19&#10;MidiA=20&#10;MidiB=21&#10;FtSw1=22&#10;FtSw2=23&#10;Ft1FF=24&#10;Ft2FF=25&#10;MidiVl=26&#10;MidiPn=27&#10;MidiC=28&#10;MidiD=33&#10;MidiE=34&#10;MidiF=35&#10;MidiG=36&#10;MidiH=37&#10;Thumb=38&#10;ThmFF=39&#10;KeyGld=40&#10;VEnv+=60&#10;VEnv~=73&#10;VEnv&lt;=74&#10;FEnv+=80&#10;FEnv~=81&#10;FEnv&lt;=82&#10;AEnv+=83&#10;AEnv~=89&#10;AEnv&lt;=90&#10;Lfo1~=91&#10;Lfo1+=97&#10;White=98&#10;Pink=99&#10;kRand1=100&#10;kRand2=101&#10;Lfo2~=102&#10;Lfo2+=105&#10;Lag0in=106&#10;Lag0=107&#10;Lag1in=108&#10;Lag1=109&#10;CkDwhl=110&#10;CkWhl=145&#10;CkHalf=146&#10;CkQtr=147&#10;Ck8th=148&#10;Ck16th=149&#10;DC=150&#10;Sum=161&#10;Switch=162&#10;Abs=163&#10;Diode=164&#10;FlipFlop=165&#10;Quantize=166&#10;Gainx4=167"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="59" vstIndex="75" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord04dest"
             name="cord04dest" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 04 dest"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="112 140 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="off=0&#10;Keysust=1&#10;FinePitch=2&#10;Pitch=3&#10;Glide=4&#10;ChrsAmt=5&#10;ChrsITD=6&#10;SStart=7&#10;SLoop=8&#10;SRetrig=9&#10;FilFreq=10&#10;FilRes=11&#10;AmpVol=12&#10;AmpPan=13&#10;AmpXfd=14&#10;VenvRts=15&#10;VenvAtk=16&#10;VenvDcy=17&#10;VenvRls=18&#10;FenvRts=19&#10;FenvAtk=20&#10;FenvDcy=21&#10;FenvRls=22&#10;FenvTrg=23&#10;AEnvRts=24&#10;AEnvAtk=25&#10;AEnvDcy=26&#10;AEnvRls=27&#10;AEnvTrg=28&#10;Lfo1Rate=29&#10;Lfo1Trg=30&#10;Lfo2rate=31&#10;Lfo2Trg=32&#10;Lag0in=33&#10;Lag1in=34&#10;Sum=35&#10;Switch=36&#10;Abs=37&#10;Diode=38&#10;FlipFlop=39&#10;Quantize=40&#10;Gainx4=41&#10;C00Amt=42&#10;C01Amt=43&#10;C02Amt=44&#10;C03Amt=45&#10;C04Amt=46&#10;C05Amt=47&#10;C06Amt=48&#10;C07Amt=49&#10;C08Amt=50&#10;C09Amt=51&#10;C10Amt=52&#10;C11Amt=53&#10;C12Amt=54&#10;C13Amt=55&#10;C14Amt=56&#10;C15Amt=57&#10;C16Amt=58&#10;C17Amt=59"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="76" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="cord04amount"
             name="cord04amt" modulatorMin="-100" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="cord 04 amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="LinearBar" uiSliderMin="-100"
               uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentRectangle="216 140 392 32" uiType="uiSlider"
               componentLayerUid="eb6ee9bb26000000ced77ac13e010000" componentTabName="cordtabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="77" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="voiceNonTranspose"
             name="voiceNonTranspose" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="8" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Non-transpose"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiButtonTextColourOn="0xff000000"
               uiToggleButtonText="Non-transpose" uiButtonTrueValue="1" uiButtonFalseValue="0"
               uiButtonColourOff="0xff0000ff" componentRectangle="4 16 88 32"
               uiType="uiToggleButton" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="126" vstIndex="78" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="SampleZoneRootNote"
             name="sampleZoneRootNote" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Root"
               componentMouseCursor="2" componentGroupName="modulator-4" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="8 20 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="C-2=1&#10;C#-2=2&#10;D-2=3&#10;D#-2=4&#10;E-2=5&#10;F-2=6&#10;F#-2=7&#10;G-2=8&#10;G#-2=9&#10;A-2=10&#10;A#-2=11&#10;B-2=12&#10;C-1=13&#10;C#-1=14&#10;D-1=15&#10;D#-1=16&#10;E-1=17&#10;F-1=18&#10;F#-1=19&#10;G-1=20&#10;G#-1=21&#10;A-1=22&#10;A#-1=23&#10;B-1=24&#10;C0=25&#10;C#0=26&#10;D0=27&#10;D#0=28&#10;E0=29&#10;F0=30&#10;F#0=31&#10;G0=32&#10;G#0=33&#10;A0=34&#10;A#0=35&#10;B0=36&#10;C1=37&#10;C#1=38&#10;D1=39&#10;D#1=40&#10;E1=41&#10;F1=42&#10;F#1=43&#10;G1=44&#10;G#1=45&#10;A1=46&#10;A#1=47&#10;B1=48&#10;C2=49&#10;C#2=50&#10;D2=51&#10;D#2=52&#10;E2=53&#10;F2=54&#10;F#2=55&#10;G2=56&#10;G#2=57&#10;A2=58&#10;A#2=59&#10;B2=60&#10;C3=61&#10;C#3=62&#10;D3=63&#10;D#3=64&#10;E3=65&#10;F3=66&#10;F#3=67&#10;G3=68&#10;G#3=69&#10;A3=70&#10;A#3=71&#10;B3=72&#10;C4=73&#10;C#4=74&#10;D4=75&#10;D#4=76&#10;E4=77&#10;F4=78&#10;F#4=79&#10;G4=80&#10;G#4=81&#10;A4=82&#10;A#4=83&#10;B4=84&#10;C5=85&#10;C#5=86&#10;D5=87&#10;D#5=88&#10;E5=89&#10;F5=90&#10;F5#=91&#10;G5=92&#10;G#5=93&#10;A5=94&#10;A#5=95&#10;B5=96&#10;C6=97&#10;C#6=98&#10;D6=99&#10;D#6=100&#10;E6=101&#10;F6=102&#10;F#6=103&#10;G6=104&#10;G#6=105&#10;A6=106&#10;A#6=107&#10;B6=108&#10;C7=109&#10;C#7=110&#10;D7=111&#10;D#7=112&#10;E7=113&#10;F7=114&#10;F#7=115&#10;G7=116&#10;G#7=117&#10;A7=118&#10;A#7=119&#10;B7=120&#10;C8=121&#10;C#8=122&#10;D8=123&#10;D#8=124&#10;E8=125&#10;F8=126&#10;F#8=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="126" vstIndex="79" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="SetSampleZoneLowKey"
             name="sampleLowKey" modulatorMin="0" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Low key"
               componentMouseCursor="2" componentGroupName="modulator-4" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="100 20 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="C-2=1&#10;C#-2=2&#10;D-2=3&#10;D#-2=4&#10;E-2=5&#10;F-2=6&#10;F#-2=7&#10;G-2=8&#10;G#-2=9&#10;A-2=10&#10;A#-2=11&#10;B-2=12&#10;C-1=13&#10;C#-1=14&#10;D-1=15&#10;D#-1=16&#10;E-1=17&#10;F-1=18&#10;F#-1=19&#10;G-1=20&#10;G#-1=21&#10;A-1=22&#10;A#-1=23&#10;B-1=24&#10;C0=25&#10;C#0=26&#10;D0=27&#10;D#0=28&#10;E0=29&#10;F0=30&#10;F#0=31&#10;G0=32&#10;G#0=33&#10;A0=34&#10;A#0=35&#10;B0=36&#10;C1=37&#10;C#1=38&#10;D1=39&#10;D#1=40&#10;E1=41&#10;F1=42&#10;F#1=43&#10;G1=44&#10;G#1=45&#10;A1=46&#10;A#1=47&#10;B1=48&#10;C2=49&#10;C#2=50&#10;D2=51&#10;D#2=52&#10;E2=53&#10;F2=54&#10;F#2=55&#10;G2=56&#10;G#2=57&#10;A2=58&#10;A#2=59&#10;B2=60&#10;C3=61&#10;C#3=62&#10;D3=63&#10;D#3=64&#10;E3=65&#10;F3=66&#10;F#3=67&#10;G3=68&#10;G#3=69&#10;A3=70&#10;A#3=71&#10;B3=72&#10;C4=73&#10;C#4=74&#10;D4=75&#10;D#4=76&#10;E4=77&#10;F4=78&#10;F#4=79&#10;G4=80&#10;G#4=81&#10;A4=82&#10;A#4=83&#10;B4=84&#10;C5=85&#10;C#5=86&#10;D5=87&#10;D#5=88&#10;E5=89&#10;F5=90&#10;F5#=91&#10;G5=92&#10;G#5=93&#10;A5=94&#10;A#5=95&#10;B5=96&#10;C6=97&#10;C#6=98&#10;D6=99&#10;D#6=100&#10;E6=101&#10;F6=102&#10;F#6=103&#10;G6=104&#10;G#6=105&#10;A6=106&#10;A#6=107&#10;B6=108&#10;C7=109&#10;C#7=110&#10;D7=111&#10;D#7=112&#10;E7=113&#10;F7=114&#10;F#7=115&#10;G7=116&#10;G#7=117&#10;A7=118&#10;A#7=119&#10;B7=120&#10;C8=121&#10;C#8=122&#10;D8=123&#10;D#8=124&#10;E8=125&#10;F8=126&#10;F#8=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="80" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="SetSampleZoneHighKey"
             name="sampleHighKey" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="High key"
               componentMouseCursor="2" componentGroupName="modulator-4" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               componentRectangle="248 20 88 32" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="C-2=1&#10;C#-2=2&#10;D-2=3&#10;D#-2=4&#10;E-2=5&#10;F-2=6&#10;F#-2=7&#10;G-2=8&#10;G#-2=9&#10;A-2=10&#10;A#-2=11&#10;B-2=12&#10;C-1=13&#10;C#-1=14&#10;D-1=15&#10;D#-1=16&#10;E-1=17&#10;F-1=18&#10;F#-1=19&#10;G-1=20&#10;G#-1=21&#10;A-1=22&#10;A#-1=23&#10;B-1=24&#10;C0=25&#10;C#0=26&#10;D0=27&#10;D#0=28&#10;E0=29&#10;F0=30&#10;F#0=31&#10;G0=32&#10;G#0=33&#10;A0=34&#10;A#0=35&#10;B0=36&#10;C1=37&#10;C#1=38&#10;D1=39&#10;D#1=40&#10;E1=41&#10;F1=42&#10;F#1=43&#10;G1=44&#10;G#1=45&#10;A1=46&#10;A#1=47&#10;B1=48&#10;C2=49&#10;C#2=50&#10;D2=51&#10;D#2=52&#10;E2=53&#10;F2=54&#10;F#2=55&#10;G2=56&#10;G#2=57&#10;A2=58&#10;A#2=59&#10;B2=60&#10;C3=61&#10;C#3=62&#10;D3=63&#10;D#3=64&#10;E3=65&#10;F3=66&#10;F#3=67&#10;G3=68&#10;G#3=69&#10;A3=70&#10;A#3=71&#10;B3=72&#10;C4=73&#10;C#4=74&#10;D4=75&#10;D#4=76&#10;E4=77&#10;F4=78&#10;F#4=79&#10;G4=80&#10;G#4=81&#10;A4=82&#10;A#4=83&#10;B4=84&#10;C5=85&#10;C#5=86&#10;D5=87&#10;D#5=88&#10;E5=89&#10;F5=90&#10;F5#=91&#10;G5=92&#10;G#5=93&#10;A5=94&#10;A#5=95&#10;B5=96&#10;C6=97&#10;C#6=98&#10;D6=99&#10;D#6=100&#10;E6=101&#10;F6=102&#10;F#6=103&#10;G6=104&#10;G#6=105&#10;A6=106&#10;A#6=107&#10;B6=108&#10;C7=109&#10;C#7=110&#10;D7=111&#10;D#7=112&#10;E7=113&#10;F7=114&#10;F#7=115&#10;G7=116&#10;G#7=117&#10;A7=118&#10;A#7=119&#10;B7=120&#10;C8=121&#10;C#8=122&#10;D8=123&#10;D#8=124&#10;E8=125&#10;F8=126&#10;F#8=127&#10;G8=128"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiType="uiCombo"
               componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="27" vstIndex="81" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="SetSampleZoneKeyWinFade"
             name="sampleZoneKeyWinFade" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Fade"
               componentMouseCursor="2" componentGroupName="modulator-4" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="27" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="188 8 64 64"
               uiType="uiImageSlider" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="31" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="CopyVoice"
             name="copyVoice" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Duplicate selected voice"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiButtonTrueValue="1" uiButtonFalseValue="0"
               uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff" uiButtonColourOff="ff0000ff"
               uiButtonTextColourOn="ffffffff" uiButtonTextColourOff="ffffffff"
               uiButtonContent="Duplicate selected voice&#10;Duplicate selected voice"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentRectangle="140 49 143 30"
               uiType="uiButton" componentLayerUid="4cc086dd12000000d73967a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="32" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="ampEnvelopeGraph"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-4"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiCustomResizedCallback="" uiCustomPaintCallback="AmpEnvPaint"
               uiCustomPaintOverChildrenCallback="" componentRectangle="16 12 269 159"
               uiCustomMouseDownCallback="" uiCustomMouseUpCallback="" uiCustomMouseEnterCallback=""
               uiCustomMouseExitCallback="" uiCustomMouseMoveCallback="FilterEnvMouseMove"
               uiCustomMouseDragCallback="" uiCustomKeyDownCallback="" uiCustomMouseDoubleClickCallback=""
               uiCustomMouseWheelMoveCallback="" uiType="uiCustomComponent"
               componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="33" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvAtk1"
             name="filterEnvAtk1Rate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Atk 1 rate"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="16 184 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="34" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvAtk1Lvl"
             name="filterEnvAtk1Level" modulatorMin="-100" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Atk 1 level"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="84 184 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="87" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvAtk2Rate"
             name="filterEnvAtk2Rate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Atk 2 rate"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="152 184 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="35" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvAtk2Level"
             name="filterEnvAtk2Level" modulatorMin="-100" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Atk 2 level"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="220 184 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="36" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvDcy1Rate"
             name="filterEnvDcy1Rate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Dcy 1 rate"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="16 256 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="37" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvDcy1Level"
             name="filterEnvDcy1Level" modulatorMin="-100" modulatorValue="99">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Dcy 1 level"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="84 256 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="91" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvDcy2Rate"
             name="filterEnvDcy2Rate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Dcy 2 rate"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="156 256 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="92" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvDcy2Level"
             name="filterEnvDcy2Level" modulatorMin="-100" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Dcy 2 level"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="220 256 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="93" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvRls1Rate"
             name="filterEnvRls1Rate" modulatorMin="0" modulatorValue="20">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Rls 1 rate"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="20 328 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="39" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvRls1Level"
             name="filterEnvRls1Level" modulatorMin="-100" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Rls 1 level"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="84 328 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="95" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvRls2Rate"
             name="filterEnvRls2Rate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Rls 2 rate"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="156 328 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="40" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="FilterEnvRls2Level"
             name="filterEnvRls2Level" modulatorMin="-100" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Rls 2 level"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel97x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="224 328 64 64"
               uiType="uiImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="sampleNameLCD" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-4"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="0xff000000"
               uiLabelTextColour="0xff56c312" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLCDLabelFont="5"
               uiLCDLabelFontHeight="18" uiLabelText="leeg            " uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="1" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="16" uiLabelChangedCbk="sampleLcdEdit"
               componentRectangle="212 8 216 40" uiType="uiLCDLabel" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="43" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="changeSampleName"
             name="changeSampleName" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Change&#10;sample&#10;name"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiButtonTrueValue="1" uiButtonFalseValue="0"
               uiButtonIsToggle="1" uiButtonColourOn="0xff0000ff" uiButtonColourOff="ff0000ff"
               uiButtonTextColourOn="ffffffff" uiButtonTextColourOff="ffffffff"
               uiButtonContent="Change sample name&#10;Change sample name" uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0" uiButtonConnectedTop="0" uiButtonConnectedBottom="0"
               uiButtonRepeat="0" uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0"
               componentRectangle="212 55 217 22" uiType="uiButton" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="45" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="FilterGraph"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-4"
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiCustomResizedCallback="" uiCustomPaintCallback="DrawFilter"
               uiCustomPaintOverChildrenCallback="" componentRectangle="12 12 269 159"
               uiCustomMouseDownCallback="" uiCustomMouseUpCallback="" uiCustomMouseEnterCallback=""
               uiCustomMouseExitCallback="" uiCustomMouseMoveCallback="FilterEnvMouseMove"
               uiCustomMouseDragCallback="" uiCustomKeyDownCallback="" uiCustomMouseDoubleClickCallback=""
               uiCustomMouseWheelMoveCallback="" uiType="uiCustomComponent"
               componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="-1" vstIndex="62" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="MorphParam01"
             name="morphParam01" modulatorMin="0" componentVisibleName="Freq"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="  "
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="BlackAngleGrey"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0"
               uiSliderTrackColour="ffffff" uiFixedSliderContent="" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="56 296 64 64"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="-1" vstIndex="63" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="MorphShelf01"
             name="morphParam02" modulatorMin="0" componentVisibleName="Shelf"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="  "
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="BlackAngleGrey"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="f0f0f" uiFixedSliderContent="" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="56 368 64 64"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="-1" vstIndex="64" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="MorphPeak01"
             name="morphParam03" modulatorMin="0" componentVisibleName="Peak"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="  "
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="BlackAngleGrey"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="56 440 64 64"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="-1" vstIndex="65" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="MorphParam04"
             name="morphParam04" modulatorMin="0" componentVisibleName="Freq"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="  "
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="BlackAngleGrey"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="f0f0f" uiFixedSliderContent="" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="184 296 64 64"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="-1" vstIndex="84" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="MorphParam05"
             name="morphParam05" modulatorMin="0" componentVisibleName="Shelf"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="-13824" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="  "
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="BlackAngleGrey"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="f0f0f" uiFixedSliderContent="" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="184 368 64 64"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="-1" vstIndex="142" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="MorphParam06"
             name="morphParam06" modulatorMin="0" componentVisibleName="Peak"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="  "
               componentMouseCursor="2" componentGroupName="modulator-13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiImageSliderResource="BlackAngleGrey"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="184 440 64 64"
               uiType="uiFixedImageSlider" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-4"
               componentMouseCursor="2" componentGroupName="modulator-7" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="Key Window" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="75000000" uiGroupOutlineColour2="75000000"
               uiGroupBackgroundColour1="ffffff" uiGroupBackgroundColour2="ffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="12 44 345 78" uiType="uiGroup" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-5" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="modulator-10" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="Voice tuning" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="75000000" uiGroupOutlineColour2="75000000"
               uiGroupBackgroundColour1="ffffff" uiGroupBackgroundColour2="ffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="12 36 100 266" uiType="uiGroup" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-6" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-6"
               componentMouseCursor="2" componentGroupName="modulator-10" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="Chorus" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="75000000" uiGroupOutlineColour2="75000000"
               uiGroupBackgroundColour1="a3a3a3" uiGroupBackgroundColour2="ffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="120 36 100 267" uiType="uiGroup" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="44" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="ChorusAmt"
             name="chorusAmt" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Chorus amount"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel127x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="16 52 64 64"
               uiType="uiImageSlider" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="47" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="ChorusWidth"
             name="chorusWidth" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="Chorus width"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="blackAngel127x4" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentRectangle="16 116 64 64"
               uiType="uiImageSlider" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-7" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-7"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="&#10;" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="0xffa3a3a3" uiGroupBackgroundColour2="0xffffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="120 84 368 367" uiType="uiGroup" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-8" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="FangSong;12;0;0;0;0;1" componentVisibleName="modulator-8"
               componentMouseCursor="2" componentGroupName="modulator-7" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Traditional Arabic;28;0;0;0;0;1"
               uiLabelText="Keymappings" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="-36 4 203 37" uiType="uiLabel" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-9" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-9"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="0xffa3a3a3" uiGroupBackgroundColour2="0xffffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="144 48 299 405" uiType="uiGroup" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-10" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-10"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="0xffa3a3a3" uiGroupBackgroundColour2="0xffffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="136 48 246 312" uiType="uiGroup" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-12" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="FangSong;12;0;0;0;0;1" componentVisibleName="modulator-8"
               componentMouseCursor="2" componentGroupName="modulator-10" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Utsaah;40;0;0;0;0;1"
               uiLabelText="Preset" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="12 0 203 37" uiType="uiLabel" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-11" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-11"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="0xffa3a3a3" uiGroupBackgroundColour2="0xffffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="392 48 505 528" uiType="uiGroup" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-14" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="FangSong;12;0;0;0;0;1" componentVisibleName="modulator-8"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Utsaah;40;0;0;0;0;1"
               uiLabelText="Samplezone" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentRectangle="-4 4 203 37" uiType="uiLabel" componentLayerUid="df67ac3415000000794d98a33e010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-13" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="0xffa3a3a3" uiGroupBackgroundColour2="0xffffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentRectangle="588 48 298 530" uiType="uiGroup" componentLayerUid="7cf529518a000000d05806b83d010000"/>
  </modulator>
</panel>
